#+TITLE: Call the Doctor - HDF(5) Clinic
#+STARTUP: overview
#+OPTIONS: num:nil H:2 toc:t
#+SETUPFILE: ../themes/theme-readtheorg.setup

* Clinic 2022-11-29
** Your questions
- Q :: ???
** Types in the HDF5 Data Model
*Reference:* C.J. Date: [[https://www.amazon.com/Foundation-Object-Relational-Databases-Manifesto/dp/0201309785][Foundation for Object / Relational Databases: The Third Manifesto]], 1998.

*** Data Model

In the realm of HDF5, there are usually _two_ data models in play.

**** HDF5 Data Model

A _data model_ is an abstract, self-contained, logical definition of
the data structures, data operators, etc., that together make up the
abstract machine with which users interact.

*Metaphor:* A data model in this sense is like a programming language,
whose constructs can be used to solve many specific problems but in
and of themselves have no direct connection with any such specific
problem.

This is the sense in which I will be using the term 'data model.'  I'm
talking about HDF5 files, groups, datasets, attributes, transfers,
etc.

An _implementation_ of a given data model is a physical realization on
a real machine of the components of the abstract machine that together
constitute that model. There are currently /two/ implementations of
the HDF5 data model:

1. HDF5 library + file format
2. Highly Scalable Data Service (HSDS)


**** Domain-specific Data Model

A data model is a model of the data (especially the persistent data)
of some particular domain or enterprise.

*Metaphor:* A data model in this sense is like a specific program
written in that language — it uses the facilities provided by the
model, in the first sense of that term, to solve some specific
problem.

We sometimes call this an _HDF5 profile_, the mapping of domain concepts
to HDF5 data model primitives.

*** Types

In essence, a type is a set of (at least two) _values_ — all possible
values of some specific kind: for example, all possible integers, or
all possible character strings, or all possible XML documents, or all
possible relations with a certain heading (and so on).

(Some people require types to be named and finite.)

To define a type, we must:

1. Specify the values that make up that type.
2. Specify the hidden physical representation for values of that
   type. (This is an implementation issue, not a data model issue.)
3. Specify a selector operator for selecting, or specifying, values
   of that type.
4. Specify admissible type conversions and renderings.
5. ...

**** Atomicity

The notion of atomicity has no absolute meaning; it just depends on
what we want to do with the data. Sometimes we want to deal with an
entire set of part numbers as a single thing, sometimes we want to
deal with individual part numbers within that set—but then we’re
descending to a lower level of detail, or lower level of abstraction.

**** Scalar vs. Nonscalar Types

Loosely, a type is scalar if it has no user visible components and
nonscalar otherwise. As atomicity, this has no absolute meaning.
Some people treat 'scalar' and 'atomic' as synonymous.

**** Values vs. Variables

Variables hold values. They have a location in space and time. Values
"transcend" space and time.

***** Questions

1. What is the type of an HDF5 dataset?
2. Is it a variable or a value?
3. Is it scalar/nonscalar/atomic?
4. What is an HDF5 datatype?
5. What is the type of an HDF5 attribute?
6. (How) Is an [[https://arxiv.org/abs/2109.11709][HDF5 user-defined function]] a dataset? (Extra credit!)

*** HDF5 Datatypes

The primary function of HDF5 datatypes is to describe the element type
and physical layout of datasets, attributes, and maps. Documentation
is a secondary function.

HDF5 supports a set of customizable basic types and a mechanism,
_datatype derivation_, to compose new datatypes from existing ones.
Any datatype derivation is rooted in atomic datatypes.

What's wrong with [[https://docs.hdfgroup.org/hdf5/develop/_h5_t__u_g.html#subsubsec_datatype_model_class][this figure]]? Nothing, but it's important to
understand the context.

1. What does 'Atomic' mean? (Not derived by composition. Composite =
   non-atomic = molecular)
2. Why is an =Enumeration= not 'Atomic'? (Derives from a integer
   datatype.)
3. Why are =Array= and =Variable Length= not 'Atomic'? (Ditto. Derive
   from other datatype instances)

'Atomic' is an overloaded term in this context.

- Attribute values are treated as atomic under transfer by the HDF5 library
- Dataset values are not atomic because of partial I/O
  - Selections
  - Fields (for compounds)
- Dataset element values are atomic, except, records (values of compound)

* Clinic 2022-10-04
** Your questions
- Q :: ???
** Last week's highlights
*** Announcements
**** [[https://www.hdfgroup.org/team/neil-fortner/][Neil Fortner]] is our new Chief HDF5 Software Architect
- Happy days!
**** Jobs @ The HDF Group
- [[https://www.hdfgroup.org/careers/hdf-software-engineer/][HDF Software Engineer]]
- [[https://www.hdfgroup.org/careers/hdf-cloud-software-engineer/][HDF Cloud Software Engineer]]
- [[https://www.hdfgroup.org/high-performance-computing-hpc-software-developer0822][HDF HPC Software Engineer]]
**** Webinar /Subfiling and Multiple dataset APIs: An introduction to two new features in HDF5 version 1.14/
- [[https://youtu.be/psl2iZmP2SY][Recording]]
- Slides: [[https://www.hdfgroup.org/wp-content/uploads/2022/09/HDF5-Subfiling-VFD.pdf][HDF5 Subfiling VFD]] & [[https://www.hdfgroup.org/wp-content/uploads/2022/09/Multi_Dataset_9_30_22.pdf][Multiple Dataset APIs]]
**** Recent [[https://docs.hdfgroup.org/hdf5/develop/][documentation updates]]
- [[https://docs.hdfgroup.org/hdf5/develop/_getting_started.html][Getting Started]]
- [[https://docs.hdfgroup.org/hdf5/develop/_u_g.html][User Guide]]
- [[https://docs.hdfgroup.org/hdf5/develop/_r_m.html][Reference Manual]] w/ language bindings (C, C++, Fortran, Java)
- Far from perfect but a big step forward
*** Forum
**** [[https://forum.hdfgroup.org/t/c-thread-unable-to-open-file/10267][C++ Thread unable to open file]]
- If you want threat-safety, use the C-API with a threat-safe build of the HDF5
  library!
- Other language bindings (C++, Java, Fortran) and the high-level libs. are *not*
  thread-safe
**** [[https://forum.hdfgroup.org/t/performance-improvements-for-many-small-datasets/10259][Performance improvements for many small datasets]]
- GraphQL is a bigger task
- John provided an Python asynchronous I/O [[https://gist.github.com/jreadey/8030e8a7fc3d0c9067c5a8d01d8507a8][example]]
  #+begin_src python :results output :exports both
  import asyncio
  import time

  async def say_after(delay, what):
      await asyncio.sleep(delay)
      print(what)

  async def main():
      task1 = asyncio.create_task(
          say_after(2, 'hello'))

      task2 = asyncio.create_task(
          say_after(1, 'world'))

      print(f"started at {time.strftime('%X')}")

      # Wait until both tasks are completed (should take
      # around 2 seconds.)
      await task1
      await task2

      print(f"finished at {time.strftime('%X')}")

  asyncio.run(main())
  #+end_src

  #+RESULTS:
  : started at 08:25:31
  : world
  : hello
  : finished at 08:25:33
- Noticeable speedup but not a panacea
#+begin_quote
Eventually I hope to have a version of =h5pyd= that supports =async= (or maybe
an entirely new package), that would make it a little easier to use.
#+end_quote
**** [[https://forum.hdfgroup.org/t/variable-length-data-in-hdf5-sketch-rfc-status/10284][Variable-Length Data in HDF5 Sketch RFC Status?]]
- [[https://docs.hdfgroup.org/hdf5/rfc/var_len_data_sketch_design_190715.pdf][RFC 2019-07-15 “Variable-Length Data in HDF5 Sketch Design"]]
- Dana?
**** [[https://forum.hdfgroup.org/t/compound-data-type-with-zero-sized-dimension/10269][Compound data type with zero-sized dimension]]
- HDF5 array datatype field w/ a degenerate dimension
  #+begin_example
  HDF5 "test.h5" {
  GROUP "/" {
     DATASET "dset" {
        DATATYPE  H5T_COMPOUND {
           H5T_ARRAY { [2][2] H5T_IEEE_F32LE } "arr1";
           H5T_ARRAY { [2][0] H5T_IEEE_F32LE } "arr2";
        }
        DATASPACE  SCALAR
     }
  }
  }
  #+end_example
- Use case?
**** [[https://forum.hdfgroup.org/t/metadata-and-structure-conventions/10287][Metadata and Structure conventions]]
- ???
*** Engineering Corner
- Featuring: [[https://github.com/derobins][Dana Robinson]]
- What's new?
** Starry HDF clinic line-up going forward
- 1st Tuesday of the month: Dana Robinson (HDF Engineering, Community)
- 2nd Tuesday: John Readey (HSDS, Cloud) – starting Oct 11
- 3rd Tuesday: Aleksandar Jelenak (Pythonic Science, Earth Science)
- 4th Tuesday: Scot Breitenfeld (HPC, Research)
- (In the unlikely event that there is a) 5th Tuesday: Gerd Heber + surprise
  guest

* Clinic 2022-09-27
** Your questions
- Q :: ???
** Last week's highlights
*** Announcements
**** Thanks to Scot Breitenfeld, Aleksandar Jelenak, and John Readey for stepping up!
- Thanks to Lori the recordings are available on [[https://www.youtube.com/channel/UCRhtsIZquL3r-zH-R-r9-tQ/videos][YouTube]].
**** Jobs @ The HDF Group
- [[https://www.hdfgroup.org/careers/hdf-software-engineer/][HDF Software Engineer]]
- [[https://www.hdfgroup.org/careers/hdf-cloud-software-engineer/][HDF Cloud Software Engineer]]
- [[https://www.hdfgroup.org/high-performance-computing-hpc-software-developer0822][HDF HPC Software Engineer]]
*** Forum
**** [[https://forum.hdfgroup.org/t/type-confusion-for-chunk-sizes/10235][Type confusion for chunk sizes]]
- Size matters =;-)=
- Use of =size= in APIs as =size_t= (C-type) or =hsize_t= (HDF5 API type)
- What the =size= unit?
  - Element count -> =hsize_t=
  - Storage bytes -> =size_t=
- And we still managed to make a holy mess of it...
**** [[https://forum.hdfgroup.org/t/zstandard-plugin-for-hdf5-does-not-allow-negative-compression-levels/10236][Zstandard plugin for HDF5 does not allow negative compression levels]]
- Community life
**** [[https://forum.hdfgroup.org/t/store-a-group-in-a-contiguous-file-space/10198][Store a group in a contiguous file space]]
#+begin_quote
Can one store all datasets in a group into a contiguous file space?
I have an application that reads groups as units and all the datasets
use the contiguous data layout. I believe this option, if available,
can yield a good read performance.
#+end_quote
- Interesting suggestions
  - Elena suggested to first create all datasets with =H5D_ALLOC_TIME_LATE=
  - Mark suggested to =H5Pget_meta_block_size= to set aside sufficient
    "group space" (Maybe also =H5Pset_est_link_info=?)
**** [[https://forum.hdfgroup.org/t/msc-nastran-h5/10248][MSC Nastran *.H5]]
- HDFView "in distress" - it's not a substitute for a domain-specific viz tool
- What do people think of HDFView?
**** [[https://forum.hdfgroup.org/t/make-hdfview-available-on-flathub-org/9476][Make HDFView available on Flathub.org]]
#+begin_quote
The app. has been accepted and is now available on flathub.org as
org.hdfgroup.HDFView! That is HDFView 3.2.0 with HDF5 + HDF4 support for
x86-64 & aarch64 CPUs.
#+end_quote
- Let's try it!
**** [[https://forum.hdfgroup.org/t/performance-improvements-for-many-small-datasets/10259][Performance improvements for many small datasets]]
- We just talked about multi-dataset I/O
- REST round-tripping
- GraphQL?
**** [[https://forum.hdfgroup.org/t/phdf-h5fflush-and-compression/10228][pHDF, =H5Fflush= and compression]]
- (Seemingly) Odd behavior of =H5Fflush= in parallel with vs. w/o compression.
*** Engineering Corner
- Featuring: [[https://github.com/derobins][Dana Robinson]]
- Is Dana back from his from trip?
** Tips, tricks, & insights
Nada. (Just catching up on the forum...)

* Clinic 2022-08-30
** Your questions
- Q :: ???
** Last week's highlights
*** Announcements
**** Webinar [[https://forum.hdfgroup.org/t/webinar-announcement-vscode-h5web-a-vscode-extension-to-explore-and-visualize-hdf5-files/10100][Vscode-h5web: A VSCode extension to explore and visualize HDF5 files]]
- August 31 (tomorrow) at 9:00 AM (CDT)
- Free [[https://us06web.zoom.us/meeting/register/tZElcOqqrT0vG9R16hiZjILDnSZwPekwC49A][registration]]
**** Jobs @ The HDF Group
- [[https://www.hdfgroup.org/careers/hdf-software-engineer/][HDF Software Engineer]]
- [[https://www.hdfgroup.org/careers/hdf-cloud-software-engineer/][HDF Cloud Software Engineer]]
- [[https://www.hdfgroup.org/high-performance-computing-hpc-software-developer0822][HDF HPC Software Engineer]]
**** New RFC
- [[https://docs.hdfgroup.org/hdf5/rfc/Terminal_VOL_Connector_Feature_Flags.pdf][Terminal VOL Connector Feature Flags]]
- How do I know if a VOL connector implements everything I need for my
  application?
*** Forum
Nothing stood out.
*** Engineering Corner
- Featuring: [[https://github.com/derobins][Dana Robinson]]
- [[https://forum.hdfgroup.org/t/what-do-you-want-to-see-in-hdf5-2-0/10003][What do you want to see in “HDF5 2.0”?]]
- What else is new?

** Tips, tricks, & insights
*** Where is the "official" HDF5 standard?
- My colleague Aleksandar Jelenak just pointed me to [[https://www.earthdata.nasa.gov/esdis/esco/standards-and-references/hdf5][HDF5 Data Model, File
  Format and Library—HDF5 1.6]]
  - An uncluttered and clear presentation
  - Needs to be updated (e.g., VOL, HSDS) and revised, but still accurate
- The HDF Group maintains this [[https://docs.hdfgroup.org/hdf5/develop/][HDF5 documentation]]
*** Proposed HDF Clinic format change
- Four themed events per month:
  - Ecosystem (Aleksandar Jelenak) :: HDF5 & Python, R, Julia, other formats &
    frameworks, etc.
  - HSDS (John Readey) :: HDF5 & Cloud, Kubernetes, server-less, etc.
  - HPC (Scot Breitenfeld) :: Parallel I/O, file systems, DAOS, diagnostics,
    troubleshooting, etc.
  - Engineering (Dana Robinson) :: Everything about getting involved and
    contributing to HDF5, PRs, issues, releases, new features, etc.
- We might have to adjust the weekday/time
- Thoughts?

* Clinic 2022-08-23
** Your questions
- Q :: ???
** Last week's highlights
*** Announcements
**** Webinar [[https://forum.hdfgroup.org/t/webinar-announcement-vscode-h5web-a-vscode-extension-to-explore-and-visualize-hdf5-files/10100][Vscode-h5web: A VSCode extension to explore and visualize HDF5 files]]
- Aug 31, 2022 04:00 PM (Central) <-- Really?
- Free [[https://us06web.zoom.us/meeting/register/tZElcOqqrT0vG9R16hiZjILDnSZwPekwC49A][Registration]]
**** Jobs @ The HDF Group
- [[https://www.hdfgroup.org/careers/hdf-software-engineer/][HDF Software Engineer]]
- [[https://www.hdfgroup.org/careers/hdf-cloud-software-engineer/][HDF Cloud Software Engineer]]
- [[https://www.hdfgroup.org/high-performance-computing-hpc-software-developer0822][HDF HPC Software Engineer]]
**** New [[https://www.hdfgroup.org/2022/08/hsds-streaming/][blog post]] by Mr. HSDS (John Readey)
- HSDS Streaming
- Overcoming the =max_request_size= limit
- New performance numbers HSDS vs. HDF5 lib. and Mac Pro vs. [[https://hpdevone.com/][HP Dev One]]

*** Forum
**** [[https://forum.hdfgroup.org/t/allocating-chunks-in-a-specific-order/10086][Allocating chunks in a specific order?]]
- Use case: [[https://zarr.dev/zeps/draft/ZEP0002.html][Zarr shards]]
- No API currently
- Potential issues:
  - Relying on implementation details
  - Undesirable constraints on library and tool behavior
  - Performance impact
**** [[https://forum.hdfgroup.org/t/machine-readable-units-format/5480][Machine-readable units format?]]
- Blast from the past
- (Physical) Units are part of the datatype
  $1.0 \mathrm{[m]} \neq 1.0 \mathrm{[s]}$
- User-defined datatypes extend to user-defined units
- Datatype conversion pipeline extends to unit conversion pipeline
- Maybe time for another proposal attempt?
**** [[https://forum.hdfgroup.org/t/c-read-compound-dataset-without-taking-static-structure-for-different-fieldnames/10118][C++ Read Compound dataset without taking static structure for different fieldnames]]
#+begin_quote
I have multiple H5 files and i am creating a generic code where i need to read
specific field defined in input whether it will be an =array= or =double= or
=int=.
#+end_quote
- Great topic for tips and tricks...
*** Engineering Corner
- Featuring: [[https://github.com/derobins][Dana Robinson]]
- [[https://forum.hdfgroup.org/t/what-do-you-want-to-see-in-hdf5-2-0/10003][What do you want to see in “HDF5 2.0”?]]
- What else is new?

** Tips, tricks, & insights
*** HDF5 compound datatype introspection
- /What's known at compile time?/
  1. Field name(s) + in-memory type: =constexpr= or =template=
  2. Field name(s) only: dataype introspection
- _Datatype introspection "algorithm"_:
  1. Retrieve the field in-file datatype via [[https://docs.hdfgroup.org/hdf5/develop/group___c_o_m_p_e_n_u_m.html#gabe31b13b2b8bf29d1a4c3b04cf917c6c][=H5Tget_member_index=]] and
     [[https://docs.hdfgroup.org/hdf5/develop/group___c_o_m_p_o_u_n_d.html#gac8476d164fb972fbf7b8c4584b8e916b][=H5Tget_member_class=]]/[[https://docs.hdfgroup.org/hdf5/develop/group___c_o_m_p_o_u_n_d.html#gaf5de0eabe28246f040342e275b9a63eb][=H5Tget_member_type=]]
  2. Retrieve the in-memory (or /native/) datatype via [[https://docs.hdfgroup.org/hdf5/develop/group___h5_t.html#ga05b99133058637e8daa5d745381ddd3d][=H5Tget_native_type=]]
  3. Determine the size via [[https://docs.hdfgroup.org/hdf5/develop/group___h5_t.html#ga1b971589cd7a86f3e84affdee455564e][=H5Tget_size=]]
  4. Construct an in-memory compound datatype via [[https://docs.hdfgroup.org/hdf5/develop/group___h5_t.html#gaa9afc38e1a7d35e4d0bec24c569b3c65][=H5Tcreate=]]/[[https://docs.hdfgroup.org/hdf5/develop/group___c_o_m_p_o_u_n_d.html#ga487d8f64a76f48b6eeb7f402d3b8b081][=H5Tinsert=]]
  5. Allocate a buffer of the right size
  6. [[https://docs.hdfgroup.org/hdf5/develop/group___h5_d.html#ga8287d5a7be7b8e55ffeff68f7d26811c][=H5Dread=]] & parse the buffer

* Clinic 2022-08-16
** Your questions
- Q :: ???
** Last week's highlights
*** Announcements
- HDF5 1.13.2 is out. Get it [[https://github.com/HDFGroup/hdf5/releases/tag/hdf5-1_13_2][here]]!
  - Highlights: Onion VFD, Subfiling VFD
  - Dana?
*** Forum
**** [[https://forum.hdfgroup.org/t/collective-vds-creation/10075][Collective VDS creation]]
#+begin_quote
We have data scattered across thousands of processes. But each process does not
own an hyperslab of the data. It actually owns a somewhat random collection of
pieces of data, which are all hyperslabs. To write this data to a file
collectively, I first tried to make each process select a combination of
hyperslabs using =H5Scombine_hyperslab=.

...
Now I am trying to reproduce this behaviour using VDS: all pieces are written in
a dataset in disorder. Another dataset (virtual this time) maps all pieces in
the right order. It works when using 1 process!

*The problem: I am unable to create this VDS in a collective way.*

...
*-> is it possible to create a VDS collectively ?*
#+end_quote
- =H5Scombine_hyperslab= is for point selections only
- Neil's answer RE: VDS
  #+begin_quote
  For the VDS question: to create a VDS collectively every process needs to add
  every mapping. This conforms with the way collective metadata writes in HDF5
  generally work - every process is assumed to make exactly the same (metadata
  write) calls with exactly the same parameters. It would be possible to
  implement what you are describing as a high level routine which would call
  H5Pget_virtual then do an allgather on the VDS mappings, but for now it’s
  easiest to handle it in the user application.

  It’s also worth noting that there are some other limitations to parallel VDS
  I/O:

  - =printf= style mappings are not supported
  - The VDS must be opened collectively
  - When using separate source file(s), the source file(s) cannot be opened by
    the library while the VDS is open.
  - When using separate source file(s), data cannot be written through the VDS
    unless the mapping is equivalent to 1 process per source file
  - All I/O is independent internally (possible performance penalty)
  - Each rank does an independent open of each source file it accesses (possible
    performance penalty)

  I should also note that VDS is not currently tested in the parallel regression
  test suite so there may be other issues.
  #+end_quote
**** [[https://forum.hdfgroup.org/t/9bn-rows-sec-hdf5-support-for-all-python-datatypes/10046][9BN rows/sec + HDF5 support for all python datatypes]]
#+begin_quote
A minor update [[https://pypi.org/project/tablite/][tablite]] has reached 2k downloads in the past month, and now has
support for arbitrary python classes. (example [[https://github.com/root-11/tablite/blob/master/tests/test_api_basics.py#L110][1]])
#+end_quote
**** [[https://forum.hdfgroup.org/t/allocating-chunks-in-a-specific-order/10086][Allocating chunks in a specific order?]]
- Q :: Is there a way to allocate (not necessarily write) unfiltered chunks
  in a specific order?
- A :: Mimic w/ [[https://docs.hdfgroup.org/hdf5/develop/group___d_c_p_l.html#ga85ff7c9c827fa524041cd58c199b77b8][=H5Pset_external=]]. Then what?
*** Engineering Corner
- Featuring: [[https://github.com/derobins][Dana Robinson]]
- [[https://forum.hdfgroup.org/t/what-do-you-want-to-see-in-hdf5-2-0/10003][What do you want to see in “HDF5 2.0”?]]
- What else is new?
** Tips, tricks, & ruminations
*** Dealing w/ concurrency "in" HDF5: ZeroMQ
- *Source:* [[https://www.pythonforthelab.com/blog/using-pyzmq-for-inter-process-communication-part-1/][Using pyZMQ for inter-process communication: Part 1]]
#+begin_src python
from datetime import datetime
import h5py
from time import sleep
import zmq

context = zmq.Context()
socket = context.socket(zmq.SUB)
socket.connect("tcp://localhost:5555")
socket.setsockopt(zmq.SUBSCRIBE, b'camera_frame')
sleep(2)


with h5py.File('camera_data.hdf5', 'a') as file:
    now = str(datetime.now())
    g = file.create_group(now)

    topic = socket.recv_string()
    frame = socket.recv_pyobj()

    x = frame.shape[0]
    y = frame.shape[1]
    z = frame.shape[2]

    dset = g.create_dataset('images', (x, y, z, 1), maxshape=(x, y, z, None))
    dset[:, :, :, 0] = frame
    i=0
    while True:
        i += 1
        topic = socket.recv_string()
        frame = socket.recv_pyobj()
        dset.resize((x, y, z, i+1))
        dset[:, :, :, i] = frame
        file.flush()
        print('Received frame number {}'.format(i))
        if i == 50:
            break
#+end_src
- The HDF5 library as an application extension acts like a wall for threads
- Before that wall becomes more permeable, maybe client/server is the better
  approach?
- Let's have a forum discussion around a suitable HDF5 ZeroMQ protocol!
* Clinic 2022-08-09
** Your questions
- Q :: ???
** Last week's highlights
*** Announcements
- Webinar recording available now: [[https://www.youtube.com/watch?v=MMIlpx5YqFU][The Hermes Buffer Organizer]]
- [[https://www.hdfgroup.org/2022/08/cloud-storage-options-for-hdf5/][Cloud Storage Options for HDF5]] - a new blog post by Mr. HSDS (John Readey)
- Upcoming [[https://events.cels.anl.gov/event/331/][HDF5 Training Workshop for intermediate and advanced users]] with
  Scot Breitenfeld (The HDF Group)
  - (Free) Registration deadline: Monday, August 15 2022
  - Event date/time: Aug 31, 2022, 10:00 AM - 3:00 PM (America/Chicago)
  - *Note:* The participation of foreign nationals is subject to certain
    restrictions. Check the [[https://events.cels.anl.gov/event/331/][website]] for details!
*** Forum
**** [[https://forum.hdfgroup.org/t/backporting-h5dchunk-iter-to-1-12-and-1-10/9971][Backporting =H5Dchunk_iter= to 1.12 and 1.10?]]
- Great contribution by [[https://github.com/mkitti][Mark Kittisopikul]]
- Let's do more of this!
**** [[https://forum.hdfgroup.org/t/using-hdf5-for-file-backed-array/10056][Using HDF5 for file backed Array]]
- Sample
  #+begin_src c++
  // Describe the dimensions. This example would mimic a 3D regular grid
  // of size 10 x 20 x 30 with another 2D array of 60 x 80 at each grid point.
  std::array<size_t, 3> tupleDimensions = {10, 20, 30};
  std::array<size_t, 2> componentDimensions = {60, 80};

  // Instantiate the DataArray class as an array of floats using the file
  // /tmp/foo.hdf5" as the hdf5 file and “/data” as the internal hdf5 path
  // to the actual data
  DataArray data("/tmp/foo.hdf5", "/data", tupleDimensions, componentDimensions);

  // Now lets loop over the data
  for(size_t z = 0; z < 10; z++)
    for(size_t y = 0; y < 20; y++)
      for(size_t x = 0; x < 30; x++)
      {
        size_t index = // compute proper index to the tuple
        for(size_t pixel = 0; pixel < 80 * 60; pixel++)
        {
          data[index + pixel] = 0;
        }
      }
  #+end_src
- Responses from Steven (Mr. [[http://h5cpp.org/][H5CPP]]) and Rick (Mr. [[https://www.hdfql.com/][HDFql]])
  - Sliding cursors are coming to HDFql
    #+begin_src c++
    int count;

    HDFql::execute("SELECT FROM dset INTO SLIDING(5) CURSOR");

    count = 0;
    // whenever cursor goes beyond last element, HDFql automatically retrieves
    // a new slice/subset thanks to an implicit hyperslab
    // (with start=[0,5,10,...], stride=5, count=1 and block=5)
    while(HDFql::cursorNext() == HDFql::Success)
    {
        if (*HDFql::cursorGetDouble() < 20)
        {
            count++;
        }
    }
    std::cout << "Count: " << count << std::endl;
    #+end_src
**** [[https://forum.hdfgroup.org/t/h5p-setfilter-cd-values-parameter/10055][=H5P_set_filter= =cd_values= Parameter]]
- Start w/ the [[https://portal.hdfgroup.org/display/support/Registered+Filter+Plugins][filter registry]]
- Filter maintainers are responsible, ultimately

*** Engineering Corner
- Featuring: Dana Robinson
- [[https://forum.hdfgroup.org/t/what-do-you-want-to-see-in-hdf5-2-0/10003][What do you want to see in “HDF5 2.0”?]]
- What else is new?
** Tips, tricks, & insights
*** Datatype conversion - reloaded
- Q :: What if source and destination datatype are of different size?
- A :: We use a conversion buffer!

#+begin_src C
#include "hdf5.h"

#include <assert.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>

// our conversion function
// HACK: in a production version, you would inspect SRC_ID and DST_ID, etc.
herr_t B32toU64(hid_t src_id, hid_t dst_id, H5T_cdata_t *cdata, size_t nelmts,
                size_t buf_stride, size_t bkg_stride, void *buf, void *bkg,
                hid_t dxpl)
{
  herr_t retval = EXIT_SUCCESS;

  switch (cdata->command)
  {
  case H5T_CONV_INIT:
    printf("Initializing conversion function...\n");
    // do non-trivial initialization here
    break;
  case H5T_CONV_CONV:
    printf("Converting...\n");
    uint32_t* p32 = (uint32_t*) buf;
    uint64_t* p64 = (uint64_t*) buf;
    // the conversion happens in-place
    // since we don't want to overwrite elements, we need to
    // shift/convert starting with the last element and work our
    // way to the beginning
    for (size_t i = nelmts; i > 0; --i)
    {
      p64[i-1] = (uint64_t) p32[i-1];
    }
    break;
  case H5T_CONV_FREE:
    printf("Finalizing conversion function...\n");
    // do non-trivial finalization here
    break;
  default:
    break;
  }

  return retval;
}

int main()
{
  int retval = EXIT_SUCCESS;

  // in-memory bitfield datatype
  hid_t btfd = H5T_NATIVE_B32;

  // in-file unsigned integer datatype
  hid_t uint = H5T_STD_U64LE;

  // register our conversion function w/ the HDF5 library
  assert(H5Tregister(H5T_PERS_SOFT, "B32->U64", btfd, uint,
                     &B32toU64) >= 0);

  // sample data
  uint32_t buf[32];
  for (size_t i = 0; i < 32; ++i)
  {
    buf[i] = 1 << i;
    printf("%u\n", buf[i]);
  }

  hid_t file = H5Fcreate("foo.h5", H5F_ACC_TRUNC, H5P_DEFAULT, H5P_DEFAULT);
  hid_t fspace = H5Screate_simple(1, (hsize_t[]) {32}, NULL);
  hid_t dset = H5Dcreate(file, "integers", uint, fspace,
                         H5P_DEFAULT, H5P_DEFAULT, H5P_DEFAULT);

  hid_t dxpl = H5Pcreate(H5P_DATASET_XFER);
  // we supply a conversion buffer where can convert up to 6 elements
  // at a time (48 = 6 x 8)
  unsigned char tconv[48];
  H5Pset_buffer(dxpl, 48, tconv, NULL);

  // alternative: the HDF5 library will dynamically allocate conversion
  // and background buffers if we pass NULL for the buffers
  // H5Pset_buffer(dxpl, 48, NULL, NULL);

  // the datatype conversion function will be invoked as part of H5Dwrite
  H5Dwrite(dset, btfd, H5S_ALL, H5S_ALL, dxpl, (void*) buf);

  H5Pclose(dxpl);
  H5Dclose(dset);
  H5Sclose(fspace);
  H5Fclose(file);

  // housekeeping
  assert(H5Tunregister(H5T_PERS_SOFT, "B32->U64", btfd, uint,
                     &B32toU64) >= 0);

  return retval;
}
#+end_src

* Clinic 2022-08-02
** Your questions
- Q ::
  #+begin_quote
  On the tar to h5 converter: Does the (standard) compactor simply skip the >64K
  tar file entries if ones are encountered (w/ log or error message), or must
  they all conform to 64K limit?  Also, what was the typical range on the number
  of files extracted/converted?  –Robert
  #+end_quote
- A :: Currently, the code will skip entries >64K, because the underlying
  =H5Dcreate= will fail. (The logic and code can be much improved.) It's better
  to first run =archive_checker_64k= and see if there are any size warnings.
  The =h5compactor= and =h5shredder= were successfully run on TAR archives with
  tens of millions of small images (<64K).
** Last week's highlights
*** Announcements
**** Webinar recording "An Introduction to HDF5 for HPC Data Models, Analysis, and Performance" [[https://youtu.be/Mt_v3yqUhCo][posted]].
**** [[https://forum.hdfgroup.org/t/webinar-announcement-the-hermes-buffer-organizer/10034][Webinar Announcement: The Hermes Buffer Organizer]]
- Friday, August 5, 2022 at 11:00 a.m. Central Time
- [[https://us06web.zoom.us/meeting/register/tZwpd-mspjgtGteAY18R-QTw51H3lLRB3fQr][Registration]]

*** Forum
**** [[https://forum.hdfgroup.org/t/variable-length-list-of-strings/10025][Variable length list of strings]]
- What's a string?
  - What the user meant: array of characters
- Ergo: list of variable-length strings ="="= list of arrays of characters of
  varying length
- This is *not* the same as an HDF5 dataset of variable-length strings
- Aleksandar's example:
  #+begin_src python :results none
  import h5py
  import numpy as np
  import string

  vlength = [3, 8, 6, 4]
  dt = h5py.vlen_dtype(np.dtype('S1'))
  with h5py.File('char-ragged-array.h5', 'w') as f:
      dset = f.create_dataset('ragged_char_array', shape=(len(vlength),),
                               dtype=dt)
      for _ in range(len(vlength)):
          dset[_] = np.random.choice(list(string.ascii_lowercase),
                                     size=vlength[_]).astype('S1')
  #+end_src
  - Sample output:
    #+begin_example
    HDF5 "char-ragged-array.h5" {
    GROUP "/" {
       DATASET "ragged_char_array" {
          DATATYPE  H5T_VLEN { H5T_STRING {
             STRSIZE 1;
             STRPAD H5T_STR_NULLPAD;
             CSET H5T_CSET_ASCII;
             CTYPE H5T_C_S1;
          }}
          DATASPACE  SIMPLE { ( 4 ) / ( 4 ) }
          DATA {
          (0): ("g", "b", "x"), ("k", "j", "u", "u", "i", "p", "a", "t"),
          (2): ("t", "i", "b", "x", "u", "y"), ("q", "i", "r", "h")
          }
       }
    }
    }
    #+end_example

*** Engineering Corner
- Featuring: Dana Robinson
- [[https://forum.hdfgroup.org/t/what-do-you-want-to-see-in-hdf5-2-0/10003][What do you want to see in “HDF5 2.0”?]]
- Releases on track?

** Tips, tricks, & insights
*** 9BN rows/sec + HDF5 support for all python datatypes
- [[https://forum.hdfgroup.org/t/9bn-rows-sec-hdf5-support-for-all-python-datatypes/10046][Forum post]]
- [[https://github.com/root-11/tablite][Tablite]] GitHub repo
- [[https://github.com/root-11/tablite/blob/master/tutorial.ipynb][Tutorial]]
- Where is HDF5?
  #+begin_src python
  from tablite.config import H5_STORAGE
  H5_STORAGE
  #+end_src

  #+RESULTS:
  =PosixPath('/tmp/tablite.hdf5')=
- Simple schema: tables -> columns -> pages (via attributes)
  #+begin_example
  /                        Group
  /column                  Group
  /column/1                Dataset {NULL}
  /column/16               Dataset {NULL}
  ...
  /page                    Group
  /page/1                  Dataset {3/Inf}
  /page/2                  Dataset {3/Inf}
  ...
  /table                   Group
  /table/1                 Dataset {NULL}
  /table/3                 Dataset {NULL}
  ...
  #+end_example

* Clinic 2022-07-26
** Corrections
- The VSCode extension for HDF5 /works/ with NetCDF-4 files
  - I grabbed a netCDF-3 file. Duh!

** Your questions
- Q :: ???

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/webinar-announcement-an-introduction-to-hdf5-for-hpc-data-models-analysis-and-performance/9947][Webinar Announcement: An Introduction to HDF5 for HPC Data Models, Analysis, and Performance]]
- Presented by The HDF Group's one and only Scot Breitenfeld
- Final boarding call: [[https://events.cels.anl.gov/event/277/][Register here!]]
**** [[https://forum.hdfgroup.org/t/vfd-swmr-beta-2-release/9796][VFD SWMR beta 2 release]]
- Testers wanted
**** New blog post [[https://www.hdfgroup.org/2022/07/hsds-docker-images/][HSDS Docker Images]] by Mr. HSDS (John Readey)
- America runs on Dunkin, HSDS runs on Docker...
- DockerHub, container registries, Kubernetes,etc.

*** Forum
**** [[https://forum.hdfgroup.org/t/loking-for-an-hdf5-version-compatible-with-go1-9-2/10021][Looking for an hdf5 version compatible with go1.9.2]]
- Go HDF5! =;-)=
  - Old software...

*** Engineering Corner
- Featuring: Dana Robinson
- [[https://forum.hdfgroup.org/t/what-do-you-want-to-see-in-hdf5-2-0/10003][What do you want to see in “HDF5 2.0”?]]
  - Evolution not revolution
  - "Lessons learned" release

** Tips, tricks, & insights
*** Little HDF5 helpers for ML
- Use case: Tons of tiny image, audio, or video files
  - Poor ML training I/O performance, especially against PFS
  - Can't read w/o un-=tar=-ing (uncompressing)
  - No parallel I/O
- [[https://github.com/HDFGroup/tar2h5][=tar2h5=]] - convert Tape ARchives to HDF5 files
  - Different optimizations
    - Size optimization (compact datasets)
    - Duplicate removal (SHA-1 checksum)
    - Compression

* Clinic 2022-07-19
** Your questions
- Q :: ???

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/webinar-announcement-an-introduction-to-hdf5-for-hpc-data-models-analysis-and-performance/9947][Webinar Announcement: An Introduction to HDF5 for HPC Data Models, Analysis, and Performance]]
- Presented by The HDF Group's one and only Scot Breitenfeld
- [[https://events.cels.anl.gov/event/277/][Register here!]]
**** [[https://forum.hdfgroup.org/t/vfd-swmr-beta-2-release/9796][VFD SWMR beta 2 release]]
- Testers wanted
**** [[https://forum.hdfgroup.org/t/vscode-extension-for-hdf5/9769][VSCode extension for HDF5]]
- Brief demo later

*** Forum
The week before last was quiet, but then it got hot...
**** [[https://forum.hdfgroup.org/t/ros3-driver-breaks-randomly/9957][=ros3= driver breaks randomly]]
- Not properly recovering from S3 read failures
  - No retries
- On Python, [[https://filesystem-spec.readthedocs.io/en/latest/][=fsspec=]] might be the better option for the time being
**** [[https://forum.hdfgroup.org/t/memory-mapping-paging-via-hdf5-vfd/9052][Memory mapping / Paging via HDF5 & VFD?]]
- Goes back to a HUG 2021 discussion
- Maybe we don't need memory mapping API, but
  #+begin_quote
  What we really need is the ability to allocate space in the HDF5 file without
  writing. (@kittisopikulm)
  #+end_quote
- Interesting idea
**** [[https://forum.hdfgroup.org/t/possibility-of-backporting-h5dchunk-iter-to-1-12/9971][Possibility of backporting =H5Dchunk_iter= to 1.12?]]
- 1.12 is nearing EOL
- 1.10 might be a better target
**** [[https://forum.hdfgroup.org/t/hdfview-on-windows-not-displaying-fixed-length-utf-8-string-correctly/9962][HDFView on Windows not displaying fixed length UTF-8 string correctly]]
- Probably an HDFView bug
**** [[https://forum.hdfgroup.org/t/virtual-datasets-in-hsds/9964][Virtual datasets in HSDS?]]
- Not currently supported in HSDS, but...
  - You can fake it via [[https://github.com/HDFGroup/hsds/blob/master/docs/design/single_object/SingleObject.md][=H5D_CHUNKED_REF_INDIRECT=]]
**** [[https://forum.hdfgroup.org/t/implement-hdf5-in-eclipse-cdt-for-a-c-tool/9990][implement hdf5 in eclipse cdt for a c tool]] and [[https://forum.hdfgroup.org/t/eclipse-mingw-32-need-help/9991][eclipse mingw 32 need help]]
- Are we failing developers?

** Tips, tricks, & insights
**** First look at the [[https://forum.hdfgroup.org/t/vscode-extension-for-hdf5/9769][VSCode extension for HDF5]]
- If you don't have a local installation of VSCode, you can use [[https://github.com/features/codespaces][GitHub
  Codespaces]] and run in a Web browser
- Or roll your own w/ [[https://github.com/coder/code-server][=code-server=]] and run in the browser
[[file:./img/VSCode-ext-hdf5.png]]

* Clinic 2022-07-12
** Your questions
- Q :: ???

** Last week's highlights
*** Announcements
**** [[https://www.hdfgroup.org/2022/07/deep-dive-hsds-container-types/][Deep Dive: HSDS Container Types]]
- New blog post by Mr. HSDS (John Readey)
**** [[https://forum.hdfgroup.org/t/webinar-announcement-an-introduction-to-hdf5-for-hpc-data-models-analysis-and-performance/9947][Webinar Announcement: An Introduction to HDF5 for HPC Data Models, Analysis, and Performance]]
- Presented by The HDF Group's one and only Scot Breitenfeld
- [[https://events.cels.anl.gov/event/277/][Register here!]]
**** [[https://forum.hdfgroup.org/t/vfd-swmr-beta-2-release/9796][VFD SWMR beta 2 release]]
- Testers wanted

*** Forum
It was all quiet on the forum. What happened? Everybody must be happy, I
guess...

** Tips, tricks, & insights
*** HDF5-style datatype conversion
- *Use case:* A lot of data coming from devices in physical experiments are
  bitfields. To be useful for analysts, the data needs to be converted to
  engineering types and units. Does that mean we always must store 2 or more
  data copies?
  - There is no intrinsic reason to have multiple copies, but there might be
    other reasons, e.g., performance, to maintain multiple copies.
  - How do we pull this off? Filters? (No! Same datatype...)
    - /Datatype transformations!/
- *Example:* Use an in-memory bitfield representation and store as a compound w/
  two fields
- =Code=
  #+begin_src C
  #include "hdf5.h"

  #include <assert.h>
  #include <stdint.h>
  #include <stdio.h>
  #include <stdlib.h>

  // our compound destination type in memory
  typedef struct
  {
    uint16_t low;
    uint16_t high;
  } low_high_t;

  // our conversion function
  // HACK: in a production version, you would inspect SRC_ID and DST_ID, etc.
  herr_t bits2cmpd(hid_t src_id, hid_t dst_id, H5T_cdata_t *cdata, size_t nelmts,
                   size_t buf_stride, size_t bkg_stride, void *buf, void *bkg,
                   hid_t dxpl)
  {
    herr_t retval = EXIT_SUCCESS;

    switch (cdata->command)
    {
    case H5T_CONV_INIT:
      printf("Initializing conversion function...\n");
      // do non-trivial initialization here
      break;
    case H5T_CONV_CONV:
      printf("Converting...\n");
      // the conversion function simply splits and swaps bitfield halves
      low_high_t* ptr = (low_high_t*) buf;
      for (size_t i = 0; i < nelmts; ++i)
      {
        uint16_t swap = ptr[i].low;
        ptr[i].low = ptr[i].high;
        ptr[i].high = swap;
      }
      break;
    case H5T_CONV_FREE:
      printf("Finalizing conversion function...\n");
      // do non-trivial finalization here
      break;
    default:
      break;
    }

    return retval;
  }

  int main()
  {
    int retval = EXIT_SUCCESS;

    // in-memory bitfield datatype
    hid_t btfd = H5T_NATIVE_B32;

    // compound of two unsigned shorts
    hid_t cmpd = H5Tcreate(H5T_COMPOUND, 4);
    H5Tinsert(cmpd, "low", 0, H5T_NATIVE_USHORT);
    H5Tinsert(cmpd, "high", 2, H5T_NATIVE_USHORT);

    // register our conversion function w/ the HDF5 library
    assert(H5Tregister(H5T_PERS_SOFT, "bitfield->compound", btfd, cmpd,
                       &bits2cmpd) >= 0);
    // notice that the conversion function is its own inverse
    assert(H5Tregister(H5T_PERS_SOFT, "compound->bitfield", cmpd, btfd,
                       &bits2cmpd) >= 0);

    // sample data
    uint32_t buf[32];
    for (size_t i = 0; i < 32; ++i)
    {
      buf[i] = 1 << i;
      printf("%ud\n", buf[i]);
    }

    // we could check the conversion in-memory, in-place
    //H5Tconvert(btfd, cmpd, 32, buf, NULL, H5P_DEFAULT);

    hid_t file = H5Fcreate("cmpd.h5", H5F_ACC_TRUNC, H5P_DEFAULT, H5P_DEFAULT);
    hid_t fspace = H5Screate_simple(1, (hsize_t[]) {32}, NULL);
    hid_t dset = H5Dcreate(file, "shorties", cmpd, fspace,
                           H5P_DEFAULT, H5P_DEFAULT, H5P_DEFAULT);

    // the datatype conversion function will be invoked as part of H5Dwrite
    H5Dwrite(dset, btfd, H5S_ALL, H5S_ALL, H5P_DEFAULT, (void*) buf);

    // the datatype conversion function will be invoked as part of H5Dread
    H5Dread(dset, btfd, H5S_ALL, H5S_ALL, H5P_DEFAULT, (void*) buf);

    for (size_t i = 0; i < 32; ++i)
      printf("%ud\n", buf[i]);

    H5Dclose(dset);
    H5Sclose(fspace);
    H5Fclose(file);

    // housekeeping
    assert(H5Tunregister(H5T_PERS_SOFT, "compound->bitfield", cmpd, btfd,
                       &bits2cmpd) >= 0);
    assert(H5Tunregister(H5T_PERS_SOFT, "bitfield->compound", btfd, cmpd,
                       &bits2cmpd) >= 0);

    H5Tclose(cmpd);

    return retval;
  }
  #+end_src
- Datatype conversions do what it says on the tin and sometimes are just what
  you need
- Don't confuse them with /filters/!
  - With [[https://github.com/lucasvr/hdf5-udf][HDF5-UDF]] it is possible to implement datatype conversions via filters,
    but at the expense of additional datasets

* Clinic 2022-07-05
** Your questions
- Q :: ???

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/vfd-swmr-beta-2-release/9796][VFD SWMR beta 2 release]]
- Testers wanted
*** Forum
**** [[https://forum.hdfgroup.org/t/hdf5-1-10-1-12-dramatic-drop-of-performance-vs-1-8/9896][HDF5 1.10, 1.12 dramatic drop of performance vs 1.8]]
- Recap: =h5open_f/h5close_f= overhead, chunk size 1 issue...
- User provided a nice table
  | *chunk size* | *data* (bytes) | *metadata* (bytes) |
  |--------------+----------------+--------------------|
  |            1 |         120000 |            1128952 |
  |           50 |         120000 |              26456 |
  |         2048 |         122880 |               3400 |
  |       131072 |         524288 |               3400 |
- No compression
- Steven Varga suggested that
  1. The application might benefit from a dedicated I/O handler, and he provided
     a multithreaded queue example
  2. Data generationn can be decoupled from recording via ZeroMQ, and he
     provided an example with the generator (sender) in Fortran and the recorder
     (receiver) in C
**** Issue w/ [[https://forum.hdfgroup.org/t/memory-backed-files/9878][memory backed files]]
- We are able to reproduce the issue!
- Slowdown in =H5Oget_info= because of =H5O_INFO_ALL= option
- The difference between the in-file and in-memory image sizes can be explained
  by incremental (re-)allocation in the core VFD
- The real issue is this:
  #+begin_example
  HDF5-DIAG: Error detected in HDF5 (1.13.2-1) thread 0:
  #000: H5F.c line 837 in H5Fopen(): unable to synchronously open file
    major: File accessibility
    minor: Unable to open file
  #001: H5F.c line 797 in H5F__open_api_common(): unable to open file
    major: File accessibility
    minor: Unable to open file
  #002: H5VLcallback.c line 3686 in H5VL_file_open(): open failed
    major: Virtual Object Layer
    minor: Can't open object
  #003: H5VLcallback.c line 3498 in H5VL__file_open(): open failed
    major: Virtual Object Layer
    minor: Can't open object
  #004: H5VLnative_file.c line 128 in H5VL__native_file_open(): unable to open file
    major: File accessibility
    minor: Unable to open file
  #005: H5Fint.c line 1964 in H5F_open(): unable to read superblock
    major: File accessibility
    minor: Read failed
  #006: H5Fsuper.c line 450 in H5F__super_read(): unable to load superblock
    major: File accessibility
    minor: Unable to protect metadata
  #007: H5AC.c line 1396 in H5AC_protect(): H5C_protect() failed
    major: Object cache
    minor: Unable to protect metadata
  #008: H5C.c line 2368 in H5C_protect(): can't load entry
    major: Object cache
    minor: Unable to load metadata into cache
  #009: H5C.c line 7315 in H5C__load_entry(): incorrect metadata checksum after all read attempts
    major: Object cache
    minor: Read failed
  #+end_example
- It appears that the superblock checksum (in versions 2, 3) is not correctly
  set or updated
- Maybe this is a corner case of the use of HDF5 file image w/ core VFD?
  Investigating...
**** [[https://forum.hdfgroup.org/t/authenticated-aws-s3/9924][Authenticated AWS S3]]
- Use of the read-only S3 VFD w/ Python?
#+begin_quote
The ros3 driver is very slick. It works great for public h5 files.

I am trying to perform a read of an H5 file using ros3 that requires
authentication credentials.  I have been successful in using h5ls/h5dump in
accessing an h5 file against an authenticated AWS S3 call using --vfd=ros3 and
--s3-cred=(<region,<key_id>,<key_secret>).

However, I cannot get this to work with h5py.
#+end_quote
- The user answered his on question, =h5py= does support this VFD and AWS
  credentials as documented [[https://docs.h5py.org/en/stable/high/file.html#file-drivers][here]]
- He also commented that this is not limited to AWS S3, but also works with
  other S3-compatible storage options
- And he's looking for [[https://forum.hdfgroup.org/t/hsds-on-google-cloud-platform/9925][HSDS on GCP (Google Cloud)]]

** Tips, tricks, & insights
*** What others are doing with HDF5
- Subscribe for alerts on [[https://scholar.google.com/][Google Scholar]]
  - Alert query :: =hdf5=
  - Email :: ...
  - Type :: Most relevant results
- You will get 2-4 emails a week with about 6-10 citations
**** Recent highlights
- [[https://www.osti.gov/biblio/1867160][Fission Matrix Processing Using the MCNP6.3 HDF5 Restart File]]
  - See the Wikipedia article for [[https://en.wikipedia.org/wiki/Monte_Carlo_N-Particle_Transport_Code#:~:text=Monte%20Carlo%20N%2DParticle%20Transport%20(MCNP)%20is%20a%20general,by%20Los%20Alamos%20National%20Laboratory.][Monte Carlo N-Particle Transport Code]]
- [[https://sdm.lbl.gov/~sbyna/research/papers/2022/2022-FAST-WIP-Posters-ProvIO-Abstract.pdf][Towards A Practical Provenance Framework for Scientific Data on HPC Systems]]
  #+begin_quote
  So we derive an I/O-centric provenance model, which enriches the W3C PROV
  standard with a variety of concrete sub-classes to describe both the data
  and the associated I/O operations and execution environments precisely with
  extensibility.

  Moreover, based on the unique provenance model, we are building a practical
  prototype which includes three major components: (1) Provenance Tracking for
  capturing diverse I/O operations; (2) Provenance Storage for persisting the
  captured provenance information as standard RDF triples; (3) User Engine
  for querying and visualizing provenance.
  #+end_quote
- [[http://www.cs.iit.edu/~scs/assets/files/stimulus2022.pdf][Stimulus: Accelerate Data Management for Scientific AI applications in HPC]]
  #+begin_quote
  ... a lack of support for scientific data formats in AI frameworks.  We need a
  cohesive mechanism to effectively integrate at scale complex scientific data
  formats such as HDF5, PnetCDF, ADIOS2, GNCF, and Silo into popular AI
  frameworks such as TensorFlow, PyTorch, and Caffe. To this end, we designed
  Stimulus, a data management library for ingesting scientific data effectively
  into the popular AI frameworks.  We utilize the StimOps functions along with
  StimPack abstraction to enable the integration of scientific data formats
  with any AI framework. The evaluations show that Stimulus outperforms several
  large-scale applications with different use-cases such as Cosmic Tagger
  (consuming HDF5 dataset in PyTorch), Distributed FFN (consuming HDF5 dataset
  in TensorFlow), and CosmoFlow (converting HDF5 into TFRecord and then
  consuming that in TensorFlow) by 5.3x, 2.9x, and 1.9x respectively with ideal
  I/O scalability up to 768 GPUs on the Summit supercomputer. Through Stimulus,
  we can portably extend existing popular AI frameworks to cohesively support
  any complex scientific data format and efficiently scale the applications on
  large-scale supercomputers.
  #+end_quote
- [[https://meetingorganizer.copernicus.org/EGU22/EGU22-11201.html][DIARITSup: a framework to supervise live measurements, Digital Twins modelscomputations and predictions for structures monitoring.]]
  #+begin_quote
  DIARITSup is a chain of various software following the concept of ”system of
  systems”. It interconnects hardware and software layers dedicated to in-situ
  monitoring of structures or critical components. It embeds data assimilation
  capabilities combined with specific Physical or Statistical models like
  inverse thermal and/or mechanical ones up to the predictive ones. It aims at
  extracting and providing key parameters of interest for decision making
  tools. Its framework natively integrates data collection from local sources
  but also from external systems. DIARITSup is a milestone in our roadmap
  for SHM Digital Twins research framework. Furthermore, it intends providing
  some useful information for maintenance operations not only for surveyed
  targets but also for deployed sensors.

  Meanwhile, a recorder manage the recording of all data and metadata in the
  Hierarchical Data Format (HDF5). HDF5 is used to its full potential with its
  Single-Writer-Multiple-Readers feature that enables a graphical user interface
  to represent the saved data in real-time, or the live computation of SHM
  Digital Twins models for example. Furthermore, the flexibility of HDF5 data
  storage allows the recording of various type of sensors such as punctual
  sensors or full field ones.
  #+end_quote
- It's impossible to keep up, but always a great source of inspiration!

*** Next time: datatype conversions
* Clinic 2022-06-27
** Your questions
- Q :: ???

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/vfd-swmr-beta-2-release/9796][VFD SWMR beta 2 release]]
- Testers wanted
**** [[https://www.hdfgroup.org/2022/06/2022-hdf5-release-schedule/][2022 HDF5 Release Schedule]] announced
[[file:./img/release-schedule.png]]
- HDF5 1.8.x and 1.12.x are coming to an end (1.8.23, 1.12.3)
- HDF5 1.10.x and 1.14.x are here to stay for a while
  - Performance work over the Summer
  - HDF5 1.13.2: Selection I/O, VFD SWMR, Onion VFD (late July/early August)
  - HDF5 1.13.3: Multi-dataset I/O, Subfiling (late September/early October)
  - HDF5 1.14.0 in late December/early January
**** We are hiring
- [[https://forum.hdfgroup.org/t/director-of-software-engineering-the-hdf-group/9892][Director of Software Engineering]]
- [[https://forum.hdfgroup.org/t/chief-hdf5-software-architect-the-hdf-group/9893][Chief HDF5 Software Architect]]
- Interested in working for The HDF Group? [[mailto:jobs@hdfgroup.org][/Send us your resume!/]]
**** [[https://www.hdfgroup.org/2022/06/speed-up-cloud-access-using-multiprocessing/][Speed up cloud access using multiprocessing!]] by John Readey (Mr. HSDS)
#+begin_quote
Each file is slightly more than 1 TB in size, so downloading the entire
collection would take around a month with a 80 Mbit/s connection. Instead, let’s
suppose we need to retrieve the data for just one location index, but for the
entire time range 2007-2014. How long will this take?
#+end_quote

*** Forum
**** [[https://forum.hdfgroup.org/t/how-efficient-is-hdf5-for-data-retrieval-as-opposed-to-data-storage/6362][How efficient is HDF5 for data retrieval as opposed to data storage?]]
#+begin_quote
I would like to a keyed 500GB table into HDF5, and then then retrieve rows
matching specific keys.

For an HDF5 file, items like all the data access uses an integer “row” number,
so seems like I would have to implement a 'key to row number map" outside of
HDF5.

Isn’t retrieval more efficient with a distributed system like Spark which uses
HDFS?
#+end_quote

- Too open-ended question w/o additional context
- There are no querying or indexing capabilities built into HDF5
- Can something like this be implemented on top of HDF5? It's been done many
  times, /for specific requirements./
- Are other tools more efficient? Maybe. Maybe not.

**** [[https://forum.hdfgroup.org/t/hdf5-1-10-1-12-dramatic-drop-of-performance-vs-1-8/9896][HDF5 1.10, 1.12 dramatic drop of performance vs 1.8]]
- Profiling ([[https://github.com/gperftools/gperftools][gperftools]]) revealed
  #+begin_quote
  85% of the time is spent in =H5Fget_obj_count=.
  #+end_quote
- The user correctly inferred that this is related to frequent
  =h5open_f/h5close_f=, and [[https://forum.hdfgroup.org/t/h5f-get-obj-count-f-extremely-buggy/9678][an issue]] we covered in the past
  - Bug in =h5f_get_obj_count_f= & fixed in [[https://github.com/HDFGroup/hdf5/pull/1657][PR#1657]] by Scot.
- After applying that fix performance is on par w/ 1.8
- Happy ending! (almost)
  #+begin_example
  h5stat output:

  ...
  Summary of file space information:
  File metadata: 1201344 bytes
  Raw data: 99260 bytes
  Amount/Percent of tracked free space: 0 bytes/0.0%
  Unaccounted space: 17392 bytes
  Total space: 1317996 bytes
  #+end_example
  - Greater than 1:10 data to metadata ratio
    - Usually means trouble
  - Culprit: chunk size of 1

**** Issue w/ [[https://forum.hdfgroup.org/t/memory-backed-files/9878][memory backed files]]
- Still puzzled

** Tips, tricks, & insights
*** SWMR (old) and compression "issues" - take 2
- Free-space management is disabled in the original SWMR implementation
- Can lead to file bloat when compression is enabled & overly aggressive
  flushing
- **Question:** How does the new SWMR VFD implementation behave?
  - Untested, but should work in principle
- There is an updated [[https://github.com/HDFGroup/hdf5/blob/feature/vfd_swmr/doc/VFD_SWMR_RFC_200916.pdf][VFD SWMR RFC]]

* Clinic 2022-06-21
** Your questions
- Q :: ???

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/vfd-swmr-beta-2-release/9796][VFD SWMR beta 2 release]]
- Testers wanted
**** [[https://forum.hdfgroup.org/t/release-of-hdfview-3-1-4-newsletter-186-the-hdf-group/9874][HDFView 3.1.4 released]]
- Some confusion around versioning
  - HDFView 3.2.x series is based on the HDF5 1.12.x releases.
  - HDFView 3.1.x series is based on the HDF5 1.10.x releases.
  - HDFView 3.3.x series will be based on the future 1.14.x releases.
- Known issue in 3.2.0: HDFView crashes on an attribute of VLEN of REFERENCE
*** Forum
**** [[https://forum.hdfgroup.org/t/check-if-two-identifiers-refer-to-the-same-object/7160][Check if two identifiers refer to the same object]]
- [[https://docs.hdfgroup.org/hdf5/develop/group___h5_i.html][=H5I=]] module
- Identifiers are transient
- Pre-defined and user-defined identifier types
- Pre-defined IDs identify HDF5 objects but also VFL and VOL plugins, etc.
  - See [[https://docs.hdfgroup.org/hdf5/develop/_h5_ipublic_8h.html#a13afe14178faf81b89fa2167e7ab832b][=H5I_type_t=]]
- [[https://docs.hdfgroup.org/hdf5/develop/group___h5_i_u_d.html][User-defined ID]] types must be first registered w/ the library before use
  - Certain functions are only available for user-defined IDs
    #+begin_example
   [1] H5Iobject_verify: Object atom/Unable to find ID group information
       cannot call public function on library type
    #+end_example
- Assuming pre-defined HDF5 IDs for objects, use [[https://docs.hdfgroup.org/hdf5/develop/group___h5_o.html#title4][=H5Oget_info=]] to retrieve a
  structure that contains an address or token which can then be compared
**** Issue w/ [[https://forum.hdfgroup.org/t/memory-backed-files/9878][memory backed files]]
- Workflow:
  1. Create a memory-backed file (w/ core VFD)
  2. Make changes
  3. Get a file image (in memory) and share w/ another process (shared mem. or
     network)
  4. Create another memory-backed file from this file image
- Should work just fine w/ =H5P[g,s]et_file_image=
**** [[https://forum.hdfgroup.org/t/multithread-writing-to-two-files/9850][Multithread Writing to two files]]
- Some users don't know how to help themselves.

** Tips, tricks, & insights
*** SWMR (old) and compression "issues"
- Reports:
  - [[https://forum.hdfgroup.org/t/bug-compression-doesnt-compress-data-on-swmr/5280][Compression doesn’t compress data on SWMR]]
  - [[https://forum.hdfgroup.org/t/swmr-with-compression-fails-to-compress/8428][SWMR with Compression Fails to Compress]]
- Elena answered in both cases
- /It's not a bug but a "feature"/
- File space recycling is disabled in SWMR mode
- Every time a dataset chunk is flushed, new space is allocated in the file
- How to alleviate?
  - Keep the chunk in cache & flush only once it's baked
  - Don't compress edge chunks
- *Bigger picture:* We need a _feature (in-)compatibility matrix_! Long overdue!
- Question: How does the new SWMR implementation behave?

* Clinic 2022-06-14
** Your questions
- Q :: ???

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/hermes-0-7-0-beta-release/9853][Hermes 0.7.0-beta release]]
- Bug fixes
- [[https://developers.google.com/optimization][Google OR tools]] replaced by [[https://www.gnu.org/software/glpk/][GLPK]]
**** [[https://forum.hdfgroup.org/t/vfd-swmr-beta-2-release/9796][VFD SWMR beta 2 release]]
- Testers wanted
**** HUG 2022 Europe videos available
- [[https://www.hdfgroup.org/hug/europeanhug22/agenda/][Agenda]] and [[https://youtube.com/playlist?list=PLPyhR4PdEeGbKtlUy2yLe6OPhj_iGHP1Y][YouTube playlist]]
- Thanks to Lori Cooper
*** Forum
**** [[https://forum.hdfgroup.org/t/multithread-writing-to-two-files/9850][Multithread Writing to two files]]
#+begin_quote
Reading Image data from single file and writing to two h5 files using
threads. Getting run time error doing this. What could be the reason ?
#+end_quote
- It turns out the user is using high-level library (=hdf5_hl.h=) functions,
  e.g., [[https://portal.hdfgroup.org/display/HDF5/H5IM_MAKE_IMAGE_24BIT][=H5IMmake_image_24bit=]]
- These functions are *not* thread-safe, even if the underlying HDF5 library
  was built w/ thread-safety enabled
- *Workaround:* Use the thread-safe core library and follow the specification,
  such as [[https://docs.hdfgroup.org/hdf5/develop/_i_m_g.html][HDF5 Image and Palette Specification Version 1.2]]
**** [[https://forum.hdfgroup.org/t/h5rdestroy-when-stored/9860][=H5Rdestroy= when stored]]
#+begin_quote
If a reference is stored as an attribute to an object, should =H5Rdestroy= still
be called?
#+end_quote
- Yes
**** [[https://forum.hdfgroup.org/t/fake-it-till-you-make-it-gans-with-hdf5/9857][Fake it till you make it: GANs with HDF5]]
- Never the same HDF5 dataset (value) twice!
- A clever combination of [[https://github.com/lucasvr/hdf5-udf][HDF5-UDF]] and [[https://en.wikipedia.org/wiki/Generative_adversarial_network][generative adversarial networks (GAN)]]
  - Competition between two neural networks a (synthetic-) data generator and a
    discriminator
- TensorFlow Keras API supports [[https://www.tensorflow.org/guide/keras/save_and_serialize#keras_h5_format][storing trained model weights in HDF5 files]]
- We can collocate the HDF5-UDF to synthesize data with the generator model
  - Reading from this dataset creates a new sample every time

** Tips, tricks, & insights
*** HDF5 command-line tools and HDF5 path names w/ special characters
- Example: =/equilibrium/time_slice[]&profiles_2d[]&theta_SHAPE=
- We have a problem!
**** =h5ls=
- First try
  #+begin_example
  gerd@penguin:~$ h5ls equilibrium.h5/equilibrium/time_slice[]&profiles_2d[]&theta_SHAPE
  [2] 8959
  [3] 8960
  -bash: profiles_2d[]: command not found
  -bash: theta_SHAPE: command not found
  [3]+  Exit 127                profiles_2d[]
  gerd@penguin:~$ time_slice[]**NOT FOUND** ^C
  [2]+  Exit 1                  h5ls equilibrium.h5/equilibrium/time_slice[]
  gerd@penguin:~$
  #+end_example
- Double quotes to the rescue
  #+begin_example
  gerd@penguin:~$ h5ls "equilibrium.h5/equilibrium/time_slice[]&profiles_2d[]&theta_SHAPE"
  time_slice[]&profiles_2d[]&theta_SHAPE Dataset {107/Inf, 3/Inf, 2/Inf}
  #+end_example
**** =h5dump=
- First attempt
  #+begin_example
gerd@penguin:~$ h5dump -pH -d "/equilibrium/vacuum_toroidal_field&b0" equilibrium.h5
HDF5 "equilibrium.h5" {
DATASET "/equilibrium/vacuum_toroidal_field&b0" {
   DATATYPE  H5T_IEEE_F64LE
   DATASPACE  SIMPLE { ( 107 ) / ( H5S_UNLIMITED ) }
   STORAGE_LAYOUT {
      CHUNKED ( 107 )
      SIZE 656 (1.305:1 COMPRESSION)
   }
   FILTERS {
      COMPRESSION DEFLATE { LEVEL 1 }
   }
   FILLVALUE {
      FILL_TIME H5D_FILL_TIME_IFSET
      VALUE  -9e+40
   }
   ALLOCATION_TIME {
      H5D_ALLOC_TIME_INCR
   }
}
}
  #+end_example
- Second attempt
  #+begin_example
  gerd@penguin:~$ ~/packages/bin/h5dump -pH -d "/equilibrium/time_slice[]&profiles_2d[]&z_SHAPE" equilibrium.h5
  HDF5 "equilibrium.h5" {h5dump error: unable to get link info from "/equilibrium/time_slice[]&profiles_2d"}
  #+end_example

/Not good./ Need to investigate.

* Clinic 2022-06-07
** Your questions
- Q :: ???

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/release-of-hdf5-1-10-9-newsletter-186/9808][Release of HDF5-1.10.9]]
- Parallel compression improvements
- Doxygen-based User Guide draft
- HDF5 is now tested and supported on macOS 11.6 M1
- VS 2015 will no longer be supported starting in 2023
**** [[https://forum.hdfgroup.org/t/vfd-swmr-beta-2-release/9796][VFD SWMR beta 2 release]]
- Testers wanted
**** [[https://forum.hdfgroup.org/t/european-hdf5-user-group-hug-meeting-2022-the-hdf-group/9518][2022 European HDF5 Users Group]]
- Was a HUGE success
- Thanks to Lana Abadie of ITER, Andy Gotz of ESRF, and Lori Cooper of HDFG
- Stay tuned for the presentation videos!
  - They will be posted on the [[https://www.youtube.com/channel/UCRhtsIZquL3r-zH-R-r9-tQ][YouTube channel]]
*** Forum
**** [[https://forum.hdfgroup.org/t/make-hdfview-available-on-flathub-org/9476][Make HDFView available on Flathub.org]]
- There's been some [[https://github.com/t-chaik/flathub/tree/HDFView][progress]]
  #+begin_quote
  Mostly working except filesystem portal integration, which makes the entire
  thing pretty useless for now, the code may need patching…
  #+end_quote
  - Not sure what that means
**** [[https://forum.hdfgroup.org/t/hdf5-write-perf-regular-api-vs-direct-chunk-on-uncompressed-dataset/9731][HDF5 write perf - Regular API vs Direct Chunk on uncompressed dataset]]
- Samuel posted =pprof= [[https://forum.hdfgroup.org/t/hdf5-write-perf-regular-api-vs-direct-chunk-on-uncompressed-dataset/9731/27][profiles]]
  - Need time to digest
** Tips, tricks, & insights
*** I can't create a compound datatype with XXX (too many) fields
- *Cause:* size limitation of the datatype message
- _Possible solutions_:
  1. Break up the compound type into multiple compound types
  2. Use a group and make each field a dataset
  3. Use an opaque type and store metadata to parse
  4. Use multiple (extendible) 2D datasets
     - One dataset for each field datatype
     - Keep the field metadata (names, order) in attributes

* Clinic 2022-05-24
** Your questions
- Q :: Element order preservation in point selections?
- Q :: ???

** Last week's highlights
*** Announcements
**** 2022 European HDF5 Users Group (HUGE)
- [[https://www.hdfgroup.org/hug/europeanhug22/][Website]]
- *Registration for in-person attendance is now closed.*
- You can still register for online attendance. Please do!
- May 31 - June 2, 2022
- Face-to-face/online hybrid hosted at [[https://www.iter.org/][ITER]] in Saint Paul-lez-Durance, France
**** [[https://forum.hdfgroup.org/t/hdf5-1-10-9-2-rc-1-source-available-for-testing/9779][HDF5 1.10.9-2-rc-1 source available for testing]]
- Parallel Compression improvements
- First steps toward a Doxygen-based “User Guide”
- HDF5 is now tested and supported on macOS 11.6 M1
*** Forum
**** [[https://forum.hdfgroup.org/t/survey-on-the-usage-of-self-describing-data-formats/9762][Survey on the usage of self-describing data formats]]
**** [[https://forum.hdfgroup.org/t/a-minor-step-towards-thread-concurrency/9767][A minor step towards thread concurrency]]
- Idea :: Drop the global lock (temporarily) whenever we are performing file I/O
  - Interesting idea, but devil's in the details (memory/file-hybrid state)
**** [[https://forum.hdfgroup.org/t/make-hdfview-available-on-flathub-org/9476][Make HDFView available on]] [[https://flathub.org/home][=flathub.org=]]
- Again, very interesting idea
- How can we help?
**** [[https://forum.hdfgroup.org/t/vscode-extension-for-hdf5/9769][VSCode extension for HDF5]]
- Someone [[https://github.com/lochbrunner/vscode-hdf5-viewer][started it already]]. Duh!
- How "complete" is it? (What are the requirements?)
  - How can it be improved?
- We'll discuss this at HUG Europe 2022
**** [[https://forum.hdfgroup.org/t/hdf5-write-perf-regular-api-vs-direct-chunk-on-uncompressed-dataset/9731][HDF5 write perf - Regular API vs Direct Chunk on uncompressed dataset]]
- Some good news: no performance regression from HDF5 1.8.22
  |----------------------------+--------------+-----------------+----------------------|
  | -                          | direct chunk | hyperslab chunk | hyperslab contiguous |
  |----------------------------+--------------+-----------------+----------------------|
  | regular                    |    19.060877 |       38.609770 |            23.500788 |
  | never fill                 |    19.578496 |       19.223011 |            24.316146 |
  | latest fmt                 |    19.697542 |       35.719180 |            24.503973 |
  | never fill + latest format |    19.084984 |       18.970671 |            24.817945 |
  |----------------------------+--------------+-----------------+----------------------|
- HDF5 1.12.1
  | -                          | direct chunk | hyperslab chunk | hyperslab contiguous |
  |----------------------------+--------------+-----------------+----------------------|
  | regular                    |    21.050749 |       35.889814 |            23.982538 |
  | never fill                 |    18.917586 |       20.929941 |            23.291541 |
  | latest fmt                 |    19.921759 |       35.472971 |            23.935622 |
  | never fill + latest format |    19.646342 |       19.800098 |            24.406450 |
  |----------------------------+--------------+-----------------+----------------------|
- _Question remains_: Why is =hyperslab contiguous= consistently 25% slower than
  the chunky versions?
  - Need to dig deeper
    - Read the code or ... (both)
    - [[https://github.com/gperftools/gperftools][gperftools (=pprof=)]] output visualized w/ [[https://kcachegrind.github.io/html/Home.html][=[q,k]cachegrind=]]
      [[file:./img/KcgShot3Small.gif]]

** Tips, tricks, & insights
*** Awkward arrays
- [[https://awkward-array.org/quickstart.html][Project home]]
- [[https://www.youtube.com/watch?v=WlnUF3LRBj4][Awkward Array: Manipulating JSON-like Data with NumPy-like Idioms]]
  - SciPy 2020 presentation by Jim Pivarski
  - Watch this!
- How would you represent something like this in HDF5? (Example from Jim's video)
  #+begin_src python
  import awkward as ak
  array = ak.Array([
      [{"x": 1,  "y": [11]},
       {"x": 4,  "y": [12, 22]},
       {"x": 9,  "y": [13, 23, 33]}],
      [],
      [{"x": 16, "y": [14, 24, 34, 44]}]
  ])
  #+end_src
  - Compound? Meh! Empty or partial records? Variable-length sequences... ==:-O=
  - Columnar layout
    - Pick an iteration order
    - Put record fields into contiguous buffers
    - Keep track list offsets
      #+begin_example
      outer offsets:  0,                     3,  3, 5
      content for x:  1,  4,      9,            16
      offsets for y:  0,  1,      3,             6,            10
      content for y: 11, 12, 22, 13, 23, 33,    14, 24, 34, 44
      #+end_example
    - A picture is worth a thousand words (screenshot from Jim's presentation)
      [[file:./img/awkward.png]]
      - See the HDF5 structure?
        - You can store both iteration orders, if that's what you need
- _Food for thought_: Sometimes HDF5 is about finding balance between appearance
  and performance
- We will have a few HEP (High-Energy Physics)-themed presentations at HUG
  Europe 2022
  - You have been warned =;-)=

* Clinic 2022-05-17
** Your questions
- Q :: Element order preservation in point selections?
- Q :: ???

** Last week's highlights
*** Announcements
**** 2022 European HDF5 Users Group (HUGE)
- [[https://www.hdfgroup.org/hug/europeanhug22/][Website]]
- *Registration for in-person attendance is now closed.*
- You can still register for online attendance. Please do!
- May 31 - June 2, 2022
- Face-to-face/online hybrid hosted at [[https://www.iter.org/][ITER]] in Saint Paul-lez-Durance, France

**** [[https://www.hdfgroup.org/2022/05/release-of-hdfview-3-2-0-newsletter-184/][Release of HDFView 3.2.0]]
- SWMR support (configurable refresh timer)
- Display and edit attribute data in table views, the same way as datasets
- Read and display non-standard floating-point numbers
**** [[https://www.hdfgroup.org/2022/05/hdf5-vol-status-report-exascale-computing-project/][HDF5 VOL Status Report – Exascale Computing Project]]
- Includes early DAOS VOL connector performance numbers
**** [[https://hdfgroup.us14.list-manage.com/track/click?u=1e990656e9cfaeda233d0858d&id=ff720f0edb&e=26e5bab6bd][HSDS Data Streaming Arrives]]
- 100 MB (configurable) cap on HTTP request size
  - Otherwise =413 - Payload Too Large= error
  - Increasing the =max_request_size= can help only if HSDS Docker container or
    Kubernetes pod has sufficient RAM
  - Now what? /Streaming to the rescue!/
    - Let clients see bytes returning from the server while that is still
      processing the tail chunks in the selection
*** Forum
**** [[https://forum.hdfgroup.org/t/hdf5-write-perf-regular-api-vs-direct-chunk-on-uncompressed-dataset/9731][HDF5 write perf - Regular API vs Direct Chunk on uncompressed dataset]]
- We provided a little [[https://dbkt.hdfgroup.org/original/2X/f/ff98069f1dbae5568a38855eac72be49a83a8593.c][test program]] to eliminate as many layers as possible
- The user ran the tests and obtained these results (seconds via
  =clock_gettime(CLOCK_PROCESS_CPUTIME_ID,.)=):
  | -                          | direct chunk | hyperslab chunk | hyperslab contiguous |
  |----------------------------+--------------+-----------------+----------------------|
  | regular                    |     1.631005 |        3.368258 |             2.069583 |
  | never fill                 |     1.632858 |        1.641345 |             2.069205 |
  | latest fmt                 |     1.643421 |        3.233817 |             2.068250 |
  | never fill + latest format |     1.633859 |        1.611976 |             2.029573 |
- Why is =hyperslab contiguous= consistently 25% slower than the chunky versions?
  - Perhaps some extra buffer copying going on here??? TBD

**** [[https://forum.hdfgroup.org/t/failures-with-insufficient-disk-space/9712][Failures with insufficient disk space]]
- The HDF5 library state appears to be inconsistent after a disk-full error
  (=ENOSPC=)
  - What's the state of a file in that situation? (Undefined)
    - Recovering to the last sane state is harder than it may seem, if not
      impossible
  - But things appear to be worse: The library crashes (assertion failure) on
    shutdown
    - Open handle accounting is screwed up
- See the reproducer in last week's notes!
- Update :: It appears that the problem might be Windows-specific.
  - @Dana tried to reproduce the problem under Linux and couldn't
  - Nobody has come forward so far with a non-Windows error report

**** [[https://forum.hdfgroup.org/t/corrupted-file-due-to-shutdown/9658][Corrupted file due to shutdown]]
#+begin_quote
Thank you for all your help and all of the very useful pointers. I managed to
recover the data in the file. I did not get all the names of the datasets but
with the mentioned attribute i was able to reconstruct the data.

Thank you and all the best,
Christian
#+end_quote

- Great!
- A lost business opportunity =;-)=, but also a sign that skill, determination,
  and documentation go a long way
- Our way always was and will be: _Open-Source Software and Specifications_

** Tips, tricks, & insights
Next time...

* Clinic 2022-05-10
** Your questions
- Q :: ???

** Last week's highlights
*** Announcements
**** 2022 European HDF5 Users Group (HUGE)
- [[https://www.hdfgroup.org/hug/europeanhug22/][Website]]
- *Registration closes on Sunday May 15!*
- May 31 - June 2, 2022
- Face-to-face at [[https://www.iter.org/][ITER]] in Saint Paul-lez-Durance, France
- Reserve your spot before telling your friends! =;-)=

**** [[https://forum.hdfgroup.org/t/hermes-0-6-0-beta-release/9704][Hermes 0.6.0-beta release]]
- Highlight: Hermes HDF5 Virtual File Driver
- [[https://github.com/HDFGroup/hermes/tree/master/adapter/vfd][GitHub]]
**** [[https://forum.hdfgroup.org/t/release-of-hdf5-1-12-2-newsletter-183/9702][HDF5 1.12.2 is out]]
- Parallel compression improvements
- Support for macOS Apple M1 11.6 Darwin 20.6.0 arm64 with Apple clang version 12.0.5.
- The shortened versions of the long options (ex: =--datas= instead of
  =--dataset=) have been removed from all the tools.
**** [[https://forum.hdfgroup.org/t/sharing-experience-on-hdf5-vol-connectors-development-and-maintenance-public-talk/9749][Sharing Experience on HDF5 VOL Connectors Development and Maintenance]]
- Wednesday, May 11, 1:00-2:00 PM ET
- Part of the [[https://www.exascaleproject.org/event/ecp-community-bof-days-2022/][ECP 2022 Community BOF days]]
- [[https://exascaleproject.zoomgov.com/meeting/register/vJIsdOyvrjorHa4v2i8Chiza1GLF1W1yCzc][Open registration]]

*** Forum
**** [[https://forum.hdfgroup.org/t/select-mulptiple-hyperslabs-in-some-order/9706][Select mulptiple hyperslabs in some order]]
- (Hyperslab) Selections can be combined via set-theoretic operations (union,
  intersection, ...)
- There's an implicit (C or Fortran) ordering of the selected grid points, i.e.,
  (within commutativity rules of set theory) the order of those operations
  doesn't matter
- Q :: What about point selections?
**** [[https://forum.hdfgroup.org/t/hdf5-vs-hf-file/9734][=hdf5= vs =hf= file]]
- Naming conventions (extensions) for HDF5 files
- Technically, it doesn't matter
- Tools, such as [[https://www.hdfgroup.org/downloads/hdfview/][HDFView]], use search filters, e.g., =*.h5= and =*.hdf5=
**** [[https://forum.hdfgroup.org/t/hdf5-write-perf-regular-api-vs-direct-chunk-on-uncompressed-dataset/9731][HDF5 write perf - Regular API vs Direct Chunk on uncompressed dataset]]
- =h5py= has ~write_direct~ and ~write_direct_chunk~
  - About a 50% difference in performance. Why?
- What could slow down ~H5Dwrite~ (vs ~H5Dwrite_chunk~) when having no data
  conversion, no data scattering (contiguous layout), no chunking, no filters?
**** [[https://forum.hdfgroup.org/t/failures-with-insufficient-disk-space/9712][Failures with insufficient disk space]]
- The HDF5 library state appears to be inconsistent after a disk-full error
  (=ENOSPC=)
  - What's the state of a file in that situation? (Undefined)
    - Recovering to the last sane state is harder than it may seem, if not
      impossible
  - But things appear to be worse: The library crashes (assertion failure) on
    shutdown
    - Open handle accounting is screwed up
- Reproducer
  #+begin_src C

  #include "hdf5.h"

  #include <stdint.h>
  #include <stdlib.h>

  #define SIZE (1024 * 1024 * 128)

  int work(const char* path)
  {
    int retval = EXIT_SUCCESS;

    uint8_t* data = (uint8_t*) malloc(sizeof(uint8_t)*SIZE);

    for (size_t i = 0; i < SIZE; ++i) {
      *(data+i) = i % 256;
    }

    hid_t fapl = H5I_INVALID_HID;
    if ((fapl = H5Pcreate(H5P_FILE_ACCESS))
        == H5I_INVALID_HID) {
      retval = EXIT_FAILURE;
      goto fail_fapl;
    }
    if (H5Pset_fclose_degree(fapl, H5F_CLOSE_STRONG) < 0) {
      retval = EXIT_FAILURE;
      goto fail_file;
    }

    hid_t file = H5I_INVALID_HID;
    if ((file = H5Fcreate(path, H5F_ACC_TRUNC, H5P_DEFAULT, fapl))
        == H5I_INVALID_HID) {
      retval = EXIT_FAILURE;
      goto fail_file;
    }

    hid_t group = H5I_INVALID_HID;
    if ((group = H5Gcreate(file, "H5::Group", H5P_DEFAULT, H5P_DEFAULT,
                           H5P_DEFAULT)) == H5I_INVALID_HID) {
      retval = EXIT_FAILURE;
      goto fail_group;
    }

    hid_t fspace = H5I_INVALID_HID;
    if ((fspace = H5Screate_simple(1, (hsize_t[]) {(hsize_t) SIZE}, NULL))
        == H5I_INVALID_HID) {
      retval = EXIT_FAILURE;
      goto fail_fspace;
    }

    hid_t dset = H5I_INVALID_HID;
    if ((dset = H5Dcreate(group, "H5::Dataset", H5T_NATIVE_UINT8, fspace,
                          H5P_DEFAULT, H5P_DEFAULT, H5P_DEFAULT))
        == H5I_INVALID_HID) {
      retval = EXIT_FAILURE;
      goto fail_dset;
    }

    if (H5Dwrite(dset, H5T_NATIVE_UINT8, fspace, fspace, H5P_DEFAULT, data) < 0) {
      retval = EXIT_FAILURE;
      goto fail_write;
    }
    printf("Write succeeded.\n");

    if (H5Fflush(file, H5F_SCOPE_GLOBAL) < 0) {
      retval = EXIT_FAILURE;
      goto fail_flush;
    }
    printf("Flush succeeded.\n");

  fail_flush:
  fail_write:
    if (H5Dclose(dset) < 0) {
      printf("H5Dclose failed.\n");
    }

  fail_dset:
    if (H5Sclose(fspace) < 0) {
      printf("H5Sclose failed.\n");
    }

  fail_fspace:
    if (H5Gclose(group) < 0) {
      printf("H5Gclose failed.\n");
    }

  fail_group:
    if (H5Fclose(file) < 0) {
      printf("H5Fclose failed.\n");
    }

  fail_file:
    if (H5Pclose(fapl) < 0) {
      printf("H5Pclose failed.\n");
    }

  fail_fapl:
    return retval;
  }

  int main()
  {
      int retval = EXIT_SUCCESS;
      retval &= work("O:/foo.h5"); // limited available space to force failure
      retval &= work("D:/foo.h5"); // lots of free space
      return retval;
  }

  #+end_src

**** [[https://forum.hdfgroup.org/t/external-datasets-relative-to-current-directory-or-hdf5-file-as-documented/9742][External datasets relative to current directory or HDF5 file as documented?]]
- Documentation error: /Thanks to the user who reported it./
** Tips, tricks, & insights
Next time...

* Clinic 2022-04-26
** Your questions
- Q :: ???

** Last week's highlights
*** Announcements
**** 2022 European HDF5 Users Group (HUG)
- [[https://www.hdfgroup.org/hug/europeanhug22/][Website]]
- May 31 - June 2, 2022
- Face-to-face at [[https://www.iter.org/][ITER]] in Saint Paul-lez-Durance, France
- Reserve your spot before telling your friends! =;-)=

**** HDF5 1.12.2 is around the corner
- As early as this week

*** Forum
**** [[https://forum.hdfgroup.org/t/bug-h5tcopy-of-empty-enum/9634][Bug? H5TCopy of empty enum]]
- Is an empty enumeration datatype legit?
- I couldn't find that ticket @Elena mentioned a while ago
  - Where is it?

** Tips, tricks, & insights
*** [[https://github.com/HDFGroup/hdf5/issues/1682][Documentation - variable-length datatype description seems incomplete (doesn't mention global heap)]]
- Interesting GitHub issue
  #+begin_quote
  I'm working on trying to decode an HDF5 file (attached) manually using the
  specification (for the purpose of writing rust code for a decoder that quickly
  extracts raw signal data from nanopore FAST5 files)...
  #+end_quote
- Tools of the trade =h5dump=, =h5debug=, =h5check=
- Highlights gaps/inaccuracies/inconveniences in the [[https://docs.hdfgroup.org/hdf5/develop/_f_m_t3.html][file format specification]]
  - Bit-level representation of variable-length string datatypes
    - What's a /parent type/? (spec. doesn't say)
    - What's the parent type of a VLEN string? (character)
    - (How) Is it encoded in the datatype message?
  - Use of the global heap for VLEN data
    - Not discussed where VLEN datatype message is discussed
- Sample
  #+begin_example
  HDF5 "perfect_guppy_3.6.0_LAST_gci_vs_Nb_mtDNA.fast5" {
  GROUP "/" {
     ATTRIBUTE "file_version" {
        DATATYPE  H5T_STRING {
           STRSIZE H5T_VARIABLE;
           STRPAD H5T_STR_NULLTERM;
           CSET H5T_CSET_UTF8;
           CTYPE H5T_C_S1;
        }
        DATASPACE  SCALAR
        DATA {
        (0): "2.0"
        }
     }
     GROUP "read_44dcef85-283e-4782-b7b1-1c9a0f682597" {
        ATTRIBUTE "run_id" {
           DATATYPE  H5T_STRING {
              STRSIZE H5T_VARIABLE;
              STRPAD H5T_STR_NULLTERM;
              CSET H5T_CSET_ASCII;
              CTYPE H5T_C_S1;
           }
           DATASPACE  SCALAR
           DATA {
           (0): "cb45e5bda47a362d52bcfa146df9083b463bf65e"
           }
        }
  ...
  #+end_example
- =2.0\0= is =322e 3000= in hex.
  - Let's find it!

* Clinic 2022-04-19
** Your questions
- Q :: ???

** Last week's highlights
*** Announcements
**** 2022 European HDF5 Users Group (HUG)
- [[https://www.hdfgroup.org/hug/europeanhug22/][Website]]
- May 31 - June 2, 2022
- Face-to-face at [[https://www.iter.org/][ITER]] in Saint Paul-lez-Durance, France
- Reserve your spot before telling your friends! =;-)=
**** [[https://forum.hdfgroup.org/t/hdf5-1-12-2-3-rc-1-source-available-for-testing/9666][HDF5 1.12.2-3-rc-1 source available for testing]]
- Parallel compression improvements backported from HDF5 1.13.1
**** HSDS v0.7beta13
- Support for [[https://docs.h5py.org/en/stable/high/dataset.html?highlight=fancy#fancy-indexing][Fancy Indexing]]
  - Unlike with h5py though, HSDS works well with long lists of indexes by
    parallelizing access across the chunks in the selection.
  - For example, retrieving 4000 random columns from a 17,520 by 2,018,392
    dataset demonstrated good scaling as the number of HSDS nodes was increased:
    - 4 nodes: 65.4s
    - 8 nodes: 35.7s
    - 16 nodes: 23.4 s
- The limit on the number of chunks accesses per request has been removed
  [[file:./img/chunk_1000.png]]

*** Forum
**** [[https://forum.hdfgroup.org/t/help-request-regarding-java-3-3-2/9672][Help Request regarding Java 3.3.2]]
- Switched from HDF Java 2.6.1 to 3.3.2 & seeing errors not seen before
- Artifact of checking for [[https://docs.hdfgroup.org/hdf5/develop/_i_m_g.html][HDF5 Image convention]] attributes
- Prior versions ignored exceptions silently =8-(=
- Now we have "expected errors"???
**** [[https://forum.hdfgroup.org/t/h5f-get-obj-count-f-extremely-buggy/9678][=h5f_get_obj_count_f= Extremely Buggy?]]
- User is trying to use =h5fget_obj_count_f= to establish the number of open
  handles; it appears that the result depends on the number of times =h5open_f=
  was called (???)
- Calling =H5open= w/ the C-API is usually not necessary and multiple calls have
  no side-effects
- =h5open_f= (Fortran API) appears to behave differently, [[https://jira.hdfgroup.org/browse/HDFFV-11306][buggy]]?
- Fixed by Scot Breitenfeld in [[https://github.com/HDFGroup/hdf5/pull/1657][HDFFV-11306 Fixed #1657]]
  - /What a turnaround!/
**** [[https://forum.hdfgroup.org/t/c-read-h5-cmpd-struct-dataset-that-each-field-is-vector/9677][C++ Read h5 cmpd (/struct) dataset that each field is vector]]
- User's data
  #+begin_src C++
  typedef struct { std::vector FieldA, FieldB, FieldC; } TestH5;
  TestH5.FieldA = {1.0,2.0,3.0,4.0}; // similar to FieldB, FieldC
  #+end_src
- Q :: How to read this =TestH5= using C++?

This brings us to today's ...

** Tips, tricks, & insights
*** How [[https://github.com/steven-varga/h5cpp][H5CPP]] makes you ask the right questions

/(All quotations from Steven Varga's response!)/

The expression below is a [templated] Class datatype in C++, placed in a
non-contiguous memory location, requiring scatter-gather operators and a
mechanism to dis-assemble reassemble the components. Because of the complexity
AFAIK there is no automatic support for this sort of operation.

#+begin_src C++
template <typename T>
struct TestH5{
    std::vector<T> FieldA, FieldB, FieldC;
};
#+end_src

The structure above maybe modelled in HDF5 in the following way:

- (Columnar) =/group/[fieldA, fieldB, fieldC]= fast indexing by columns, more
  complex and slower indexing by rows; also easier read/write from
  Julia/Python/R/C/ etc…
- (Records) by a vector of tuples: =std::vector<std::tuple<T,T,T>>= where you
  work with a single dataset, fast indexing by rows and slower indexing by
  columns
- (Blocked) exotic custom solution based on direct chunk write/read: fast
  indexing of blocks by row and column wise at the increased complexity of the
  code.
- (Hybrid) ...

H5CPP provides mechanism for the first two solutions:

#+begin_src C++
TestH5<int> data = {std::vector<int>{1,2,3,4},
  std::vector<int>{5,6,7},
  std::vector<int>{8,9,10}};

h5::fd_t fd = h5::create("example.h5",H5F_ACC_TRUNC);
h5::write(fd, "/some_path/fieldA", data.fieldA);
h5::write(fd, "/some_path/fieldB", data.fieldB);
h5::write(fd, "/some_path/fieldC", data.fieldC);
#+end_src

Ok the above is simple and well behaved, the second solution needs a POD struct
backing, as tuples are not supported in the current H5CPP version (the upcoming
will support arbitrary STL)

#+begin_src C++
struct my_t {
   int fieldA;
   int fieldB;
   int fieldC;
}
#+end_src

You can have any data types and arbitrary combination in the POD struct, as long
as it qualifies as POD type in C++. This approach involves H5CPP LLVM based
compiler assisted reflection – long word, I know; sorry about that. The bottom
line you need the type descriptor and this compiler does it for you, without
lifting a pinky.

#+begin_src C++
std::vector<my_t> data;
h5::fd_t fd = h5::create("example.h5",H5F_ACC_TRUNC);
h5::write(fd, "some_path/some_name", data);
#+end_src

This approach is often used in event recorders, hence there is this =h5::append=
operator to help you out:

#+begin_src C++
h5::ds_t ds = h5::open(...);
for(const auto& event: event_provider)
  h5::append(ds, event);
#+end_src

Both of the layouts are used to model sparse matrices, the second resembling COO
or coordinate of points, whereas the first is for Compressed Sparse Row|Column
format.

[[http://sandbox.h5cpp.org/presentations/][Slides are here]], the [[https://github.com/steven-varga/h5cpp/tree/master/examples][examples are here]].

#+begin_example
best wishes: steve
#+end_example

_Go on and read the rest of the thread_! There is a lot of good information there
(layouts, strings, array types, ...).

* Clinic 2022-04-12
** Your questions
- Q :: ???

** Last week's highlights
*** Announcements
**** 2022 European HDF5 Users Group (HUG)
- [[https://www.hdfgroup.org/hug/europeanhug22/][Website]]
- May 31 - June 2, 2022
- Face-to-face at [[https://www.iter.org/][ITER]] in Saint Paul-lez-Durance, France
- Reserve your spot before telling your friends! =;-)=

*** Forum
**** [[https://forum.hdfgroup.org/t/what-kind-of-stl-containers-do-you-use-in-your-field/9636][What kind of STL containers do you use in your field?]]
- Does anybody use the STL? =;-)=
**** [[https://forum.hdfgroup.org/t/bug-h5tcopy-of-empty-enum/9634][Bug? H5TCopy of empty enum]]
- Looks like one
**** [[https://forum.hdfgroup.org/t/broken-hdf5-file-cannot-be-opened/9618][Broken HDF5 file cannot be opened]]
- Don't make a fuzz! =;-)=
- Cornering the HDF5 library by feeding it random byte sequences as attribute
  and link names (or values)
- Mission accomplished!
  [[file:./img/fuzz.png]]
**** [[https://forum.hdfgroup.org/t/automated-formatted-display-of-stl-like-containers/9641][Automated formatted display of STL-like containers]]
#+begin_example
g++ -I./include -o pprint-test.o   -std=c++17 -DFMT_HEADER_ONLY -c pprint-test.cpp
g++ pprint-test.o -lhdf5  -lz -ldl -lm  -o pprint-test
./pprint-test


LISTS/VECTORS/SETS:
---------------------------------------------------------------------
array<string,7>:[xSs,wc,gu,Ssi,Sx,pzb,OY]
vector:[CDi,PUs,zpf,Hm,teO,XG,bu,QZs]
deque:[256,233,23,89,128,268,69,278,130]
list:[95,284,24,124,49,40,200,108,281,251,57, ...]
forward_list:[147,76,81,193,44]
set:[V,f,szy,v]
unordered_set:[2.59989,1.86124,2.93324,1.78615,2.43869,2.04857,1.69145]
multiset:[3,5,12,21,23,28,30,30]
unordered_multiset:[gZ,rb,Dt,Q,Ark,dW,Ez,wmE,GwF]


ADAPTORS:
---------------------------------------------------------------------
stack<T,vector<T>>:[172,252,181,11]
stack<T,deque<T>>:[54,278,66,70,230,44,121,15,58,149,224, ...]
stack<T,list<T>>:[251,82,278,86,66,40,278,45,211,225,271, ...]
priority_queue:[zdbUzd,tTknDw,qorxgk,mCcEay,gDeJ,FYPOEd,CIhMU]
queue<T,deque<T>>:[bVG,Bbs,vchuT,FfxEw,CXFrr,JAx,sVlcI]
queue<T,list<T>>:[ARPl,dddmHT,mEiCJ,OVEYS,FIJi,jbQwb,tpJnpj,rlCRoKn,nBKjJ,KPlU,jatsUI, ...]

ASSOCIATE CONTAINERS:
---------------------------------------------------------------------
map<string,int>:[{LID:2},{U:2},{Xr:1},{e:2},{esU:1},{kbj:1},{qFc:3}]
map<short,list<string>>:[{LjwUkey:5},{jZxhk:6},{sxKKVu:8},{vSmHmu:8},{wRBTdGS:7}]
multimap<short,list<int>>:[{ALpPkqbJ:[6,6,8,7,8,5,7,8,5,5,6, ...]},{AwsHR:[8,5,6,6,5,6,7,6,7,6,8, ...]},{HtLQMvHv:[5,7,6,7,8,6,7]},{KbseLYEs:[5,8,6,8]},{RzsJm:[7,6,8,7,7,7,7,6,6,8,7, ...]},{XpNSkhDa:[7,5,8,8,7,8,5,5,5]},{cXPImNk:[6,8,6,5,8,7,5,6,6,8,6, ...]},{gkKHyh:[5,8,6,6,6,6,5,5,6]},{iPmaraP:[7,6,7,6,7,7,5,7,5,7,7, ...]},{pLmqL:[6,5,5,5,6]}]
unordered_map<short,list<string>>:[{udXahPXD:7},{hUgYjak:5},{OpOmaBqA:7},{vTldeWdS:5},{jEHQST:8},{UZxId:7},{IslGsnGY:8}]
unordered_multimap<short,list<int>>:[{JldxFw:[5,6,8,6,6]},{tnzhP:[8,6,8,5,5,8,8,8]},{cvMaS:[5,7,5,5,5,5]},{eGlyp:[8,7,8,8,7]}]


RAGGED ARRAYS:
---------------------------------------------------------------------
vector<vector<string>>:[[pkwZZ,lBqsR,cmKt,PDjaS,Zj],[Nr,jj,xe,uC,bixzV],[uBAU,pXCa,fZEH,FIAIO],[Vczda,HKEzO,ySqr,Fjd,nh,pgb,zcsw],[fLCgg,qQ,Reul,aTXp,DENn,ZDtkV,VXcB]]
array<vector<short>,N>:[[29,49,29,42,25,33,49,33,44,49],[50,48,35,22,35,33,33],[46,27,23,20,48,38,45,28,45],[25,33,41,22,36]]
array<array<short,M>,N>:[[90,35,99],[47,58,53],[82,25,72],[76,92,62],[39,88,32]]

MISC:
---------------------------------------------------------------------
pair<int,string>:{6:hJnCm}
pair<string,vector<int>>:{iLclgkjnoY:[2,5,6,6,7,3,7,3,3,4,8, ...]}
tuple<string,int,float,short>:<XTK,3,2.63601,6>
tuple<string,list<int>,vector<float>,short>:<[TaPryDWKv,attpFqqIc,geHwbX,vdZ,kvruDeaxpZ,dSOqbVpr,jTciLPgBbI,duc,yUZiCP,zGrTsweTk,LNouX, ...],4,5.81555,[2,3,5,6,8]>
#+end_example
**** [[https://forum.hdfgroup.org/t/group-overhead-file-size-problem-for-hierarchical-data/9640][Group Overhead - File size problem for hierarchical data]]
#+begin_quote
We found that a group has quite a memory overhead (was it 2 or 20 kb?).
#+end_quote
- How was that measured?
- What's in a group?
- Responses from Steven, John, and GH
- The figure quoted looks unusual/too high
**** [[https://forum.hdfgroup.org/t/h5pset-est-link-info-regression-in-1-13-1/9645][=H5Pset_est_link_info= regression in 1.13.1?]]
- Yup, looks like it!
- Compact vs. dense group storage
- The [[https://docs.hdfgroup.org/hdf5/develop/group___g_c_p_l.html#gaa8571642d45e73ab5a9ae71cf00501f9][documentation]] has a few clues
**** [[https://forum.hdfgroup.org/t/corrupted-file-due-to-shutdown/9658][Corrupted file due to shutdown]]
#+begin_quote
I have a problem with a HDF5 file created with h5py. I have the suspicion that
the process writing to the file was killed.
#+end_quote
- Try common household tools
  #+begin_src shell
  strings -t d file.h5
  #+end_src
- Then reach for the heavier guns ([[https://guix.gnu.org/packages/h5check-2.0.1/][=h5check=]])

** Tips, tricks, & insights
*** HDFView in Web-browsers?
- Great community projects (Thanks to Andy Gotz at [[https://www.esrf.fr/][ESRF]]!)
- [[https://github.com/silx-kit/h5web][=h5web=]] - React components for data visualization and exploration
  - [[https://h5web.panosc.eu/][Demo]]
  - [[https://h5web.panosc.eu/hsds][HSDS support]]
  - [[https://hdflab.hdfgroup.org/][HDFLab]] integration?
- [[https://github.com/usnistgov/h5wasm][=h5wasm=]] - A WebAssembly HDF5 reader/writer library
  - [[https://developer.mozilla.org/en-US/docs/Web/API/FileSystem][HTML5 =FileSystem= API]]
  - [[https://ncnr.nist.gov/ncnrdata/view/panosc-hdf-viewer.html?pathlist=ncnrdata/ngbsans/201708/nonims152/data][NeXuS-HDF5 file viewer]]

* Clinic 2022-04-05
** Your questions
- Q :: ???

** Last week's highlights
*** Announcements
**** 2022 European HDF5 Users Group (HUG)
- [[https://www.hdfgroup.org/hug/europeanhug22/][Website]]
- May 31 - June 2, 2022
- Face-to-face at [[https://www.iter.org/][ITER]] in Saint Paul-lez-Durance, France
- Reserve your spot before telling your friends! =;-)=

**** ASCR Workshop January 2022 on the Management and Storage of Scientific Data
- [[https://www.osti.gov/biblio/1843500-position-papers-ascr-workshop-management-storage-scientific-data][Position Papers]]
- [[https://www.osti.gov/biblio/1845705][Technical Report]]

*** Forum
**** [[https://forum.hdfgroup.org/t/file-remains-open-after-calling-hd5f-close/9602][File remains open after calling =HD5F.close=]]
- Context: .NET, =HDF5.PInvoke= migrating from 1.8.x to 1.10.x
- Biggest change: switch to 64-bit handles
- Symptoms: Change in unit test behavior, file closure
- User forgot to switch from =int= to =long= in one place
- C-style =typedef= has no equivalent in C#; hack:
  #+begin_src C
  #if HDF5_VER1_10
  using hid_t = System.Int64;
  #else
  using hid_t = System.Int32;
  #endif
  #+end_src
- How to discover open handles?
  - [[https://docs.hdfgroup.org/hdf5/develop/group___h5_f.html#gadcdae0aca7c88064db0d32de7f1e31f2][=H5Fget_obj_count=]], [[https://docs.hdfgroup.org/hdf5/develop/group___h5_f.html#ga35e72579bd07433162b80ddc0bd0c5b1][=H5Fget_obj_ids=]]
  - [[https://docs.hdfgroup.org/hdf5/develop/group___h5_i_u_d.html#ga3bc2a11a594bf484cc5dc69ac987d0f4][=H5Iiterate=]] (since HDF5 1.12)

** Tips, tricks, & insights
*** HDF5 applications and clients in Cloud-based environments
#+begin_src plantuml :file ./img/options.png
@startuml

note "It's not a trick.\nIt's HDF5!" as n1

actor "User 1" as user1
actor "User 2" as user2

card "App" as app {
    card cnx [
    libhdf5-API
    ----
    VOL
    ]
    card "Facade" as pxy
    artifact cnx1 [
    libhdf5-API
    ----
    VOL
    ----
    ...
    ----
    Native VOC
    ----
    VFL
    ]
}

card "Client" as app1 {
    card "HTTP(S)" as pxy1
}

hexagon "<b>HSDS" as HSDS

database "(P)FS" as PFS {
    entity "object" as object
    file "HDF5 File" as file
}
cloud "(Cloud) Object Store" as COS {
    interface "object" as object1
    file "HDF5 File (BLOB)" as file1
}

n1 ~~ user1
n1 ~~ user2
user1 .. app
user2 .. app1

cnx -[#red]- object : <color:red>VOC
cnx -[#red]- object1 : <color:red>VOC
cnx -[#red]- HSDS : <color:red>VOC

cnx1 -[#green]- file : <color:green>VFD
cnx1 -[#green]- file1 : <color:green>VFD

pxy .[#blue]. file
pxy .[#blue]. file1

pxy1 -[#magenta]- object1  : <color:magenta>server-less
pxy1 -[#teal]- HSDS :<color:teal>REST\n<color:teal>GraphQL
HSDS -- object1
HSDS -- file1

legend left
    HSDS - Highly-Scalable Data Service
    (P)FS - (Parallel) File System
    VFL - Virtual File Layer
    VFD - Virtual File Driver
    VOL - Virtual Object Layer
    VOC - VOL Connector
endlegend

@enduml
#+end_src

#+RESULTS:
[[file:./img/options.png]]

**** Application-centric
***** Object
- Application is completely isolated from storage details
***** File
- Application is potentially "exposed" to storage details via a file-centric view
**** Service-centric
- State-less
- Cloud-native
- Weak consistency

* Clinic 2022-03-29
** Your questions
- Q :: ???

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/free-seminar-using-hdf5-and-hsds-for-open-science-research-at-scale/9532][Free seminar: Using HDF5 and HSDS for Open Science Research at Scale]]
- Friday, April 1, 2022, 11:00 am - 12:30 pm EDT

**** 2022 European HDF5 Users Group (HUG)
- [[https://www.hdfgroup.org/hug/europeanhug22/][Website]]
- May 31 - June 2, 2022
- Face-to-face at [[https://www.iter.org/][ITER]] in Saint Paul-lez-Durance, France
- Reserve your spot before telling your friends! =;-)=

*** Forum
**** [[https://forum.hdfgroup.org/t/error-read-failed/9531][Error: Read failed]]
- Got a sample, nothing unusual
- Core VFD works just fine
- Need to find a way to reproduce the behavior (I/O kernel)
- Mystery continues

**** [[https://forum.hdfgroup.org/t/symbolic-links-with-relative-path/9552][Symbolic links with relative path]]
- What's the meaning of 'relative' in HDF5? W.r.t. handle (file, group, ...)!
- =..= does and cannot mean what it does in a shell (no tree structure)
- Special characters in link names? (=/=, =.=, =./=, =/./=)
- =..=, =...=, etc., and spaces are legitimate link names

**** [[https://forum.hdfgroup.org/t/refresh-object-so-that-external-changes-were-applied/9544][Refresh object so that external changes were applied]]
- The state of an /open/ HDF5 file is a hybrid (in-memory, in-file)
- Simultaneously opening an HDF5 file in different processes with one or more
  writers, without inter-process communication, creates a coherence problem!
  (and potentially a consistency problem...)
  - Don't go there!
  - Use SWMR, IPC, or I/O request queue!

**** [[https://forum.hdfgroup.org/t/read-portion-of-dataset/9545][Read Portion of Dataset]]
- That's what HDF5 is all about
- Great responses from a number of people
- Most comprehensive example by Steven ([[http://h5cpp.org/][H5CPP]])

** Tips, tricks, & insights
*** HDF5 applications and clients in Cloud-based environments
#+begin_src plantuml :file ./img/options.png
@startuml

note "It's not a trick.\nIt's HDF5!" as n1

actor "User 1" as user1
actor "User 2" as user2

card "App" as app {
    card cnx [
    libhdf5-API
    ----
    VOL
    ]
    card "Facade" as pxy
    artifact cnx1 [
    libhdf5-API
    ----
    VOL
    ----
    ...
    ----
    Native VOC
    ----
    VFL
    ]
}

card "Client" as app1 {
    card "HTTP(S)" as pxy1
}

hexagon "<b>HSDS" as HSDS

database "(P)FS" as PFS {
    entity "object" as object
    file "HDF5 File" as file
}
cloud "(Cloud) Object Store" as COS {
    interface "object" as object1
    file "HDF5 File (BLOB)" as file1
}

n1 ~~ user1
n1 ~~ user2
user1 .. app
user2 .. app1

cnx -[#red]- object : <color:red>VOC
cnx -[#red]- object1 : <color:red>VOC
cnx -[#red]- HSDS : <color:red>VOC

cnx1 -[#green]- file : <color:green>VFD
cnx1 -[#green]- file1 : <color:green>VFD

pxy .[#blue]. file
pxy .[#blue]. file1

pxy1 -[#magenta]- object1  : <color:magenta>server-less
pxy1 -[#teal]- HSDS :<color:teal>REST\n<color:teal>GraphQL
HSDS -- object1
HSDS -- file1

legend left
    HSDS - Highly-Scalable Data Service
    (P)FS - (Parallel) File System
    VFL - Virtual File Layer
    VFD - Virtual File Driver
    VOL - Virtual Object Layer
    VOC - VOL Connector
endlegend

@enduml
#+end_src

#+RESULTS:
[[file:./img/options.png]]

**** Application-centric
***** Object
- Application is completely isolated from storage details
***** File
- Application is potentially "exposed" to storage details via a file-centric view
**** Service-centric
- State-less
- Cloud-native
- Weak consistency

* Clinic 2022-03-22
** Your questions
- Q :: ???

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/free-seminar-using-hdf5-and-hsds-for-open-science-research-at-scale/9532][Free seminar: Using HDF5 and HSDS for Open Science Research at Scale]]
- Friday, April 1, 2022, 11:00 am - 12:30 pm EDT

**** 2022 European HDF5 Users Group (HUG)
- [[https://www.hdfgroup.org/hug/europeanhug22/][Website]]
- May 31 - June 2, 2022
- Face-to-face at [[https://www.iter.org/][ITER]] in Saint Paul-lez-Durance, France
- Reserve your spot before telling your friends! =;-)=

*** Forum
**** [[https://forum.hdfgroup.org/t/check-if-hard-soft-external-link-is-broken/9543][Check if Hard/Soft/External link is broken]]
- How to detect broken soft or external links?
  - [[https://docs.hdfgroup.org/hdf5/develop/group___h5_l.html#ga171be6e41dc1a464edc402df0ebdf801][=H5Lexists=]] checks only for link existence in a group, not validity of destination
- Not a perfect match, but [[https://docs.hdfgroup.org/hdf5/develop/group___h5_o.html#title16][=H5Oexists_by_name=]] might do the trick
**** [[https://forum.hdfgroup.org/t/a-problem-when-saving-native-ldouble-variables/9504][A problem when saving =NATIVE_LDOUBLE= variables]]
- Interesting discussion around =NATIVE_LDOUBLE=
- Compiler and processor dependent => you are opening a can of worms
- Two options:
  - User-defined FP datatype + soft conversions (relatively safe)
  - Opaque datatype + metadata (dangerous)
**** [[https://forum.hdfgroup.org/t/error-read-failed/9531][Error: Read failed]]
- Mystery continues
- Trying to get a sample
- Use the core VFD to check if it's potentially a POSIX VFD/Windows issue
**** [[https://forum.hdfgroup.org/t/reading-and-writing-multiple-files-using-multiple-threads-c/9503][Reading and Writing Multiple Files Using Multiple Threads C++]]
- The HDF5 library can be built thread-safe
- Multiple threads can open HDF5 files independently
- BUT, currently, only a single thread can be executing code in the HDF5 library,
  i.e., there's no concurrency, at the moment
- Two options:
  - (Intermediate) Have a I/O request queue and a single thread servicing I/O
    requests
  - (Advanced) Carefully plan dataset allocation and file metadata discovery to
    do concurrent writes and reads outside the HDF5 library
**** [[https://forum.hdfgroup.org/t/memory-management-in-h5fd-class-t/9452][Memory management in =H5FD_class_t=]]
- [[https://github.com/HDFGroup/hdf5/pull/1502][GitHub PR#1502]]
- Good discussion
** Tips, tricks, & insights
(Out of time...)

* Clinic 2022-03-15
** Your questions
Re: split/multi driver question from Session 55.  On review, just would like to
confirm:
- Q :: Once the member files (=-s.h5, -b.h5, …=) are written with the =MULTI=
  driver (most likely on a POSIX filesystem), they must remain co-located.
- A :: No, however care must be used when re-opening them.
- Q :: They can, however, be copied into a (read-only) S3 bucket.
- A :: Yes.
- Q :: An application can read the S3 multi HDF5 "file" by configuring both
  the =MULTI= file driver and the =ROS3= driver
- A :: Yes, but this is untested.
- Q :: There is no provision for putting the raw data =-r.h5= on S3 and the
  others (=-s.h5, -b.h5, -g.h5, -l.h5, -o.h5=) on a local POSIX filesystem.
- A :: This should be possible, but has not been tested, AFAIK.

** Last week's highlights
*** Announcements
**** 2022 European HDF5 Users Group (HUG)
- [[https://www.hdfgroup.org/hug/europeanhug22/][Website]]
- May 31 - June 2, 2022
- Face-to-face at [[https://www.iter.org/][ITER]] in Saint Paul-lez-Durance, France
- Reserve your spot before telling your friends! =;-)=

*** Forum
**** [[https://forum.hdfgroup.org/t/reading-multiple-hdf5-files-mounted-on-remote-folder/7238][Reading multiple hdf5 files mounted on remote folder]]
- (Blast from the past)
- Not sure if that's an =h5py= issue
**** [[https://forum.hdfgroup.org/t/a-problem-when-saving-native-ldouble-variables/9504][A problem when saving =NATIVE_LDOUBLE= variables]]
- [[https://en.wikipedia.org/wiki/Long_double][Wikipedia:long double]]
- Need more information
**** [[https://forum.hdfgroup.org/t/reading-and-writing-multiple-files-using-multiple-threads-c/9503][Reading and Writing Multiple Files Using Multiple Threads C++]]
- Steven posted a good comment
- Too many options w/o additional context

** Tips, tricks, & insights
(Out of time...)

* Clinic 2022-03-08
** Your Questions
- Q :: ???

** Last week's highlights
*** Announcements
**** [[https://portal.hdfgroup.org/display/support/HDF5%201.13.1][HDF5 1.13.1 release]]
- [[https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.13/hdf5-1.13.1/src/hdf5-1.13.1-RELEASE.txt][Release notes]]
- Blog post [[https://www.hdfgroup.org/2022/03/parallel-compression-improvements-in-hdf5-1-13-1/][Parallel compression improvements in HDF5 1.13.1]]
  - Bug fixes & performance improvements and better support for collective I/O
  - Much improved IOR results from =Cori= at NERSC
  - For parallel dataset creation early allocation was the only option
    - Incremental file space allocation is now supported for datasets created in
      parallel but /only if/ they have filters applied to them

*** Forum
**** [[https://forum.hdfgroup.org/t/extent-the-dataspace-of-an-existing-attribute/9464][Extent the dataspace of an existing attribute]]
- Storing multiple physical quantities in a single scalar dataset, e.g.,
  velocity, density and temperature of a cubic with dimensional elements of
  =101 x 71 x 51= , the dataset would have for example an extent of =(3, 101, 71, 51)=
- How to keep track of quantity metadata, e.g., unit symbol?
  - What to do if we add a (e.g., fourth) quantity to the dataset?
***** Idea
Store the quantity metadata in an array-like attribute
***** Problems
- =H5T_ARRAY= class datatypes are fixed rank and extent
- Attribute dataspaces are not extendable
***** Solutions
All solutions come with different trade-offs!

- Assuming this doesn't happen too often: extend/re-write the attribute on
  each dimension change
- Use a variable-length sequence (VLEN) datatype: read/re-write the attribute
  on each dimension change
- Use a "shared" attribute (=attribute that is an object reference to an
  extendable dataset)
  - Note :: For the use case at hand, the sharing aspect is /not/
    important. It's the extendability of the object-referenced dataset.
  #+CAPTION: A "shared" attribute
  [[./img/shared_attribute.png]]

**** [[https://forum.hdfgroup.org/t/memory-leak-while-reading-data/9473][Memory Leak while Reading Data?]]
- Loop over a directory of HDF5 files and populate a list of per-file
  dictionaries
- A bit of a mystery; appears to happen only under macOS
  - No issues under Windows w/ =h5py= 2.x or 3.x, according to the user

** Tips, tricks, & insights
(Out of time...)
* Clinic 2022-03-01
** Your Questions
- Q :: ???

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/tutorial-announcement-constructing-a-simple-terminal-vol-connector/9187][Tutorial Announcement: Constructing a Simple Terminal VOL Connector]]
- [[https://youtu.be/7XEbm-__QuM][Recording]] and [[https://www.hdfgroup.org/wp-content/uploads/2022/02/VOL_tutorial_feb_2022.pdf][slides]] available
- [[https://github.com/HDFGroup/vol-toolkit][VOL toolkit]] on GitHub
*** Forum
**** [[https://forum.hdfgroup.org/t/can-compound-dataset-been-compressed/9457][Can Compound Dataset been compressed?]]
- Yes.
- Compound datatype with array datatype fields
- Misunderstanding on chunking and elements
- No [[https://en.wikipedia.org/wiki/Minimal_reproducible_example][Minimal Reproducible Example (MRE)]], no error messages
**** [[https://forum.hdfgroup.org/t/hdf5-crosscompile-to-arm64/6759][Hdf5 crosscompile to arm64]]
**** [[https://forum.hdfgroup.org/t/memory-management-in-h5fd-class-t/9452][Memory management in =H5FD_class_t=]]
- When the VFL layer was created (~1998?) there were only RAM and HDDs
- With GPU, FPGA, and other near-data computing devices there are new types of
  memory, storage, and storage access paths
- The (de-)allocation VFD callbacks deal with (de-)allocation of (virtual) file
  space
- I/O acceleration depends on device-specific memory
- Goal :: Avoid reams of device specific conditonally-compiled allocation code
- Approach :: Since the application selects a device-specific VFD, extend the
  [[https://docs.hdfgroup.org/hdf5/develop/struct_h5_f_d__class__t.html][=H5FD_class_t=]] interface with generic device-memory (de-)allocation callbacks
- Proposal :: My colleague Jordan Henderson recently added a control callback
  and a corresponding op-code.
  #+begin_src C
  /*
   * Defining H5FD_FEAT_MEMMANAGE for a VFL driver means that
   * the driver uses special memory management routines or wishes
   * to do memory management in a specific manner. Therefore, HDF5
   * should request that the driver handle any memory management
   * operations when appropriate.
   */
  #define H5FD_FEAT_MEMMANAGE 0x00010000

  herr_t (*ctl)(H5FD_t *file, uint64_t op_code, uint64_t flags,
                const void *input, void **output);

  #+end_src

** Tips, tricks, & insights
*** HDF5 extension APIs - Virtual File Layer (VFL)
- [[https://docs.hdfgroup.org/hdf5/develop/_v_f_l.html][Introductory technical note]]
#+caption: HDF5 extension APIs (Elena Pourmal, The HDF Group)
[[file:./img/vol_vfd.png]]
- No VFL toolkit, but using an existing VFD (= VFL plugin) is a good starting
  point, see files called =H5FD*.[c,h]= in the HDF5 source tree.
- Example: read-only VFD plugin for Hadoop File System (HDFS)
  - [[https://github.com/HDFGroup/hdf5/blob/develop/src/H5FDhdfs.h][=H5FDhdfs.h=]]
  - [[https://github.com/HDFGroup/hdf5/blob/develop/src/H5FDhdfs.c][=H5FDhdfs.c=]]
* Clinic 2022-02-22
** Your Questions
- Q :: Clarification/explanation on John Readey’s "seismic data" post regarding
  using native HDF5 as an HSDS "single object".  –Robert Seip

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/tutorial-announcement-constructing-a-simple-terminal-vol-connector/9187][Constructing a Simple Terminal VOL Connector]]
- It's happening on this Friday, February 25th, 11:00 a.m. to 1:00
  p.m. (Central)
- You can still register!
**** Check out another interesting blog post
- [[https://www.hdfgroup.org/2022/02/a-kind-of-magic-storing-computations-in-hdf5/][A Kind of Magic: Storing Computations in HDF5]]
  - The latest and greatest on Lucas C. Villa Real's [[https://github.com/lucasvr/hdf5-udf][HDF5-UDF]]
*** Forum
**** [[https://forum.hdfgroup.org/t/unable-to-open-a-dataset-in-my-hdf5-file/9425][Unable to open a Dataset in my HDF5 file]]
- It often helps to read what people are actually asking...
- I'm glad my colleague Aleksandar did just that and clarified that the way to
  obtain a NumPy array from a dataset is
  #+begin_src python
  phrase_numpy = phrase[...]
  #+end_src
  and *not*
  #+begin_src python
  phrase_numpy = np.array(phrase)
  #+end_src
**** [[https://forum.hdfgroup.org/t/read-subgroups-parallel-bug/9426][Read subgroups parallel bug?]]
- Poor performance of =H5Lget_name_by_idx= or =H5Literate= with large numbers of
  links
- Running against [[https://www.beegfs.io/c/][BeeGFS]]
- File sizes of 1-2 GB
- Better strategy: Use HDF5 core VFD ([[https://docs.hdfgroup.org/hdf5/develop/group___f_a_p_l.html#title51][=H5Pset_fapl_core=]]) to load into memory
  and then do the iteration without I/O at memory speed.
**** [[https://forum.hdfgroup.org/t/help-with-broken-file/9436][Help with broken file]]
- Sad story
- We talked about the HDF5 file state [[sec:clinic20210216][about a year ago]]
  - There are currently no user-level transactions in HDF5, making file content
    vulnerable to application crash
- Familiarity with the [[https://docs.hdfgroup.org/hdf5/develop/_f_m_t3.html][file format specification]] and [[https://github.com/HDFGroup/hdf5/blob/develop/tools/src/misc/h5debug.c][=h5debug=]] can help to
  inspect parts of an HDF5 file that is in an inconsistent state
- A proper discovery tool of recoverable information would be great & we even
  have ideas how to do it
  - There are comments in the file format specification such as this:
    #+begin_quote
    The ASCII character string "SNOD" is used to indicate the beginning of a
    symbol table node. This gives file consistency checking utilities a better
    chance of reconstructing a damaged file.
    #+end_quote
    Alas, those "file consistency checking utilities" never materialized.

** Tips, tricks, & insights
*** How do HDF5-UDF work?
Currently, they are represented as chunked datasets with a single chunk. That's
why they work fine with existing tools. The UDF itself is executed as part of the
HDF5 filter pipeline. Its code is stored in the dataset blob data plus metadata
and managed by the UDF handler.

#+CAPTION: =H5Dwrite_chunk=
[[./img/H5Dwrite_chunk.png]]

#+CAPTION: HDF5-UDF overview (Lucas C. Villa Real)
[[./img/hdf5-udf.png]]

- Example: [[https://github.com/lucasvr/user-defined-functions/tree/default/data_virtualization/csv][Virtualization of CSV files through HDF5-UDF]]

  #+begin_example python

  def dynamic_dataset():
      udf_data = lib.getData("GreatestAlbums")
      udf_dims = lib.getDims("GreatestAlbums")

      # The file is encoded as ISO-8859-1, so instruct Python about it
      with open("albumlist.csv", encoding="iso-8859-1") as f:

          # Read and ignore the header
          f.readline()

          for i, line in enumerate(f.readlines()):
              # Remove double-quotes and newlines around certain strings
              parts = [col.strip('"').strip("\n") for col in line.split(",")]
              udf_data[i].Number = int(parts[0])
              udf_data[i].Year = int(parts[1])
              lib.setString(udf_data[i].Album,  parts[2].encode("utf-8"))
              lib.setString(udf_data[i].Artist,  parts[3].encode("utf-8"))
              lib.setString(udf_data[i].Genre,  parts[4].encode("utf-8"))
              lib.setString(udf_data[i].Subgenre,  parts[5].encode("utf-8"))

#+end_example

- Resources
  - [[https://github.com/lucasvr/hdf5-udf][HDF5-UDF on GitHub]]
  - [[https://hdf5-udf.readthedocs.io/en/latest/#json-schema-for-hdf5-udf-datasets][HDF5-UDF Documentation]]
  - [[https://github.com/lucasvr/user-defined-functions/][HDF5-UDF examples]]

* Clinic 2022-02-15
** Your Questions
- Q :: ???

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/tutorial-announcement-constructing-a-simple-terminal-vol-connector/9187][VOL tutorial postponed]]
- New date February 25th, 11:00 a.m. to 1:00 p.m. (Central)
- You can still register
**** Check out this interesting blog post
- [[https://www.hdfgroup.org/2022/02/biosimulations-a-platform-for-sharing-and-reusing-biological-simulations/][/BioSimulations: a platform for sharing and reusing biological simulations/]]
*** Forum
**** [[https://forum.hdfgroup.org/t/read-compound-data-to-buffer/9402][Read compound data to buffer]]
- HDFView screenshot of a compound dataset
- Simple & elegant [[https://www.hdfql.com/][HDFql]] solution
  #+begin_src C++
  #include <iostream>
  #include "HDFql.hpp"

  struct data
  {
      unsigned long long timestamp;
      int order;
      int serial_number;
      double temperature;
      double pressure;
      int int_array[2][2];
  };

  int main(int argc, char *argv[])
  {
     struct data values[4];

     HDFql::variableRegister(values);

     HDFql::execute("select from h5ex_t_cmpd.h5 DS1 into memory 0");

     for(int i = 0; i < 4; i++)
     {
         std::cout << "Timestamp=" << values[i].timestamp << std::endl;
         std::cout << "Order=" << values[i].order << std::endl;
         std::cout << "Serial number=" << values[i].serial_number << std::endl;
         std::cout << "Temperature=" << values[i].temperature << std::endl;
         std::cout << "Pressure=" << values[i].pressure << std::endl;
         std::cout << "IntArray[0][0]=" << values[i].int_array[0][0] << std::endl;
         std::cout << "IntArray[0][1]=" << values[i].int_array[0][1] << std::endl;
         std::cout << "IntArray[1][0]=" << values[i].int_array[1][0] << std::endl;
         std::cout << "IntArray[1][1]=" << values[i].int_array[1][1] << std::endl;
     }

     return 0;
  }
  #+end_src
**** [[https://forum.hdfgroup.org/t/can-we-use-external-links-to-read-only-data-in-writable-files/9390][Can we use external links to read-only data in writable files?]]
- Interesting follow-up from Thomas Kluyver (=h5py= project)
  - =h5py= does not currently expose =H5Pset_elink_acc_flags=
  - Would be easy to do in the low-level API
  - High-level API unclear
- Ambiguous error message; API failure due to insufficient permissions
  vs. non-existent file or directory
  - [[https://github.com/HDFGroup/hdf5/issues/1431][GitHub issue]]
**** [[https://forum.hdfgroup.org/t/read-subgroups-parallel-bug/9426][Read subgroups parallel bug?]]
- Goal: Determine the link names of blocks of subgroups in a group in parallel.
- Idea: Assign a link index range to each MPI process and fire away:
  =H5Lget_name_by_idx=.
- Issues:
  - MPI hangs; not sure why...
  - =H5Lget_name_by_idx= is an expensive call, looping over =idx= makes it worse
    - Parallel file systems don't like it
  - =H5Literate= + callback would be better, but not much
    - To many small reads will be a drag on performance
- The real question is what the underlying use case is about.
  - Maybe a dataset of object references instead of a group would be more
    suitable?
** Tips, tricks, & insights
*** Do you need a link or a reference?
- HDF5 link :: Explicit, unidirectional, named association between a source
  (HDF5 group) and a destination
  #+begin_example
       name
  src -------> dst
  #+end_example
- HDF5 (object) reference :: An HDF5 datatype whose values represent references
  (pointers) to HDF5 objects in the same or other HDF5 files.
  #+begin_example
  &object
  #+end_example

**** Similarities
- Links can be used in the role of a (non-value) reference
  - A link can be "de-referenced" by link traversal
- References can be used as implicit links
  - A reference can be "traversed" by address/token resolution

**** Differences
- Links
  - Are inseparable from groups and not values of an HDF5 datatype
  - Have a name
  - Can be dangling
- References
  - Are values of an HDF5 datatype
  - We can store them in attributes and datasets
  - Have no name other than their implicit position
  - Cannot dangle

* Clinic 2022-02-08
** Your Questions
- Q :: ???
- Q :: Can a point selection be written to/read from a hypserslab selection?
       Does this work in parallel? Yes!
       #+begin_src C
       #include "hdf5.h"
       #include "mpi.h"

       #include <stdlib.h>

       int main(int argc, char** argv)
       {
         // boilerplate
         int retval = EXIT_SUCCESS;
         if (MPI_Init(&argc, &argv) != MPI_SUCCESS) {
           retval = EXIT_FAILURE;
           goto fail_mpi;
         }

         MPI_Comm comm = MPI_COMM_WORLD;
         int size, rank;
         if (MPI_Comm_size(comm, &size) != MPI_SUCCESS ||
             MPI_Comm_rank(comm, &rank) != MPI_SUCCESS) {
           retval = EXIT_FAILURE;
           goto fail_file;
         }

         hid_t fapl = H5I_INVALID_HID;
         if ((fapl = H5Pcreate(H5P_FILE_ACCESS)) == H5I_INVALID_HID ||
             H5Pset_fapl_mpio(fapl, comm, MPI_INFO_NULL) < 0) {
           retval = EXIT_FAILURE;
           goto fail_file;
         }

         hid_t file = H5I_INVALID_HID;
         if ((file = H5Fcreate("sel_par.h5", H5F_ACC_TRUNC, H5P_DEFAULT, fapl))
             == H5I_INVALID_HID) {
           retval = EXIT_FAILURE;
           goto fail_file;
         }

         // 1D filespace, size of communicator
         hid_t fspace = H5I_INVALID_HID;
         if ((fspace = H5Screate_simple(1, (hsize_t[]) {2*size}, NULL)) ==
             H5I_INVALID_HID) {
           retval = EXIT_FAILURE;
           goto fail_fspace;
         }

         hid_t dset = H5I_INVALID_HID;
         if ((dset = H5Dcreate(file, "ints", H5T_STD_I32LE, fspace, H5P_DEFAULT,
                               H5P_DEFAULT, H5P_DEFAULT)) == H5I_INVALID_HID) {
           retval = EXIT_FAILURE;
           goto fail_dset;
         }

         // 2-element memory space
         hid_t mspace = H5I_INVALID_HID;
         if ((mspace = H5Screate_simple(1, (hsize_t[]) {2}, NULL)) ==
             H5I_INVALID_HID) {
           retval = EXIT_FAILURE;
           goto fail_mspace;
         }

         int data[2] = { 2*rank, 2*rank+1 };

         // 1. Make a (single) point selection in memory
         // 2. Make a hyperslab selection in the file
         // 3. Write
         if (H5Sselect_elements(mspace, H5S_SELECT_SET, 1, (hsize_t[]){0}) < 0 ||
             H5Sselect_hyperslab(fspace, H5S_SELECT_SET, (hsize_t[]){2*rank}, NULL,
                                 (hsize_t[]){1}, (hsize_t[]){1}) < 0 ||
             H5Dwrite(dset, H5T_NATIVE_INT, mspace, fspace, H5P_DEFAULT, data) < 0) {
           retval = EXIT_FAILURE;
           goto fail_write;
         }

       fail_write:
         H5Sclose(mspace);
       fail_mspace:
         H5Dclose(dset);
       fail_dset:
         H5Sclose(fspace);
       fail_fspace:
         H5Fclose(file);
       fail_file:
         if (fapl != H5I_INVALID_HID)
           H5Pclose(fapl);

         MPI_Barrier(comm);

         MPI_Finalize();

       fail_mpi:
         return retval;
       }
       #+end_src
       Output:
       #+begin_example
       penguin:~$ mpiexec -n 4 ./sel_par
       penguin:~$ h5dump sel_par.h5
       HDF5 "sel_par.h5" {
       GROUP "/" {
          DATASET "ints" {
             DATATYPE  H5T_STD_I32LE
             DATASPACE  SIMPLE { ( 8 ) / ( 8 ) }
             DATA {
             (0): 0, 0, 2, 0, 4, 0, 6, 0
             }
          }
       }
       }
       #+end_example

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/tutorial-announcement-constructing-a-simple-terminal-vol-connector/9187][VOL tutorial postponed]]
- New date February 25th, 11:00 a.m. to 1:00 p.m. (Central)
- You can still register
**** Check out this interesting blog post
- [[https://www.hdfgroup.org/2022/02/biosimulations-a-platform-for-sharing-and-reusing-biological-simulations/][/BioSimulations: a platform for sharing and reusing biological simulations/]]
*** Forum
**** [[https://forum.hdfgroup.org/t/recover-corrupted-datasets/9375][Recover corrupted datasets]]
- Turns out that there was a single corrupted chunk
- Unclear how it got corrupted
- The user was able to recover the good chunks via [[https://docs.hdfgroup.org/hdf5/develop/group___h5_d.html#title30][=H5Dread_chunk=]]
**** [[https://forum.hdfgroup.org/t/using-gzip-compression-does-not-compress-and-cannot-be-opened-by-hdfview/9388][Using GZIP compression does not compress, and cannot be opened by HDFView]]
- It appears that the user didn't appreciate the implications of using
  [[https://docs.hdfgroup.org/hdf5/develop/group___h5_d.html#title37][=H5Dwrite_chunk=]]
  - Using this function tells the HDF5 library to "step aside" and let the
    user take full control
  - Compression outside the library is fine, but you need to make sure that
    the right metadata is in place
**** [[https://forum.hdfgroup.org/t/why-are-there-err-files-next-to-test-files-in-binary-plugin-download/9394][Why are there .err files next to test files in binary plugin download?]]
- Just artifacts for testing
- Could they be stripped from release binaries? Perhaps.
**** [[https://forum.hdfgroup.org/t/can-we-use-external-links-to-read-only-data-in-writable-files/9390][Can we use external links to read-only data in writable files?]]
- Traversing external links typically involves opening another HDF5 file
- What's the access mode? (The link does *NOT* contain that information.)
  - Default access mode: inherited from the link's "parent"
  - Can be overwritten via a link access property list with [[https://docs.hdfgroup.org/hdf5/develop/group___l_a_p_l.html#ga020f7eb2eae01043286af50db0a76d82][=H5Pset_elink_acc_flags=]]
**** [[https://forum.hdfgroup.org/t/compression-filter-that-employes-multiple-datasets/9398][Compression filter that employes multiple datasets]]
- Use case: compression of unstructured mesh connectivity
  - Involves multiple datasets
  - The current filter extension API has no support for that

** Tips, tricks, & insights


Back next time.

* Clinic 2022-02-01
** Your Questions
- Q :: ???
- Q :: Can a point selection be written to/read from a hypserslab selection?
       Does this work in parallel?
  - It appears to work for simple examples in sequential mode
  - I have yet to try parallel mode

** Last week's highlights
*** Announcements
**** Auth0 authentication issues resolved
- Let us know if you still have issues!
**** [[https://forum.hdfgroup.org/t/tutorial-announcement-constructing-a-simple-terminal-vol-connector/9187][VOL tutorial postponed]]
- New date February 25th, 11:00 a.m. to 1:00 p.m. (Central)
- You can still register
**** Hermes 0.3.0-beta release
- Available on [[https://github.com/HDFGroup/hermes/releases][GitHub]]
- Most notable change: a [[https://github.com/HDFGroup/hermes/wiki/Adapters#pubsub-adapter][publisher/subscriber API]] by Jamie Cernuda
**** Stay tuned for an upcoming blog post
- [[https://www.hdfgroup.org/2022/02/biosimulations-a-platform-for-sharing-and-reusing-biological-simulations/][/BioSimulations: a platform for sharing and reusing biological simulations/]]
*** Forum
- ???

** Tips, tricks, & insights
*** HDFView binaries for Debian and Ubuntu
- They are well-hidden =:-(=
  - It takes *four* clicks to get there (if you know where to go...)
- Current version (HDFView 3.1.3) [[https://support.hdfgroup.org/ftp/HDF5/releases/HDF-JAVA/hdfview-3.1.3/bin/][link]]
  - [[https://support.hdfgroup.org/ftp/HDF5/releases/HDF-JAVA/hdfview-3.1.3/bin/HDFView-3.1.3-ubuntu2004_64.tar.gz][HDFView-3.1.3-ubuntu2004_64.tar.gz]]
  - [[https://support.hdfgroup.org/ftp/HDF5/releases/HDF-JAVA/hdfview-3.1.3/bin/HDFView-3.1.3-ubuntu2010_64.tar.gz][HDFView-3.1.3-ubuntu2010_64.tar.gz]]
- Download an unpack (=tar -zxvf ...=)
- Content Debian installer and =README.txt=
- Install w/ =sudo dpkg -i hdfview_..._amd64deb=
- Installation directories =/opt/hdfview/[bin,lib,share]=
- Launch w/ =/opt/hdfview/bin/HDFView= (add to your =PATH= as needed)
- Does it need to be this hard?

*** One Stop HDF5 - [[https://hdflab.hdfgroup.org/][HDF Lab]]
- Your registration w/ the HDF Group website is the ticket
- Home directory w/ 10 GB of free storage
- HSDS, =h5py=, =h5cc=
- Plenty of examples (Jupyter notebooks, Python scripts, etc.)
- /Coming soon:/ [[https://h5web.panosc.eu/hsds][=h5web=]]

*** [[https://software.pan-data.eu/software/180/h5web][=h5web=]]
- Developed by [[https://esrf.fr/][ESRF]]
- [[https://reactjs.org/][React]] components for data visualization and exploration
  - "HDFView for the browser"
- [[https://github.com/silx-kit/h5web][GitHub]]
- Supports HDF5 files in POSIX file systems & HSDS
- A JupyterHub plugin, [[https://github.com/silx-kit/jupyterlab-h5web][jupyterlab-h5web]], is available

* Clinic 2022-01-25
** Your Questions
- Q :: ???
- Q :: Can a point selection be written to/read from a hypserslab selection?
       Does this work in parallel?
  - It appears to work for simple examples in sequential mode
  - I have yet to try parallel mode

** Last week's highlights
*** Announcements
**** Auth0 authentication issues (apologies...)
**** [[https://forum.hdfgroup.org/t/tutorial-announcement-constructing-a-simple-terminal-vol-connector/9187][VOL tutorial postponed]]
- New date February 25th, 11:00 a.m. to 1:00 p.m. (Central)
- You can still register
*** Forum
**** [[https://forum.hdfgroup.org/t/does-the-mpi-driver-lock-the-file/9318][Does the MPI driver lock the file?]]
- Yes, but I don't understand the user's description
#+begin_quote
I implemented a stride which tells the generation script how much work is being
sent to each slave from the master. Now I have 4 datasets and each dataset has
something like 400k entries. Each slave rank will write to all 4 datasets.

Now if I set the stride to a low value (10), the generation is way faster than
if I set it to a big value (1024).

I wasn’t able to find how parallelism is exactly implemented. From the above
behaviour it looks like the file is being locked which then blocks my whole
program, especially if the stride is big (more time for the other ranks to run
into a lock and be idle in between). Is that really the case? I write data
continuously, so theoretically there is no need for a lock. Is is possible to
tell the driver “don’t lock the file”?
#+end_quote
- What's a 'stride'? (not a hyperslab stride...)
- Parallelism is implemented through MPI-I/O
- How does a file lock block the program?
- File locks can be disabled programmatically or via environment variable
**** [[https://forum.hdfgroup.org/t/h5datatype-with-variable-length-how-to-set-the-values/9162][H5Datatype with variable length: How to set the values?]]
- [[https://www.hdfql.com/][HDFql]] is adding support for variable-length datatypes in JAVA
  #+begin_src java
  // declare Java class that "mimics" the HDF5 compound dataset
  class Data
  {
      int myDimension;
      int myShapeType;
      int myInterpolationType;
      int myIntegrationType;
      int myNumberOfNormalComponents;
      int myNumberOfShearComponents;
      ArrayList myConnectivity;
      ArrayList myFaceConnectivity;
  }

  // declare variables
  Data write[] = new Data[1];
  Data read[] = new Data[1];

  // create HDF5 file 'myFile.h5' and use (i.e. open) it
  HDFql.execute("CREATE AND USE FILE myFile.h5");

  // create compound dataset 'myDataset'
  HDFql.execute("CREATE DATASET myDataset AS COMPOUND(myDimension AS INT, myShapeType AS INT, myInterpolationType AS INT, myIntegrationType AS INT, myNumberOfNormalComponents AS INT, myNumberOfShearComponents AS INT, myConnectivity AS VARINT, myFaceConnectivity AS VARINT)");

  // populate variable 'write' with dummy values
  write[0] = new Data();
  write[0].myDimension = 1;
  write[0].myShapeType = 2;
  write[0].myInterpolationType = 3;
  write[0].myIntegrationType = 4;
  write[0].myNumberOfNormalComponents = 5;
  write[0].myNumberOfShearComponents = 6;
  write[0].myConnectivity = new ArrayList();
  write[0].myConnectivity.add(10);
  write[0].myConnectivity.add(20);
  write[0].myFaceConnectivity = new ArrayList();
  write[0].myFaceConnectivity.add(30);
  write[0].myFaceConnectivity.add(40);
  write[0].myFaceConnectivity.add(50);

  // write content of variable 'write' into dataset 'myDataset'
  HDFql.execute("INSERT INTO myDataset VALUES FROM MEMORY " + HDFql.variableRegister(write));

  // read content of dataset 'myDataset' and populate variable 'read' with it
  HDFql.execute("SELECT FROM myDataset INTO MEMORY " + HDFql.variableRegister(read));

  // display content of variable 'read'
  System.out.println("myDimension: " + read[0].myDimension);
  System.out.println("myShapeType: " + read[0].myShapeType);
  System.out.println("myInterpolationType: " + read[0].myInterpolationType);
  System.out.println("myIntegrationType: " + read[0].myIntegrationType);
  System.out.println("myNumberOfNormalComponents: " + read[0].myNumberOfNormalComponents);
  System.out.println("myNumberOfShearComponents: " + read[0].myNumberOfShearComponents);
  for(int i = 0; i < read[0].myConnectivity.size(); i++)
      {
          System.out.println("myConnectivity: " + read[0].myConnectivity.get(i));
      }
  for(int i = 0; i < read[0].myFaceConnectivity.size(); i++)
      {
          System.out.println("myFaceConnectivity: " + read[0].myFaceConnectivity.get(i));
      }
  #+end_src
** Tips, tricks, & insights
*** HDF5 - the better TXT format
- Source in [[https://github.com/gheber/h5zip][GitHub repo]]
- Basic idea (Joe Lee): Store text files as compressed byte streams in HDF5 files.
- *Pros:*
  - Passes the =diff= test
  - Size reduction
  - Portable metadata + rich annotation
    - Unicode encoding
    - Dataset region references
- *Cons:*
  - Not suitable as editor back-ends

* Clinic 2022-01-18
** Your Questions
- Q :: ???
- Q :: Can a point selection be written to/read from a hypserslab selection?
       Does this work in parallel?
  - It appears to work for simple examples in sequential mode
  - I have yet to try parallel mode

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/tutorial-announcement-constructing-a-simple-terminal-vol-connector/9187][VOL tutorial postponed]]
- New date February 25th, 11:00 a.m. to 1:00 p.m. (Central)
- You can still register
*** Forum
**** [[https://forum.hdfgroup.org/t/is-hsds-self-hosted/9315][Is HSDS self-hosted?]]
- Can I host it myself?
 - Yes, you can!
- References:
  - [[https://github.com/HDFGroup/hsds][Quick Start]]
  - Python: [[https://github.com/HDFGroup/h5pyd][=h5pyd=]] via =pip=.
    #+begin_src python
    import h5pyd as h5py
    ...
    #+end_src
  - [[https://www.youtube.com/watch?v=9b5TO7drqqE&t=2161s][Learn about the open source Highly Scalable Data Service (HSDS) Webinar]]
  - [[https://www.hdfgroup.org/hdfkitalab/][HDF Lab]]
**** [[https://forum.hdfgroup.org/t/convert-seismic-data-segy-format-to-hdf5-data/9337][convert seismic data (segy format) to HDF5 data?]]
- Not really a problem for "geeks"
- [[https://academic.oup.com/gji/article/207/2/1003/2583765][An Adaptable Seismic Data Format]]
- [[https://seismic-data.org/][Seismic Data]]
**** [[https://forum.hdfgroup.org/t/hdf5-doesnt-support-writing-vlens-with-parallel-i-o/4420][HDF5 doesn’t support writing VLENs with parallel I/O?]]
- Current (internal) VL representation is rather inefficient
- Fix/revise first, then parallelization
**** [[https://forum.hdfgroup.org/t/error-when-selecting-and-writing-an-element-dataset-hdf5-1-10-4/9330][Error when selecting and writing an element dataset hdf5 1.10.4]]
- (Bogus) Error message suggests that =H5T_NATIVE_DOUBLE= is not a valid datatype
- Maybe shared library not found or multiple copies?
** Tips, tricks, & insights
*** Highly Scalable Data Service (HSDS)
- "HDF5 as a Service"
- REpresentational State Transfer ([[https://en.wikipedia.org/wiki/Representational_state_transfer][REST]])
- [[https://www.hdfgroup.org/hdfkitalab/][HDF Lab]] has a few examples
- Let's do it! (from Emacs)
- HDF5 file "=" HSDS domain
- Querying a domain
  #+begin_src restclient :exports both

  GET http://hsdshdflab.hdfgroup.org/?domain=/shared/tall.h5

  #+end_src
- Querying the HDF5 root group w/ resource ID =g-d38053ea-3418fe27-5b08-db62bc-9076af=
  #+begin_src restclient :exports both

  GET http://hsdshdflab.hdfgroup.org/groups/g-d38053ea-3418fe27-5b08-db62bc-9076af/links?domain=/shared/tall.h5

  #+end_src
- Let's look at a dataset
  #+begin_src restclient :exports both

  GET http://hsdshdflab.hdfgroup.org/datasets/d-d38053ea-3418fe27-cb7b-00379e-75d3e8?domain=/shared/tall.h5

  #+end_src
- Check it out with your favorite REST client!

* Clinic 2022-01-11
** Your Questions
- Q :: ???
- Q :: Can a point selection be written to/read from a hypserslab selection?
       Does this work in parallel?
  - It appears to work for simple examples in sequential mode
  - I have yet to try parallel mode

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/tutorial-announcement-constructing-a-simple-terminal-vol-connector/9187][VOL tutorial postponed]]
- New date February 25th, 11:00 a.m. to 1:00 p.m. (Central)
- You can still register
*** Forum
**** [[https://forum.hdfgroup.org/t/select-hyperslab-of-vl-data/9300][select hyperslab of VL data]]
- Two issues:
  1. Getting the selections right
  2. Dealing w/ VLEN data
     #+begin_src C

     struct s_data {
         uint64_t b;
         uint16_t a;
     };

     struct ext_data3 {
         uint64_t a;
         uint32_t b;
         int16_t nelem;
         struct s_data data[3];  // <- ARRAY
     };

     struct ext_data {
         uint64_t a;
         uint32_t b;
         int16_t nelem;
         struct s_data data[];   // <- VLEN
     };

     #+end_src
     - Nested compound (surface) datatype
     - Attempted byte-stream representation as =\0=-terminated VLEN string
**** [[https://forum.hdfgroup.org/t/dynamically-change-the-file-access-property-list/9314][Dynamically change the File Access Property List]]
- File access properties
  - Vs. file creation properties
- Set before file creation or file open
  #+begin_src C
  hid_t fapl = H5Pcreate(H5P_FILE_ACCESS);
  H5Pset_alignment(fapl, threshold, alignment);
  ...
  H5Fopen(..., fapl) or  H5Fcreate(..., fapl)
  ...
  #+end_src
- What is the use case for changing them dynamically?
  - Wouldn't make sense for some properties, e.g., VFD
  - Dynamic alignment changes, why?

** Tips, tricks, & insights
*** HDF5 snippets
- Developer productivity
  - IntelliSense in VSCode
  - [[https://github.com/Microsoft/language-server-protocol/][Language Server Protocol (LSP)]]
  - Emacs has support for LSP via [[https://emacs-lsp.github.io/lsp-mode/][=lsp-mode=]]
    - Resource-intensive
    - Not a templating mechanism
  - [[https://github.com/joaotavora/yasnippet][YASnippet]] is a template system for Emacs
  - Easy to install and configure
    #+begin_src elisp

    (use-package yasnippet
      :custom
      (yas-triggers-in-field t)
      :config
      (setq yas-snippet-dirs "~/.emacs.d/snippets")
      (yas-global-mode 1))

    #+end_src
  - A (growing) set of snippets can be found [[https://github.com/HDFGroup/emacs/tree/master/snippets][here]]
  - Demo
* Clinic 2022-01-04
** Your Questions
- Q :: ???
- Q :: Can a point selection be written to/read from a hypserslab selection?
       Does this work in parallel?
  - It appears to work for simple examples in sequential mode
  - I have yet to try parallel mode

** Last week's highlights
*** Announcements
Happy New Year!
*** Forum
**** [[https://forum.hdfgroup.org/t/repair-corrupted-file/9288][Repair corrupted file]]
- There's no general tool for that (yet)
- Rigorous error checking and resource handling goes a long way
  #+begin_src C
  {
    __label__ fail_file;
    hid_t file, group;
    char  src_path[] = "/a/few/groups";

    if ((file = H5Fcreate("o1.h5", H5F_ACC_TRUNC, H5P_DEFAULTx2)) ==
         H5I_INVALID_HID) {
      ret_val = EXIT_FAILURE;
      goto fail_file;
    }

    // create a few groups
    {
      __label__ fail_group, fail_lcpl;
      hid_t lcpl;
      if ((lcpl = H5Pcreate(H5P_LINK_CREATE)) == H5I_INVALID_HID) {
        ret_val = EXIT_FAILURE;
        goto fail_lcpl;
      }
      if (H5Pset_create_intermediate_group(lcpl, 1) < 0) {
        ret_val = EXIT_FAILURE;
        goto fail_group;
      }
      if ((group = H5Gcreate(file, src_path, lcpl, H5P_DEFAULTx2)) ==
           H5I_INVALID_HID) {
        ret_val = EXIT_FAILURE;
        goto fail_group;
      }

      H5Gclose(group);
    fail_group:
      H5Pclose(lcpl);
    fail_lcpl:;
    }

    // create a copy
    if (H5Ocopy(file, ".", file, "copy of", H5P_DEFAULTx2) < 0) {
      ret_val = EXIT_FAILURE;
    }

    H5Fclose(file);
  fail_file:;
  }
  #+end_src
- This looks pretty awkward, but there's some method to the madness...

** Tips, tricks, & insights
*** [[https://forum.hdfgroup.org/t/hdfql-emacs-org-winning-combo/9241][A GUI for HDFql]]
- [[https://www.hdfql.com/][HDFql]] is the [[https://en.wikipedia.org/wiki/La-Z-Boy][La-Z-Boy]] of HDF5 interfaces
  - SQL is convenient and concise because we say what we want (declarative) rather
    than how to do it (imperative).
- Example (evaluate with =C-c C-c=):
  #+begin_src hdfql :exports both :results output

  CREATE TRUNCATE AND USE FILE my_file.h5

  CREATE DATASET my_group/my_dataset AS double(3) ENABLE zlib LEVEL 0 VALUES(4, 8, 6)

  SELECT FROM DATASET my_group/my_dataset

  #+end_src

  #+RESULTS:
  : 4.000000
  : 8.000000
  : 6.000000

- Really?
  #+begin_src shell :exports both :results output

  h5dump -p my_file.h5

  #+end_src

  #+RESULTS:
  #+begin_example
  HDF5 "my_file.h5" {
  GROUP "/" {
     GROUP "my_group" {
        DATASET "my_dataset" {
           DATATYPE  H5T_IEEE_F64LE
           DATASPACE  SIMPLE { ( 3 ) / ( 3 ) }
           STORAGE_LAYOUT {
              CHUNKED ( 3 )
              SIZE 35 (0.686:1 COMPRESSION)
           }
           FILTERS {
              COMPRESSION DEFLATE { LEVEL 0 }
           }
           FILLVALUE {
              FILL_TIME H5D_FILL_TIME_IFSET
              VALUE  H5D_FILL_VALUE_DEFAULT
           }
           ALLOCATION_TIME {
              H5D_ALLOC_TIME_INCR
           }
           DATA {
           (0): 4, 8, 6
           }
        }
     }
  }
  }
  #+end_example

- *Homework:* What's the line count of an program written in C?
- [[https://www.gnu.org/software/emacs/][Emacs]] supports the execution of source code blocks in [[https://orgmode.org/][Org mode]]
- HDFql comes with a command line interface
- Combine the two w/ a snippet of [[https://www.gnu.org/software/emacs/manual/html_node/elisp/][Emacs Lisp]] code
  #+begin_src emacs-lisp

  ;; We assume that HDFqlCLI is in the path and that libHDFql.so is in
  ;; the LD_LIBRARY_PATH.

  (defun org-babel-execute:hdfql (body params)
    "Execute a block of HDFql code with org-babel."
    (message "executing HDFql source code block")
    (org-babel-eval
     (format "HDFqlCLI --no-status --execute=\"%s\"" body) ""))

  (push '("hdfql" . sql) org-src-lang-modes)

  (add-to-list 'org-structure-template-alist '("hq" . "src hdfql"))

  #+end_src
- The rest is cosmetics
- See [[https://github.com/HDFGroup/emacs][this GitHub repo]] for HDF5 support in Emacs
- Fork and create a PR, if you are interested in pushing this forward!

* Clinic 2021-12-21
** Your Questions
- Q :: ???
- Q :: Can a point selection be written to/read from a hypserslab selection?
       Does this work in parallel?
  - It appears to work for simple examples in sequential mode
  - I have yet to try parallel mode

** Last week's highlights
*** Announcements
Nothing to report.
*** Forum
**** [[https://forum.hdfgroup.org/t/memory-management-in-conversions-of-variable-length-data-types/9250][Memory management in conversions of variable length data types]]
- Reading data represented as HDF5 variable-length sequences. => [[https://docs.hdfgroup.org/hdf5/develop/structhvl__t.html][~hvl_t~]]
  #+begin_src C

  typedef struct {
      size_t len; /**< Length of VL data (in base type units) */
      void * p;   /**< Pointer to VL data */
  } hvl_t;

  #+end_src
- Who owns the memory attached to =p=?
- *The caller!* Clean up w/ [[https://docs.hdfgroup.org/hdf5/develop/group___h5_d.html#ga222a2fd93868e2524b2e42c3c6146119][~H5Dvlen_reclaim~]] (pre-HDF5 1.12.x) or [[https://docs.hdfgroup.org/hdf5/develop/group___v_l_e_n.html#ga6851783a68a0f868c27300cb5622fbbe][~H5Treclaim~]]
  (HDF5 1.12+)
**** [[https://forum.hdfgroup.org/t/read-write-compound-containing-std-string-using-native-c-hdf5-lib/9258][Read/write compound containing `std::string` using native C hdf5 lib]]
- Don't pass C++ objects as arguments to C library functions!
  - You might get lucky, but you are relying on compiler peculiarities.
    - /Your luck will run out eventually./
#+begin_src C++

typedef struct {
    int     serial_no;
    std::string location;  // CHANGED FROM char* to std::string
    double  temperature;
    double  pressure;
} sensor_t;

#+end_src
- Works with ~H5Dwrite~ for strings of a certain size, fails for ~H5Dread~
- See [[https://joellaity.com/2020/01/31/string.html][libc++'s implementation of ~std::string~]] by Joel Laity for details.
**** [[https://forum.hdfgroup.org/t/merge-2-groups-from-the-same-h5-file/9260][Merge 2 groups from the same h5 file]]
- Simple example
  #+begin_example

                 ?
  /G1/D + /G2/D ---> /G3/( Σ = /G1/D + G2/D )

  #+end_example
- In this simple example, we want to "append" the elements of the dataset
  =/G2/D= to the elements of the dataset =/G1/D=
- Question: Is copying dataset elements problematic?
  - YES :: Use virtual datasets! The also provides maximum flexibility in
    defining Σ and mapping the constituent datasets.
    - If you are using an older version of HDF5, you could define a dataset of
      region references to fake virtual datasets. This is much less convenient.
  - NO :: Pedestrian approach: create a new (joint) dataset which can accommodate
    the constituent datasets and read and write the elements from the
    constituents.
    - *Wrinkle:* The constituent datasets are too large and to fit into memory.
      - Page your way through the constituents!

** Tips, tricks, & insights
*** [[https://forum.hdfgroup.org/t/hdfql-emacs-org-winning-combo/9241][A GUI for HDFql]]
- [[https://www.hdfql.com/][HDFql]] is the [[https://en.wikipedia.org/wiki/La-Z-Boy][La-Z-Boy]] of HDF5 interfaces
  - SQL is convenient and concise because we say what we want (declarative) rather
    than how to do it (imperative).
- Example (evaluate with =C-c C-c=):
  #+begin_src hdfql :exports both :results output

  CREATE TRUNCATE AND USE FILE my_file.h5

  CREATE DATASET my_group/my_dataset AS double(3) ENABLE zlib LEVEL 0 VALUES(4, 8, 6)

  SELECT FROM DATASET my_group/my_dataset

  #+end_src

  #+RESULTS:
  : 4.000000
  : 8.000000
  : 6.000000

- Really?
  #+begin_src shell :exports both :results output

  h5dump -p my_file.h5

  #+end_src

  #+RESULTS:
  #+begin_example
  HDF5 "my_file.h5" {
  GROUP "/" {
     GROUP "my_group" {
        DATASET "my_dataset" {
           DATATYPE  H5T_IEEE_F64LE
           DATASPACE  SIMPLE { ( 3 ) / ( 3 ) }
           STORAGE_LAYOUT {
              CHUNKED ( 3 )
              SIZE 35 (0.686:1 COMPRESSION)
           }
           FILTERS {
              COMPRESSION DEFLATE { LEVEL 0 }
           }
           FILLVALUE {
              FILL_TIME H5D_FILL_TIME_IFSET
              VALUE  H5D_FILL_VALUE_DEFAULT
           }
           ALLOCATION_TIME {
              H5D_ALLOC_TIME_INCR
           }
           DATA {
           (0): 4, 8, 6
           }
        }
     }
  }
  }
  #+end_example

- *Homework:* What's the line count of an program written in C?
- [[https://www.gnu.org/software/emacs/][Emacs]] supports the execution of source code blocks in [[https://orgmode.org/][Org mode]]
- HDFql comes with a command line interface
- Combine the two w/ a snippet of [[https://www.gnu.org/software/emacs/manual/html_node/elisp/][Emacs Lisp]] code
  #+begin_src emacs-lisp

  ;; We assume that HDFqlCLI is in the path and that libHDFql.so is in
  ;; the LD_LIBRARY_PATH.

  (defun org-babel-execute:hdfql (body params)
    "Execute a block of HDFql code with org-babel."
    (message "executing HDFql source code block")
    (org-babel-eval
     (format "HDFqlCLI --no-status --execute=\"%s\"" body) ""))

  (push '("hdfql" . sql) org-src-lang-modes)

  (add-to-list 'org-structure-template-alist '("hq" . "src hdfql"))

  #+end_src
- The rest is cosmetics:
  - Syntax highlighting ("font locking" in Emacs-speak)
  - Auto-indentation
  - Sessions
  - Ping me ([[mailto:gheber@hdfgroup.org][Gerd Heber]]), if you are interested in pushing this forward!

** On behalf of The HDF Group, I wish you a Merry Christmas and a Happy New Year!
Stay safe & come back next year!

* Clinic 2021-12-07
** Your Questions
- Q :: ???
- Q :: Can a point selection be written to/read from a hypserslab selection?
       Does this work in parallel?
  - It appears to work for simple examples in sequential mode
  - I have yet to try parallel mode

** Last week's highlights
*** Announcements
**** We had a great webinar [[https://forum.hdfgroup.org/t/accelerate-i-o-operations-with-hermes/9142][Accelerate I/O operations with Hermes]]
- Stay tuned for the recording on YouTube
- The Hermes project now has its [[https://forum.hdfgroup.org/c/Hermes][forum category]]
  - Follow announcements, ask questions, participate!
**** [[https://forum.hdfgroup.org/t/release-of-hdf5-1-13-0-newsletter-181-the-hdf-group/9224][Release of HDF5-1.13.0]]
- An /odd/ release number?
  - Experimental vs. maintenance releases see [[https://www.hdfgroup.org/2021/12/hdf5-1-13-0-introducing-experimental-releases/][here]]
  - "Experimental" is not a fig leaf for "shoddy"
  - Experimental releases receive as much TLC as maintenance releases
- Highlights:
  - VOL layer updates (DAOS, pass-through, async.)
  - VFD layer updates
    - Dynamic loading
    - GPUDirect VFD
- Performance improvements
- [[https://confluence.hdfgroup.org/download/attachments/74188083/2021-12-2-ParallelTools-Portal.pdf?version=1&modificationDate=1638475023303&api=v2][=h5dwalk=]] tool
  #+begin_src shell

[ bin]$ mpiexec -n 4 ./h5dwalk -o show-h5dump-h5files.log -T ./h5dump
$HOME/Sandbox/HDF5/GITHUB/hdf5/tools/testfiles
[ bin]$ more show-h5dump-h5files.log
---------
Command: ./h5dump -n /home/riwarren/Sandbox/HDF5/GITHUB/hdf5/tools/testfiles/tnestedcmpddt.h5
HDF5 "/home/riwarren/Sandbox/HDF5/GITHUB/hdf5/tools/testfiles/tnestedcmpddt.h5" {
FILE_CONTENTS {
  group /
  dataset /dset1
  dataset /dset2
  dataset /dset4
  dataset /dset5
  datatype /enumtype
  group /group1
  dataset /group1/dset3
  datatype /type1
  }
}
...

  #+end_src

**** [[https://us06web.zoom.us/meeting/register/tZUtdemprjMsG9YmD5MINqn6VWh2VJnoUX7N][VOL tutorial]] moved to January 14, 2022!
- Covers the basics needed to construct a simple terminal VOL connector
- Great New Year's resolution =;-)=
*** Forum
**** [[https://forum.hdfgroup.org/t/working-with-packed-12-bit-integers/9171][Working with packed 12-bit integers]]
- Two basic approaches: packing or filtering
- [[https://github.com/berkeleysdm/H5TurboPFor][H5TurboPFor]]
  - HDF5 frontend for [[https://github.com/powturbo/TurboPFor-Integer-Compression][TurboPFor: Fastest Integer Compression]]
**** [[https://forum.hdfgroup.org/t/h5datatype-with-variable-length-how-to-set-the-values/9162][H5Datatype with variable length: How to set the values?]]
- Too many half-baked HDF5 Java interfaces (including our own)
- How can we better engage with that community?
- [[https://www.hdfql.com/][HDFql]]?
**** [[https://forum.hdfgroup.org/t/which-layout-shall-i-use/9180][Which layout shall I use?]]
- Acquiring a lot of small (< 8K) messages
- Which (dataset) layout is best for performance?
  - What is layout?
- It depends...
  - How is performance measured?
  - How will the messages be accessed?
**** [[https://forum.hdfgroup.org/t/controlling-btree-parameters-for-performance-reasons/9176][Controlling BTree parameters for performance reasons]]
- Import large number of images (~5 million) as chunked datasets
- ~10-20 million groups for indexing
- Can B-tree parameters do magic? (No)
  - Good [[https://courses.cs.washington.edu/courses/cse326/04su/lectures/BRank.pdf][intro to B-trees]]
- Two kinds of B-trees, file-wide configuration via FCPL
  #+begin_src C

  // group links
  herr_t H5Pset_sym_k(hid_t plist_id, unsigned ik, unsigned lk);

  // dataset chunk index
  herr_t herr_t H5Pset_istore_k(hid_t plist_id, unsigned ik);

  #+end_src
- Other potential remedies
  - File format improvements
  - Reduce the number of objects by stacking images, e.g., by resolution
**** [[https://forum.hdfgroup.org/t/vfd-swmr-beta-1-release/8824][VFD SWMR beta 1 release]]
- Will the HDF5 SWMR VFD be a plugin?
  - +I don't know for sure.+
    - No. See Dana's response.
**** [[https://forum.hdfgroup.org/t/virtual-data-set/9206][Virtual Data Set]]
#+begin_quote
For our application, we need to return an error in case the caller tries to
read data from a VDS and some of the referenced files that store the requested
data are not available.
#+end_quote
- Currently, users cannot change the error behavior of VDS functions
- Pedestrian approach: parse the VDS metadata to detect missing files

** Tips, tricks, & insights
No time for that, today.

* Clinic 2021-11-23
** Your Questions
- Q :: ???
- Q :: Under [[https://portal.hdfgroup.org/display/HDF5/Software+Changes+from+Release+to+Release+for+HDF5-1.10][Compatibility and Performance Issues]] we say
       #+BEGIN_QUOTE
       Not all HDF5-1.10 releases are compatible.
       #+END_QUOTE
       What does that mean and why?
  - *API* incompatibility (not file format!) introduced in HDF5 1.10.3
- Q :: Can a point selection be written to/read from a hypserslab selection?
       Does this work in parallel?
  - It appears to work for simple examples in sequential mode:
#+BEGIN_SRC C

#include "hdf5.h"

#include <stdlib.h>

int main()
{
  __label__ fail_file, fail_fspace, fail_dset;
  int retval = EXIT_SUCCESS;
  hid_t file, fspace, dset, mspace;
  int data[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};

  if((file = H5Fcreate("sel.h5", H5F_ACC_TRUNC, H5P_DEFAULT, H5P_DEFAULT)) ==
     H5I_INVALID_HID) {
    retval = EXIT_FAILURE;
    goto fail_file;
  }

  if ((fspace = H5Screate_simple(1, (hsize_t[]) {10}, NULL)) ==
      H5I_INVALID_HID) {
    retval = EXIT_FAILURE;
    goto fail_fspace;
  }

  if ((dset = H5Dcreate(file, "ints", H5T_STD_I32LE, fspace, H5P_DEFAULT,
                        H5P_DEFAULT, H5P_DEFAULT)) == H5I_INVALID_HID) {
    retval = EXIT_FAILURE;
    goto fail_dset;
  }

  if ((mspace = H5Scopy(fspace)) == H5I_INVALID_HID) {
    retval = EXIT_FAILURE;
    goto fail_copy;
  }

  // 1. Make a point selection in memory
  // 2. Make a hyperslab selection in the file
  // 3. Write
  if (H5Sselect_elements(mspace, H5S_SELECT_SET, 3, (hsize_t[]){3, 1, 6}) < 0 ||
      H5Sselect_hyperslab(fspace, H5S_SELECT_SET, (hsize_t[]){4}, NULL,
                          (hsize_t[]){1}, (hsize_t[]){3}) < 0 ||
      H5Dwrite(dset, H5T_NATIVE_INT, mspace, fspace, H5P_DEFAULT, data) < 0) {
    retval = EXIT_FAILURE;
    goto fail_write;
  }

fail_write:
  H5Sclose(mspace);
fail_copy:
  H5Dclose(dset);
fail_dset:
  H5Sclose(fspace);
fail_fspace:
  H5Fclose(file);
fail_file:
  return retval;
}

#+END_SRC

- The output file produce looks like this:

#+BEGIN_EXAMPLE

HDF5 "sel.h5" {
GROUP "/" {
   DATASET "ints" {
      DATATYPE  H5T_STD_I32LE
      DATASPACE  SIMPLE { ( 10 ) / ( 10 ) }
      DATA {
      (0): 0, 0, 0, 0, 3, 1, 6, 0, 0, 0
      }
   }
}
}

#+END_EXAMPLE

- I have yet to try parallel mode

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/accelerate-i-o-operations-with-hermes/9142][Accelerate I/O operations with Hermes]]
- Hermes 0.1.0-beta
- Distributed I/O buffering for storage hierarchies
- [[https://github.com/HDFGroup/hermes][GitHub]] & [[https://github.com/HDFGroup/hermes/wiki/1.-Getting-Started][Getting Started Guide]]
- [[https://us06web.zoom.us/meeting/register/tZcpd-CspzgsH908R0eZ1rMZbA67KR8z1hnI][Register]] for the webinar on December 1, 2021 11:00 AM (Central)!
**** Try the HDF5 SWMR VFD Beta!
- [[https://forum.hdfgroup.org/t/vfd-swmr-beta-1-release/8824][Forum post]]
- [[https://github.com/HDFGroup/hdf5/tree/feature/vfd_swmr_beta_1][GitHub]]
*** Forum
**** [[https://forum.hdfgroup.org/t/reference-manual-in-doxygen/8230][Reference Manual in Doxygen]]
- We've been experimenting with [[https://docs.hdfgroup.org/hdf5/develop/_f_t_s.html#gsc.tab=0][full-text search]]
- Not a replacement for the Doxygen-native search
- What do you think?
**** [[https://forum.hdfgroup.org/t/working-with-packed-12-bit-integers/9171][Working with packed 12-bit integers]]
- Two basic approaches: packing or filtering
- [[https://github.com/berkeleysdm/H5TurboPFor][H5TurboPFor]]
  - HDF5 frontend for [[https://github.com/powturbo/TurboPFor-Integer-Compression][TurboPFor: Fastest Integer Compression]]
**** [[https://forum.hdfgroup.org/t/h5datatype-with-variable-length-how-to-set-the-values/9162][H5Datatype with variable length: How to set the values?]]
- Too many half-baked HDF5 Java interfaces (including our own)
- How can we better engage with that community?
- [[https://www.hdfql.com/][HDFql]]?
**** [[https://forum.hdfgroup.org/t/which-layout-shall-i-use/9180][Which layout shall I use?]]
- Acquiring a lot of small (< 8K) messages
- Which (dataset) layout is best for performance?
- It depends...
  - How is performance measured?
  - How will the messages be accessed?
**** [[https://forum.hdfgroup.org/t/controlling-btree-parameters-for-performance-reasons/9176][Controlling BTree parameters for performance reasons]]
- Import large number of images (~5 million) as chunked datasets
- ~10-20 million groups for indexing
- Can B-tree parameters do magic? (No)
- Potential remedies
  - File format improvements
  - Reduce the number of objects by stacking images, e.g., by resolution
**** [[https://forum.hdfgroup.org/t/vfd-swmr-beta-1-release/8824][VFD SWMR beta 1 release]]
- Will the HDF5 SWMR VFD be a plugin?
  - I don't know for sure.
** Tips, tricks, & insights
No time for that, today.

* Clinic 2021-11-16
** Your Questions
- Q :: ???
- Q :: Under [[https://portal.hdfgroup.org/display/HDF5/Software+Changes+from+Release+to+Release+for+HDF5-1.10][Compatibility and Performance Issues]] we say
       #+BEGIN_QUOTE
       Not all HDF5-1.10 releases are compatible.
       #+END_QUOTE
       What does that mean and why?
- Q :: Can a point selection be written to/read from a hypserslab selection?
       Does this work in parallel?

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/accelerate-i-o-operations-with-hermes/9142][Accelerate I/O operations with Hermes]]
- Hermes 0.1.0-beta
- Distributed I/O buffering for storage hierarchies
- [[https://github.com/HDFGroup/hermes][GitHub]] & [[https://github.com/HDFGroup/hermes/wiki/1.-Getting-Started][Getting Started Guide]]
- [[https://us06web.zoom.us/meeting/register/tZcpd-CspzgsH908R0eZ1rMZbA67KR8z1hnI][Register]] for the webinar on December 1, 2021 11:00 AM (Central)!
**** Try the HDF5 SWMR VFD Beta!
- [[https://forum.hdfgroup.org/t/vfd-swmr-beta-1-release/8824][Forum post]]
- [[https://github.com/HDFGroup/hdf5/tree/feature/vfd_swmr_beta_1][GitHub]]
*** Forum
**** [[https://forum.hdfgroup.org/t/vfd-swmr-beta-1-release/8824][VFD SWMR beta 1 release]]
- Part of HDF5 1.13?
- No and yes: de-coupling of VFDs and library releases
**** [[https://forum.hdfgroup.org/t/hdf5functionargumentexception-inappropriate-type-for-datatype-class-array/9145][HDF5FunctionArgumentException: Inappropriate type for Datatype.CLASS_ARRAY]]
- Drink responsibly & don't go crazy with those datatypes!
**** [[https://forum.hdfgroup.org/t/dynamically-loaded-filters-on-mac-os/9159][Dynamically Loaded Filters on Mac OS]]
- The joy of being different
**** [[https://forum.hdfgroup.org/t/h5datatype-with-variable-length-how-to-set-the-values/9162][H5Datatype with variable length: How to set the values?]]
- The joy and frustration of language bindings to the HDF5 C-API
**** [[https://forum.hdfgroup.org/t/open-hdf5-when-it-is-already-opened-in-hdfview/9104][Open HDF5 when it is already opened in HDFVIEW]]
- Solution:
#+BEGIN_SRC shell
export HDF5_USE_FILE_LOCKING="FALSE"
#+END_SRC

** Tips, tricks, & insights
*** Mochi - 2021 R&D100 Winner
- [[https://www.mcs.anl.gov/research/projects/mochi/][Mochi project page]]
- Collaboration between ANL, LANL, CMU, and The HDF Group
- See Jerome Soumagne's [[https://www.youtube.com/watch?v=j0T51XHrJrY&list=PLPyhR4PdEeGYdTX7SVM59LwoNJDgJSNdd&index=17][HUG 2021 presentation]]
- Changes in scientific workflows
- Composable data services and building blocks
- Micros-services rather than monoliths
- A refined toolset for modern architectures and demanding applications

*** Who wants to share their favorite hack/trick?

* Clinic 2021-11-09
** Your Questions
- Q :: ???
- Q :: Under [[https://portal.hdfgroup.org/display/HDF5/Software+Changes+from+Release+to+Release+for+HDF5-1.10][Compatibility and Performance Issues]] we say
       #+BEGIN_QUOTE
       Not all HDF5-1.10 releases are compatible.
       #+END_QUOTE
       What does that mean and why?
- Q :: Can a point selection be written to/read from a hypserslab selection?
       Does this work in parallel?

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/accelerate-i-o-operations-with-hermes/9142][Accelerate I/O operations with Hermes]]
- Hermes 0.1.0-beta
- Distributed I/O buffering for storage hierarchies
- [[https://github.com/HDFGroup/hermes][GitHub]] & [[https://github.com/HDFGroup/hermes/wiki/1.-Getting-Started][Getting Started Guide]]
- Stay tuned for a webinar on December 1, 2021
**** Try the HDF5 SWMR VFD Beta!
- [[https://forum.hdfgroup.org/t/vfd-swmr-beta-1-release/8824][Forum post]]
- [[https://github.com/HDFGroup/hdf5/tree/feature/vfd_swmr_beta_1][GitHub]]
*** Forum
**** [[https://forum.hdfgroup.org/t/crash-when-writing-parallel-compressed-chunks/6186][Crash when writing parallel compressed chunks]]
- Jordan committed a fix for an old =MPI_ERR_TRUNCATE= issue/crash
- Merging to development branches of HDF5 1.13, 1.12, 1.10
- If you've been affected by this, give it a try!
**** [[https://forum.hdfgroup.org/t/sorting-of-members-of-a-compound-type/9134][Sorting of members of a compound type]]
- User has to write elements of a compound datatype one at a time
- "Partial I/O gets in the way" - sorting fields by name or offset
  - Happens on each write call => overhead
- Can this be avoided? User might provide a patch...
**** [[https://forum.hdfgroup.org/t/read-write-specific-coordinates-in-multi-dimensional-dataset/9137][Read/write specific coordinates in multi-dimensional dataset?]]
- Thomas is looking for use cases from =h5py= users
  #+BEGIN_SRC python

  arr = ds.points[[(0, 0), (1, 0), (2, 2)]]  # Read

  ds.points[[(0, 0), (1, 0), (2, 2)]] = [1, 2, 3]  # Write

  #+END_SRC
- See his [[https://github.com/h5py/h5py/pull/1793][PR]]
**** [[https://forum.hdfgroup.org/t/reading-variable-length-data-from-hdf5-file-c-api/9115][Reading variable length data from hdf5 file C++ API]]
- The "curse" of variable-length sequence data = the loss of memory contiguity
- C++20 [[https://en.cppreference.com/w/cpp/container/span][=std::span=]] seems to be the way to go, but how many codes are C++20?
- *Important:* The cleanup of buffers into which VLEN data is read is the
  caller's responsibility! Use =H5Dvlen_reclaim= (HDF5 1.10-) or
  =H5Treclaim= (HDF5 1.12+).
- Got +milk+ matching =H5Dread= and =H5Dwrite=?

** Tips, tricks, & insights
We didn't get to this last time...

*** =H5Dread= / =H5Dwrite= Symmetry
- Syntax
  #+BEGIN_SRC C

herr_t H5Dwrite
(
  hid_t dset_id,
  hid_t mem_type_id,  // the library "knows" the in-file datatype
  hid_t mem_space_id, hid_t file_space_id,
  hid_t dxpl_id, const void* buf
);

herr_t H5Dread
(
  hid_t dset_id,
  hid_t mem_type_id,  // the library "knows" the in-file datatype
  hid_t mem_space_id,  hid_t file_space_id,
  hid_t dxpl_id, void* buf
);

  #+END_SRC
- /Necessary/ conditions for this to work out
  1. The in-memory (element) datatype must be convertible to/from the in-file
     datatype. (With the exception of VLEN strings, VLEN types a la =hvl_t= are
     *not* convertible to ragged arrays!)
  2. The dataspace selections in-memory and in the file must have the same
     number of selected elements. (Be careful when using =H5S_ALL= for one of
     =mem_space_id= or =file_space_id=!)
  3. The buffer must be big enough to hold at least the number of selected
     elements (in their native representation).
     - For parallel, the number of elements written/read by this MPI rank

* Clinic 2021-11-02
** Your Questions
- Q :: ???
- Q :: Under [[https://portal.hdfgroup.org/display/HDF5/Software+Changes+from+Release+to+Release+for+HDF5-1.10][Compatibility and Performance Issues]] we say
       #+BEGIN_QUOTE
       Not all HDF5-1.10 releases are compatible.
       #+END_QUOTE
       What does that mean and why?
- Q :: Can a point selection be written to/read from a hypserslab selection?
       Does this work in parallel?

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/release-of-hdf5-1-10-8-newsletter-180/9108][HDF5 1.10.8 Release]]
- [[https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.8/src/hdf5-1.10.8-RELEASE.txt][Release notes]]
  - CMake no longer builds the C++ library by default
  - HDF5 now requires Visual Studio 2015 or greater
  - On macOS, Universal Binaries can now be built
  - CMake option to build the HDF filter plugins project as an external
    project
  - Autotools and CMake target added to produce doxygen generated
    documentation
  - CMake option to statically link gcc libs with MinGW
  - File locking now works on Windows
  - Improved performance of =H5Sget_select_elem_pointlist=
  - Detection of simple data transform function ="x"=
- [[https://portal.hdfgroup.org/display/HDF5/Software+Changes+from+Release+to+Release+for+HDF5-1.10][Interesting figure]]
- Under *Compatibility and Performance Issues* is
**** Try the HDF5 SWMR VFD Beta!
- [[https://forum.hdfgroup.org/t/vfd-swmr-beta-1-release/8824][Forum post]]
- [[https://github.com/HDFGroup/hdf5/tree/feature/vfd_swmr_beta_1][GitHub]]
*** Forum
**** [[https://forum.hdfgroup.org/t/h5dget-chunk-info-performance-for-many-chunks/9079][=H5Dget_chunk_info= performance for many chunks?]]
- *Task:* Get all of the chunk file offsets + sizes
- *Solution:* [[https://docs.hdfgroup.org/hdf5/develop/group___h5_d.html#title6][=H5Dchunk_iter=]]
- *Caveat:* Currently only available in the =development= branch
- *Note:* We covered this function and an example in our clinic on [2021-08-03 Tue]

**** [[https://forum.hdfgroup.org/t/open-hdf5-when-it-is-already-opened-in-hdfview/9104][Open HDF5 when it is already opened in HDFVIEW]]
#+BEGIN_QUOTE
Is there a way (probably file access property) to open the file multiple times
(especially when it is opened in HdfView) and allow to read/write it? May the
problem be solved if I build hdf5 with multithreads option ON ?
#+END_QUOTE
- Except for specific use cases (SWMR), this is a bad idea
- Why? Remember this figure?
#+begin_src plantuml :file ../img/hdf5-file-state.png :exports results
skinparam componentStyle rectangle

package "HDF5 File State" {
    database "Disk" {
        [Partial State 1]
    }
    cloud "RAM" {
        [Partial State 2]
    }
}
#+end_src

**** [[https://forum.hdfgroup.org/t/append-hdf5-files-in-parallel/9098][Append HDF5 files in parallel]]
#+BEGIN_QUOTE
I have thousands of HDF5 files that need to be merged into a single file.
Merging is simply to append all groups and datasets of one file after
another in a new output file. The group names of the input files are all
different from one another. In addition, all datasets are chunked and
compressed.

My question is how do I merge the files in parallel?

My implementation consists of the following steps:
...
#+END_QUOTE
- That's a tough one
- Two options
  1. Don't copy any data, just reference existing data (via external links)
  2. Copy data as fast as you can
     - (MPI) parallel make this more complicated

**** [[https://forum.hdfgroup.org/t/reading-variable-length-data-from-hdf5-file-c-api/9115][Reading variable length data from hdf5 file C++ API]]
- Got +milk+ matching =H5Dread= and =H5Dwrite=?

** Tips, tricks, & insights
*** =H5Dread= / =H5Dwrite= Symmetry
- Syntax
  #+BEGIN_SRC C

herr_t H5Dwrite
(
  hid_t dset_id,
  hid_t mem_type_id,
  hid_t mem_space_id, hid_t file_space_id,
  hid_t dxpl_id, const void* buf
);

herr_t H5Dread
(
  hid_t dset_id,
  hid_t mem_type_id,
  hid_t mem_space_id,  hid_t file_space_id,
  hid_t dxpl_id, void* buf
);

  #+END_SRC
- /Necessary/ conditions for this to work out
  1. The in-memory (element) datatype must be convertible to/from the in-file
     datatype.
  2. The dataspace selections in-memory and in the file must have the same
     number of selected elements.
  3. The buffer must be big enough to hold at least the number of selected
     elements (in their native representation).
     - For parallel, the number of elements written/read by this MPI rank

* Clinic 2021-10-28
** Your Questions
- Q :: ???
** Last week's highlights
*** Announcements
**** [[https://www.youtube.com/playlist?list=PLPyhR4PdEeGYdTX7SVM59LwoNJDgJSNdd][HUG 2021 Videos are showing up on YouTube]]
**** Submit comments/questions/criticisms to the [[mailto:hug@hdfgroup.org][organizing committee]]
*** Forum
**** [[https://forum.hdfgroup.org/t/hdfview-3-1-0-error-displaying-dataset-with-np-float16-data/7974][HDFView 3.1.0 error displaying dataset with np.float16 data]]
- HDF5 has supported user-defined floating-point types from day one
- Good example of poor execution on our part!
- GPUs have rekindled the interest in reduced floating-point representations
**** [[https://forum.hdfgroup.org/t/announcing-development-of-the-enterprise-support-edition-of-hdf5/4374][Announcing development of the Enterprise Support Edition of HDF5]]
- Good example of an own goal / publicity disaster
- One more time: *There is no Enterprise Support Edition of HDF5!*
  - However, support and consulting agreements are available from The HDF Group
    for enterprises and other organizations
- There is only one development line of HDF5 (data model, file format, library)
  & it is available on [[https://github.com/HDFGroup/hdf5][GitHub]]
  - Hence, it is nonsensical to speak of 'HDF5 editions'
- End of story
**** COMMENT [[https://forum.hdfgroup.org/t/h5dget-chunk-info-performance-for-many-chunks/9079][=H5Dget_chunk_info= performance for many chunks?]]
- *Task:* Get all of the chunk file offsets + sizes
- *Solution:* [[https://docs.hdfgroup.org/hdf5/develop/group___h5_d.html#title6][=H5Dchunk_iter=]]
- *Caveat:* Currently only available in the =development= branch
- *Note:* We covered this function and an example in our clinic on [2021-08-03 Tue]
** Tips, tricks, & insights
*** Who is afraid of =h5debug=?
- A useful tool to explore the "guts" of the HDF5 file format
- There's even a nice [[https://docs.hdfgroup.org/hdf5/develop/_f_m_t_d_i_s_c.html][guided tour]] by Quincey Koziol from 2003
  - HDF5 1.4.5 was released [2003-02-02]
  - HDF5 1.6.0 was released [2003-07-03]
- Compiling and running =example1.c= produces this output:
  #+begin_example
%h5debug example1.h5

Reading signature at address 0 (rel)
File Super Block...
File name (as opened):                             example1.h5
File name (after resolving symlinks):              example1.h5
File access flags                                  0x00000000
File open reference count:                         1
Address of super block:                            0 (abs)
Size of userblock:                                 0 bytes
Superblock version number:                         0
Free list version number:                          0
Root group symbol table entry version number:      0
Shared header version number:                      0
Size of file offsets (haddr_t type):               8 bytes
Size of file lengths (hsize_t type):               8 bytes
Symbol table leaf node 1/2 rank:                   4
Symbol table internal node 1/2 rank:               16
Indexed storage internal node 1/2 rank:            32
File status flags:                                 0x00
Superblock extension address:                      18446744073709551615 (rel)
Shared object header message table address:        18446744073709551615 (rel)
Shared object header message version number:       0
Number of shared object header message indexes:    0
Address of driver information block:               18446744073709551615 (rel)
Root group symbol table entry:
   Name offset into private heap:                  0
   Object header address:                          96
   Cache info type:                                Symbol Table
   Cached entry information:
      B-tree address:                              136
      Heap address:                                680
  #+end_example
- It matches the output from 2003 except for
  - The root group's object header address is 96 (in 2021) vs. 928 (in 2003)
  - The root's B-tree is at 136 vs. 384
  - The root group's local heap is at 680 vs. 96
- Happy HDF5 exploring!

* Clinic 2021-10-19
** Your Questions
- Q :: ???
** Last week's highlights
*** Announcements
**** [[https://www.youtube.com/playlist?list=PLPyhR4PdEeGYdTX7SVM59LwoNJDgJSNdd][HUG 2021 Videos are showing up on YouTube]]
*** Forum
**** [[https://forum.hdfgroup.org/t/dataset-insert-vector-of-compound-type/9027][Dataset Insert Vector of Compound Type]]
- Memory-contiguous vs. non-contiguous layout
  #+begin_src C
  struct Instruction {
    float timestamp;
    Key keys[MAX_KEYS]; // -> H5T_ARRAY
  };

  struct Instruction {
    float timestamp;
    Key* keys; // -> H5T_VLEN
  };
  #+end_src
**** [[https://forum.hdfgroup.org/t/memory-mapping-paging-via-hdf5-vfd/9052][Memory mapping / Paging via HDF5 & VFD?]]
- ~hid_t H5Dread_mapped(..., void** buf);~
- Returns a pointer to  a memory-mapped region
- If the region is writable, changes will be propagated to the file (instead of
  calling ~H5Dwrite~)
**** [[https://forum.hdfgroup.org/t/external-links-vfds/9056][External links & VFDs]]
- What if an external link requires a different VFD for its resolution?
- Current approach: set it manually via ~H5Pset_elink_fapl()~ after figuring out
  that that's required. Yikes!
- Add VFD-plugins and this gets out of hand quickly...
**** [[https://forum.hdfgroup.org/t/why-increasing-rdcc-nbytes-and-rdcc-nslots-will-result-in-a-decrease-in-indexing-performance/9062][Why increasing =rdcc_nbytes= and =rdcc_nslots= will result in a decrease in indexing performance?]]
- See [[https://docs.hdfgroup.org/hdf5/rfc/RFC_chunk_cache_functions.pdf][RFC: Setting Raw Data Chunk Cache Parameters in HDF5]] for guidance
- Potential =h5py= issue
**** [[https://forum.hdfgroup.org/t/fletcher32-filter-on-variable-length-string-datasets-not-suitable-for-filters/9038][Fletcher32 filter on variable length string datasets (not suitable for filters)]]
- Triggered by change introduced in 1.12.1
- *Caution:* Filters and variable-length data
** Tips, tricks, & insights

- Something's compressed:
#+begin_src C

#include "hdf5.h"

#include <stdio.h>
#include <stdlib.h>

int main()
{
  __label__ fail_file, fail_dtype, fail_dspace, fail_dcpl, fail_dset, fail_write;
  int retval = EXIT_SUCCESS;
  hid_t file, dspace, dtype, dcpl, dset;


  if ((file = H5Fcreate("vlen.h5", H5F_ACC_TRUNC, H5P_DEFAULT, H5P_DEFAULT))
      == H5I_INVALID_HID) {
    retval = EXIT_FAILURE;
    goto fail_file;
  }

  if ((dtype = H5Tvlen_create(H5T_STD_I32LE)) == H5I_INVALID_HID) {
    retval = EXIT_FAILURE;
    goto fail_dtype;
  }

  if ((dspace = H5Screate_simple(1, (hsize_t[]){2048},
                                 (hsize_t[]){H5S_UNLIMITED})) ==
      H5I_INVALID_HID) {
    retval = EXIT_FAILURE;
    goto fail_dspace;
  }

  if ((dcpl = H5Pcreate(H5P_DATASET_CREATE)) == H5I_INVALID_HID) {
    retval = EXIT_FAILURE;
    goto fail_dcpl;
  }

  if (H5Pset_chunk(dcpl, 1, (hsize_t[]) {1024}) < 0 ||
      H5Pset_deflate(dcpl, 1) < 0
      //H5Pset_fletcher32(dcpl) < 0
      ) {
    retval = EXIT_FAILURE;
    goto fail_dset;
  }

  if ((dset = H5Dcreate(file, "dset", dtype, dspace, H5P_DEFAULT, dcpl,
                        H5P_DEFAULT)) == H5I_INVALID_HID) {
    retval = EXIT_FAILURE;
    goto fail_dset;
  }

  {
    int data[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
    size_t offset[] = {0, 1, 3, 6};
    hvl_t buf[2048];
    size_t i;

    // create an array that looks like this:
    // { {0}, {1,2}, {3,4,5}, {6,7,8,9}, ...}
    for (i = 0; i < 2048; ++i)
      {
        size_t rem = i%4;
        buf[i].len = 1 + rem;
        buf[i].p = data + offset[rem];
      }

    if (H5Dwrite(dset, dtype, H5S_ALL, H5S_ALL, H5P_DEFAULT, buf) < 0)
      {
        retval = EXIT_FAILURE;
        goto fail_write;
      }
  }

 fail_write:
  H5Dclose(dset);

 fail_dset:
  H5Pclose(dcpl);

 fail_dcpl:
  H5Sclose(dspace);

 fail_dspace:
  H5Tclose(dtype);

 fail_dtype:
  H5Fclose(file);

 fail_file:
  return retval;
}

#+end_src

- =h5dump -pBH vlen.h5=

#+begin_example

HDF5 "vlen.h5" {
SUPER_BLOCK {
   SUPERBLOCK_VERSION 0
   FREELIST_VERSION 0
   SYMBOLTABLE_VERSION 0
   OBJECTHEADER_VERSION 0
   OFFSET_SIZE 8
   LENGTH_SIZE 8
   BTREE_RANK 16
   BTREE_LEAF 4
   ISTORE_K 32
   FILE_SPACE_STRATEGY H5F_FSPACE_STRATEGY_FSM_AGGR
   FREE_SPACE_PERSIST FALSE
   FREE_SPACE_SECTION_THRESHOLD 1
   FILE_SPACE_PAGE_SIZE 4096
   USER_BLOCK {
      USERBLOCK_SIZE 0
   }
}
GROUP "/" {
   DATASET "dset" {
      DATATYPE  H5T_VLEN { H5T_STD_I32LE}
      DATASPACE  SIMPLE { ( 2048 ) / ( H5S_UNLIMITED ) }
      STORAGE_LAYOUT {
         CHUNKED ( 1024 )
         SIZE 5772 (5.677:1 COMPRESSION)
      }
      FILTERS {
         COMPRESSION DEFLATE { LEVEL 1 }
      }
      FILLVALUE {
         FILL_TIME H5D_FILL_TIME_ALLOC
         VALUE  H5D_FILL_VALUE_DEFAULT
      }
      ALLOCATION_TIME {
         H5D_ALLOC_TIME_INCR
      }
   }
}
}

#+end_example
- *N.B.* What's compressed are the in-file counterparts of ~hvl_t~ structures, not the integer sequences!
- Filtering fails, if we enable Fletcher32

* Clinic 2021-09-28
** Your Questions
- Q :: Will the HDF5 1.12.1 file locking changes be brought to 1.10.8?
  - Did Elena will answer that?
** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/hdf5-user-group-meeting-october-12-15-2021/9003][HUG 2021 Agenda posted]]
- October 12-15, 2021, 9:00 AM - 1:30 PM (CDT)
**** [[https://forum.hdfgroup.org/t/webinar-announcement-new-features-in-the-hdf5-1-13-0-release/8950][Webinar Announcement: New Features in the HDF5 1.13.0 Release]]
- [[https://www.youtube.com/watch?v=14xrbKJ3wk4][Recording]] and [[https://www.hdfgroup.org/wp-content/uploads/2021/09/New-Features-in-HDF5-1.13.0-VFD-and-VOL-Changes-Webinar-9-24-21.pdf][slides]] available now!
*** Forum
**** [[https://forum.hdfgroup.org/t/possible-to-change-email-address-here/6738][Possible to change email address here?]]
- Lori?
**** [[https://forum.hdfgroup.org/t/retrieve-property-list-from-object/8971][Retrieve property list from object]]
- Property lists come in several flavors (access, creation, transfer)
- Only creation property lists are store in the file
**** [[https://forum.hdfgroup.org/t/dynamic-plugins-require-application-to-link-to-shared-library/8972][Dynamic Plugins require application to link to shared library]]
- [[https://github.com/HDFGroup/hdf5/issues/1009][GitHub issue]]
- Plugin loading happens via =dlopen=
- Calling the HDF5 library from a plugin
  - Why would applications do that? Element type, chunk size, ...
  - API shortcomings?
**** [[https://forum.hdfgroup.org/t/object-timestamps-useful-or-not/8901][Object timestamps - useful or not?]]
- Only a minority seems to care
  - Limited implementation
- Bit-for-bit reproducibility
- Clear communication before changing defaults is crucial
** Tips, tricks, & insights
*** HDF5 references
- HDF5 datatype
- Pre-HDF5 1.12.0 referents limited to dataset regions and objects
- Starting w/ HDF5 1.12.0 referents can be HDF5 attributes
  - Support for querying and indexing
  - API clean-up
- [[https://docs.hdfgroup.org/hdf5/develop/group___h5_r.html][Basic life cycle examples in RM]]
* Clinic 2021-09-21
- Elena's slides on [[./Chunking-compression.pdf][HDF5 Chunking and Compression - Performance issues]]
* Clinic 2021-08-31
** Your Questions
- Q :: Will the HDF5 1.12.1 file locking changes be brought to 1.10.8?
  - Elena will answer that next week!

** Last week's highlights
*** Announcements
- I didn't see any

*** Forum
**** [[https://forum.hdfgroup.org/t/how-many-times-to-call-the-filter-in-writing-a-single-chunk/8906][How many times to call the filter in writing a single chunk]]
- Provide a [[https://en.wikipedia.org/wiki/Minimal_working_example][Minimal Working Example (MWE)]]!

** Tips, tricks, & insights
*** Using a custom filter

#+begin_src C

#include "hdf5.h"

#include <stdio.h>
#include <stdlib.h>

// an identity filter function which just prints "helpful" messages
size_t filter(unsigned int flags, size_t cd_nelmts,
              const unsigned int cd_values[], size_t nbytes, size_t *buf_size,
              void **buf) {
  buf_size = 0;

  if (flags & H5Z_FLAG_REVERSE) {
    // read data, e.g., decompress data
    // ...
    printf("Decompressing...\n");
  } else {
    // write data, e.g., compress data
    // ...
    printf("Compressing...\n");
  }

  return nbytes;
}

int main()
{
  // boilerplate
  __label__ fail_register, fail_file, fail_dspace, fail_dcpl, fail_dset,
    fail_write;
  int retval = EXIT_SUCCESS;
  hid_t file, dspace, dcpl, dset;

  // custom filter
  H5Z_class_t cls;
  cls.version = H5Z_CLASS_T_VERS;
  cls.id = 256;
  cls.encoder_present = 1;
  cls.decoder_present = 1;
  cls.name = "Identity filter";
  cls.can_apply = NULL;
  cls.set_local = NULL;
  cls.filter = &filter;

  // register the filter
  if (H5Zregister(&cls) < 0) {
    retval = EXIT_FAILURE;
    goto fail_register;
  }

  if ((file = H5Fcreate("filter.h5", H5F_ACC_TRUNC, H5P_DEFAULT, H5P_DEFAULT))
      == H5I_INVALID_HID) {
    retval = EXIT_FAILURE;
    goto fail_file;
  }
  if ((dspace = H5Screate_simple(1, (hsize_t[]){2048},
                                 (hsize_t[]){H5S_UNLIMITED})) ==
      H5I_INVALID_HID) {
    retval = EXIT_FAILURE;
    goto fail_dspace;
  }
  if ((dcpl = H5Pcreate(H5P_DATASET_CREATE)) == H5I_INVALID_HID) {
    retval = EXIT_FAILURE;
    goto fail_dcpl;
  }

  // play with early chunk allocation and fill time
  if (H5Pset_filter(dcpl, cls.id, 0|H5Z_FLAG_MANDATORY, 0, NULL) < 0 ||
      //H5Pset_alloc_time(dcpl, H5D_ALLOC_TIME_EARLY) < 0 ||
      //H5Pset_fill_time(dcpl, H5D_FILL_TIME_NEVER) < 0 ||
      H5Pset_chunk(dcpl, 1, (hsize_t[]) {1024}) < 0) {
    retval = EXIT_FAILURE;
    goto fail_dset;
  }

  if ((dset = H5Dcreate(file, "dset", H5T_STD_I32LE, dspace, H5P_DEFAULT,
                        dcpl, H5P_DEFAULT)) == H5I_INVALID_HID) {
    retval = EXIT_FAILURE;
    goto fail_dset;
  }

  // write something to trigger the "compression" of two chunks
  {
    int data[2048];

    if (H5Dwrite(dset, H5T_NATIVE_INT, H5S_ALL, H5S_ALL, H5P_DEFAULT, data)
        < 0) {
      retval = EXIT_FAILURE;
      goto fail_write;
    }
  }

  // housekeeping
 fail_write:
  H5Dclose(dset);
 fail_dset:
  H5Pclose(dcpl);
 fail_dcpl:
  H5Sclose(dspace);
 fail_dspace:
  H5Fclose(file);
 fail_file:
  // unregister the filter
  if (H5Zunregister(cls.id) < 0) {
    retval = EXIT_FAILURE;
  }
 fail_register:
  return retval;
}

#+end_src

* Clinic 2021-08-24
** Your Questions
- Q :: Will the HDF5 1.12.1 file locking changes be brought to 1.10.8?

** Last week's highlights
*** Announcements
- I didn't see any

*** Forum
**** [[https://forum.hdfgroup.org/t/append-to-compound-dataset/8885][Append to compound dataset]]
- It is tempting to think about 1D compound datasets as tables
**** [[https://forum.hdfgroup.org/t/reference-manual-in-doxygen/8230][Reference Manual in Doxygen]]
- [[https://docs.hdfgroup.org/hdf5/develop/group___h5_z.html][RM H5Z]]
- Don't let Word & co. pollute your documentation!
  - It's  not someone else being evil, it's us acting like fools!

** Tips, tricks, & insights
*** HDF5 Compound Datasets and (Relational) Tables: Don't be fooled!
- [[https://forum.hdfgroup.org/t/append-to-compound-dataset/8885][Append to compound dataset]]
- 'Row' as in 'table row' or 'matrix row' share the same spelling, but that's
  where the similarity ends!
  - HDF5 datasets are *not* tables

#+begin_src C

#include "hdf5.h"

#include <stdlib.h>

int main()
{
  __label__ fail_file, fail_dspace, fail_dset, fail_extent;

  int retval = EXIT_SUCCESS;

  hid_t file, dspace, dcpl, dset;

  if ((file = H5Fcreate("foo.h5", H5F_ACC_TRUNC, H5P_DEFAULT, H5P_DEFAULT)) ==
      H5I_INVALID_HID) {
    retval = EXIT_FAILURE;
    goto fail_file;
  }

  // create a 1D dataspace of indefinite extent, initial extent 0 (elements)
  if ((dspace = H5Screate_simple(1, (hsize_t[]){0}, (hsize_t[]){H5S_UNLIMITED}))
      == H5I_INVALID_HID) {
    retval = EXIT_FAILURE;
    goto fail_dspace;
  }

  // allocate space in the file in batches of 1024 dataset elements
  if ((dcpl = H5Pcreate(H5P_DATASET_CREATE)) == H5I_INVALID_HID) {
    retval = EXIT_FAILURE;
    goto fail_dcpl;
  }
  if (H5Pset_chunk(dcpl, 1, (hsize_t[]){1024}) < 0) {
    retval = EXIT_FAILURE;
    goto fail_dset;
  }

  // create the dataset
  // (replace H5T_STD_I32LE with your favorite datatype)
  if ((dset = H5Dcreate(file, "(4-byte) integers", H5T_STD_I32LE, dspace,
                        H5P_DEFAULT, dcpl, H5P_DEFAULT)) ==
      H5I_INVALID_HID) {
    retval = EXIT_FAILURE;
    goto fail_dset;
  }

  // grow from here!

  // "add one row"
  if (H5Dset_extent(dset, (hsize_t[]){1}) < 0) {
    retval = EXIT_FAILURE;
    goto fail_extent;
  }

  // "add 99 more rows"
  // 100 = 1 + 99
  if (H5Dset_extent(dset, (hsize_t[]){100}) < 0) {
    retval = EXIT_FAILURE;
    goto fail_extent;
  }

  // you can also shrink the dataset...

 fail_extent:
  H5Dclose(dset);
 fail_dset:
  H5Pclose(dcpl);
 fail_dcpl:
  H5Sclose(dspace);
 fail_dspace:
  H5Fclose(file);
 fail_file:

  return retval;
}

#+end_src

* Clinic 2021-08-17
** Your Questions
- Q :: Will the HDF5 1.12.1 file locking changes be brought to 1.10.8?
- Q :: Are there or should there be special considerations when preserving HDF-5
  files for future use? I support a research data repository at University of
  Michigan and we occasionally receive these files (also netCDF and HDF-5
  created by MATLAB).
  - HDF5 feature use
    - Relative paths, hard-coded paths (e.g., in external links)
    - Dependencies such as plugins
  - Metadata
    - Faceted search, catalog, digest
    - Check sums
  - *TODO:* Create some guidance!

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/new-compression-plugin-based-on-snappy-cuda/8848][New compression plugin based on Snappy-CUDA]]
- A new (de-)compression filter plugin using [[https://github.com/google/snappy][Google's Snappy]] algorithm
- It runs on GPUs
- By Mr. HDF5-UDF (Lucas C. Villa Real)

*** Forum
**** [[https://forum.hdfgroup.org/t/alignment-of-direct-write-chunks/8851][Alignment of Direct Write Chunks]]
- Store large 1D datasets across multiple HDF5 file
- Receive compressed chunks w/ fixed number of samples/chunk
- Want to use direct chunk write
- *Problem:* Chunks may contain /boundary chunks/ containing samples that belong
  to different datasets in different files
- *Sub-optimal solution:* Decompress the chunk, separate the samples, & use some
  kind of masking value on the next dataset
- Better solution?

** Tips, tricks, & insights
*** Virtual Datasets (VDS)
- Logically, HDF5 datasets have a shape (rank or dimensionality) and an element
  type
- Physically, HDF5 datasets have a layout (in a logical HDF5 file): contiguous,
  chunked, compact, /virtual/
- A virtual dataset is an HDF5 dataset of virtual layout (- duh!)
- *Virtual layout:* some or all of the dataset's elements are stored in
  constituent datasets in the same or other HDF5 files, including other virtual
  datasets(!)
- Like any HDF5 dataset, HDF5 datasets of virtual layout have a shape
  (a.k.a. dataspace) and an element type (a.k.a datatype)
- Virtual datasets are constructed by specifying how selections(!) on
  constituent datasets /map/ to regions in the virtual dataset's dataspace
- Main API call: [[https://docs.hdfgroup.org/hdf5/develop/group___d_c_p_l.html#gadec895092dbbedb94f85d9cacf8924f5][~H5Pset_virtual~]]
  #+begin_src C -n

  herr_t H5Pset_virtual(hid_t	      vds_dcpl_id,   // VDS creation properties
                        hid_t       vds_dspace_id, // VDS dataspace
                        const char* src_file_name, // source file path
                        const char* src_dset_name, // source dataset path
                        hid_t       src_space_id); // source dataspace select.

  #+end_src
- Sometimes multiple calls to ~H5Pset_virtual~ are necessary, but there's
  support for ~printf~-style format strings to describe multiple source files & datasets
- Typically, a VDS is just a piece of (HDF5-)metadata
- How does that lead to a better solution? /Use VDS to correct for data
  acquisition artifacts!/
- Two approaches
  1. Write the "boundary chunk" to both datasets/files
  2. Write the "boundary chunk" to only one dataset/file
- In either case, we use VDS as a mechanism to construct the correct
  (time-delineated) datasets
- Main practical differences between 1. and 2.:
  - Unless the data is WORM (write-once/read-many), there is a potential
    coherence problem in 1. because we have two copies of the halo data
  - When accessing a dataset whose boundary chunk ended up in another file,
    under 2., the HDF5 library has to open another file and dataset, and locate
    the chunk
- The canonical VDS reference is [[https://docs.hdfgroup.org/hdf5/rfc/HDF5-VDS-requirements-use-cases-2014-12-10.pdf][RFC: HDF5 Virtual Dataset]]
  - Good source of use cases and examples
  - Not everything described in the RFC was implemented, e.g., datatype
    conversion
  - ~h5py~ has a nice [[https://docs.h5py.org/en/stable/vds.html][interface for VDS]]

* Clinic 2021-08-10
** Your Questions
- Q :: Will the HDF5 1.12.1 file locking changes be brought to 1.10.8?

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/the-highly-scalable-data-service-hsds-is-now-available-on-microsoft-azure/8830][The Highly Scalable Data Service (HSDS) is now available on Microsoft Azure]]
- Get started in the [[https://azuremarketplace.microsoft.com/en-us/marketplace/apps/thehdfgroup1616725197741.hsdsazurevm?tab=overview][Azure Marketplace]]
**** [[https://forum.hdfgroup.org/t/vfd-swmr-beta-1-release/8824][VFD SWMR beta 1 release]]
- [[https://github.com/HDFGroup/hdf5/tree/feature/vfd_swmr_beta_1][GitHub branch]]
- [[https://www.youtube.com/watch?v=QDoKuJojkGI][The movie]]
- [[https://docs.hdfgroup.org/hdf5/rfc/VFD_SWMR_RFC_191027.pdf][The VFD SWMR RFC]]
*** Forum
- [[https://forum.hdfgroup.org/t/problem-compiling-hdf5-using-cmake-with-hdf5-enable-parallel/8823][Problem compiling HDF5 using CMake with =HDF5_ENABLE_PARALLEL=]]
  * Affects HDF5 1.12.1
  * Discovered by Jan-Willem Blokland & turns out to be a goof-up in our CMake
    files
  - Fixed in [[https://github.com/HDFGroup/hdf5/pull/843][PR #843]]
** Tips, tricks, & insights
*** What is SWMR & what's new w/ VFD SWMR?
- SWMR = Single Writer Multiple Readers
- Use case: "Process collaboration w/o communication"
  - Read from an HDF5 file that is actively being written
  - "w/o communication"  = no inter-process communication (IPC) required
- That's a big ask!
  - How do we ensure that the readers don't read invalid, inconsistent, or corrupt data?
  - How do we ensure that readers eventually see updates?
    - Can we bound that delay?
  - Does this require any special HW/SW support?
- Initial release in HDF5 1.10.0 (March 30 2016)

**** Limitations of the first implementation
- No support for new items, e.g., objects, attributes, etc., no deletion
  - Dataset append only
- Reliance on strict write ordering and atomic write guarantee as per POSIX semantics
  - Many file systems don't do that, e.g., NFS
- Implementation touches most parts of the HDF5 library: high maintenance cost

**** What VFD SWMR brings
- Arbitrary item and object creation/deletion
- Configurable bound (maximum time) between write and read
- Easier to maintain because of VFD-level implementation
- Relaxed storage requirements, i.e., the implementation can be modified to support NFS or object stores

**** How is it done?
- Writer generates periodic snapshots of metadata at points when it's known to be in a consistent state
  - These snapshot live outside the HDF5 file proper
- Readers' MD requests are satisfied from snapshots or unchanged MD in the HDF5 file
- Devil's in the detail, e.g., to guarantee time between write and read, we need to bound the maximum size of MD changes and use page buffering
  - See the [[https://docs.hdfgroup.org/hdf5/rfc/VFD_SWMR_RFC_191027.pdf][RFC]] for the details

* Clinic 2021-08-03
** Your Questions
- Q :: Will the HDF5 1.12.1 file locking changes be brought to 1.10.8?

- Q :: I’m interested in PyDarshan and its analysis of HDF5 Darshan Logs. The current resource that I have is [[https://nbviewer.jupyter.org/github/HDFGroup/hdf5-iotest/blob/master/examples/pydarshan-hdf5-tutorial.ipynb][this]]. Any other reference or documentation that you could point out? Thank you (Marta Garcia, ANL)

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/release-of-hdfview-3-1-3-newsletter-179-the-hdf-group/8789][HDFView 3.1.3]] was released
*** Forum
**** [[https://forum.hdfgroup.org/t/check-all-members-of-compound-datatype-are-present/8795][Check all members of compound datatype are present?]]
- Error is in the eye of the beholder
- ~H5Tequal~ is of limited use
- Provide or modify symbolic information in a single place
- Use named datatypes for documentation
**** [[https://forum.hdfgroup.org/t/phdf5-1-12-data-transform-in-combination-with-compression-filter/8799][pHDF5 1.12: data transform in combination with compression filter]]
- Poor documentation (on our part)
  - Who reads release notes?
- Dropped feature in "rush to the release"
- Will add a note to ~H5Pset_compressionX~ calls
** Tips, tricks, & insights
*** New function ~H5Dchunk_iter~
:PROPERTIES:
:CUSTOM_ID: chunk_analyzer.c
:header-args: :tangle ./tangle/chunk_analyzer.c :main no
:END:

- Lets you iterate over dataset chunks, for example, to explore variability in
  compression
- Currently in the =develop= branch

/Let's write a simple "chunk analyzer!"/

**** Basic idea

Provide an HDF5 file name as the single argument.

#+begin_src C

#include "hdf5.h"

#include <stdlib.h>
#include <stdio.h>

static herr_t visit_cb(hid_t obj, const char *name, const H5O_info2_t *info,
                       void *op_data);

int main(int argc, char **argv)
{
  int retval = EXIT_SUCCESS;
  hid_t file;
  char path[] = {"/"};

  if (argc < 2) {
    printf("HDF5 file name required!");
    return EXIT_FAILURE;
  }

  if ((file = H5Fopen(argv[1], H5F_ACC_RDONLY, H5P_DEFAULT)) ==
      H5I_INVALID_HID) {
    retval = EXIT_FAILURE;
    goto fail_file;
  }

  // let's visit all objects in the file
  if (H5Ovisit(file, H5_INDEX_NAME , H5_ITER_NATIVE , &visit_cb, path,
               H5O_INFO_BASIC) < 0) {
    retval = EXIT_FAILURE;
    goto fail_visit;
  }

 fail_visit:
  H5Fclose(file);
 fail_file:
  return retval;
}

#+end_src

**** Callback for ~H5Ovisit~

#+begin_src C

static int chunk_cb(const hsize_t *offset, uint32_t filter_mask, haddr_t addr,
                    uint32_t nbytes, void *op_data);

herr_t visit_cb(hid_t obj, const char *name, const H5O_info2_t *info,
                void *op_data)
{
  herr_t retval = 0;
  char* base_path = (char*) op_data;

  if (info->type == H5O_TYPE_DATASET)  // current object is a dataset
    {
      hid_t dset, dcpl;
      if ((dset = H5Dopen(obj, name, H5P_DEFAULT)) == H5I_INVALID_HID) {
        retval = -1;
        goto func_leave;
      }
      if ((dcpl = H5Dget_create_plist(dset)) == H5I_INVALID_HID) {
        retval = -1;
        goto fail_dcpl;
      }
      if (H5Pget_layout(dcpl) == H5D_CHUNKED) // dataset is chunked
        {
          __label__ fail_dtype, fail_dspace, fail_fig;
          hid_t dspace, dtype;
          size_t size, i;
          int rank;
          hsize_t cdims[H5S_MAX_RANK];

          // get resources
          if ((dtype = H5Dget_type(dset)) < 0) {
            retval = -1;
            goto fail_dtype;
          }
          if ((dspace = H5Dget_space(dset)) < 0) {
            retval = -1;
            goto fail_dspace;
          }
          // get the figures
          if ((size = H5Tget_size(dtype)) == 0 ||
              (rank = H5Sget_simple_extent_ndims(dspace)) < 0 ||
              H5Pget_chunk(dcpl, H5S_MAX_RANK, cdims) < 0) {
            retval = -1;
            goto fail_fig;
          }
          // calculate the nominal chunk size
          size = 1;
          for (i = 0; i < (size_t) rank; ++i)
            size *= cdims[i];
          // print dataset info
          printf("%s%s : nominal chunk size %lu [B] \n", base_path, name,
                 size);
          // get the allocated chunk sizes
          if (H5Dchunk_iter(dset, H5P_DEFAULT, &chunk_cb, NULL) < 0) {
            retval = -1;
            goto fail_fig;
          }

        fail_fig:
          H5Sclose(dspace);
        fail_dspace:
          H5Tclose(dtype);
        fail_dtype:;
        }

      H5Pclose(dcpl);
    fail_dcpl:
      H5Dclose(dset);
    }

 func_leave:
  return retval;
}

#+end_src

**** Callback for ~H5Dchunk_iter~

#+begin_src C

int chunk_cb(const hsize_t *offset, uint32_t filter_mask, haddr_t addr,
             uint32_t nbytes, void *op_data)
{
  // for now we care only about the allocated chunk size
  printf("%d\n", nbytes);
  return EXIT_SUCCESS;
}

#+end_src

* Clinic 2021-07-27
** Your Questions
- Q :: Will the HDF5 1.12.1 file locking changes be brought to 1.10.8?

- Q :: Is there any experience using HDF5 for MPI output with compression on a
  progressively striped Lustre system? We’re seeing some file corruption and we
  are wondering where the problem lies. - Sean Freeman
- A :: Nothing comes to mind that's related to that, but it might be good to
  see what MPI and MPI I/O backend the user is using, since we've had issues
  with ROMIO in the past for example. - [[mailto:jhenderson@hdfgroup.org][Jordan Henderson]]
  - HPE MPT from SGI, not using ROMIO
  - Maybe an MVE?
** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/2021-hdf5-user-group-hug21-call-for-papers/8301][2021 HDF5 User Group Call for Papers]]
- Format: "Paper and Presentation" or "Presentation"
- Deadline for presentation abstracts: [2021-08-01 Sun]
- Event: 12-15 October 2021
**** [[https://docs.hdfgroup.org/hdf5/develop/_r_f_c.html][HDF5 RFCs]]
- All RFCs in one place
*** Forum
**** [[https://forum.hdfgroup.org/t/h5i-dec-ref-hangs/8104][H5i_dec_ref hangs]]
- Parallel HDF5 "misbehavior" can be subtle
- [[https://portal.hdfgroup.org/display/HDF5/Collective+Calling+Requirements+in+Parallel+HDF5+Applications][Collective Calling Requirements in Parallel HDF5 Applications]]
  - Allocation time, fill behavior, etc., are less visible, but included
  - Always ask if an operation has the potential to create any "metadata
    disparity?"
**** [[https://forum.hdfgroup.org/t/how-to-read-a-utf-8-string/6125][How to read a UTF-8 string]]
- =H5T_CSET_UTF8= for character encoding
- The is currently a subtle bug in string handling [[https://github.com/HDFGroup/hdf5/issues/544][Inconsistent behaviour with variable-length strings and character encoding #544]]
  - ASCII is a proper subset of UTF-8 with byte-identical encodings
  - The HDF5 library is blissfully ignorant about that...
**** [[https://forum.hdfgroup.org/t/when-should-mpi-barrier-be-used-when-using-parallel-hdf5/8761][When should MPI barrier be used when using Parallel HDF5?]]
- Only if you want to achieve a certain consistency semantics ("processes
  communicating through a file")
  - See [[https://docs.hdfgroup.org/hdf5/rfc/RFC%20PHDF5%20Consistency%20Semantics%20MC%20120328.docx.pdf][Enabling a Strict Consistency Semantics Model in Parallel HDF5]]
****  [[https://forum.hdfgroup.org/t/hug-2021-hdf5-wishlist/8545][Make a wish!]]
- What small changes would make a big difference in your HDF5 workflow?
- Chime in!
** Tips, tricks, & insights
*** User-defined Properties
- *Use case:* You want to pass property list-like things (dictionaries) around,
  your language doesn't have dictionaries, and you don't want to re-invent the
  wheel
  - You want to stay close to the "HDF5 way of doing things"
- See [[https://docs.hdfgroup.org/hdf5/develop/group___g_p_l_o_a.html][General Property List Operations (Advanced)]]
- You can define your own property list classes w/ pre-defined or "permanent"
  properties
- You can insert "temporary" (= non-permanent) properties into any property list
- *WARNING:* Permanent or temporary, /none/ of this is persisted in the HDF5
  file!
  - These property lists (and properties) get copied between APIs provided
    you've implemented the necessary callbacks
  - Depending on the property value types, make sure you implement proper
    resource management, or memory leaks might occur
- It's an esoteric/advanced/infrequently used feature, but might be just what
  you need in certain circumstances
* Clinic 2021-07-20
** Your Questions
- Q :: Will the HDF5 1.12.1 file locking changes be brought to 1.10.8?

- Q ::   Named types, what are the benefits?
  - A :: Documentation and convenience. You don't have to (re-)create the
    datatype over and over. Just open it and pass the handle to attribute and
    dataset creations!

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/2021-hdf5-user-group-hug21-call-for-papers/8301][2021 HDF5 User Group Call for Papers]]
- Format: "Paper and Presentation" or "Presentation"
- Deadline for presentation abstracts: [2021-08-01 Sun]
- Event: 12-15 October 2021
*** Forum
**** [[https://forum.hdfgroup.org/t/migrating-pandas-and-local-hf5-to-hsds/8721][Migrating pandas and local HF5 to HSDS ]]
- John Readey posted a nice comment referencing an article that shows how to map
  pandas dataframes to HDF5 via =h5py=
- The same will also work w/ =h5pyd=
**** [[https://forum.hdfgroup.org/t/local-hsds-performance-vs-local-hdf5-files/8652][Local HSDS performance vs local HDF5 files]]
- Interesting exchange of benchmark results
- Data (response) preparation in HSDS seems to be slow
- The big question is why HSDS is sending data at a 10x lower rate than a
  vanilla REST API (339 MB/s versus 4,384 MB/s)
**** [[https://forum.hdfgroup.org/t/mpi-io-file-info-actually-used/8751][MPI-IO file info actually used]]
- The ~MPI_Info~ object returned by ~H5Pget_fapl_mpio~ does not return the full
  set of hints seen by MPI
****  [[https://forum.hdfgroup.org/t/hug-2021-hdf5-wishlist/8545][Make a wish!]]
- What small changes would make a big difference in your HDF5 workflow?
- Chime in!

** Tips, tricks, & insights
*** HDF5 File Images
- Use cases
  - In-memory I/O
  - Share HDF5 data between processes w/o a file system
  - Transmit HDF5 data packets over a network
- See also Vijay Kartik's (DESY) [[https://youtu.be/E3bIeFw02dc][presentation]] and [[https://www.hdfgroup.org/wp-content/uploads/2021/07/VijayKartik_HDF5_Serialization.pdf][slides]] from HUG 2021 Europe
- Starting point: HDF5 core VFD
  - Replace the file (logical byte sequence) with a memory buffer
  - ~read~, ~write~ -> ~memcpy~
- HDF5 file images generalize that concept
  - Memory buffer + management interface (callbacks)
  - Reference: [[https://docs.hdfgroup.org/hdf5/rfc/HDF5FileImageOperations.pdf][HDF5 File Image Operations]]
- HDF5 file images can be exchanged between processes via IPC (shared memory
  segment) or a TCP connection
- See section 4 (Examples) in the reference

  #+begin_example
 +++ Process A +++                          +++ Process B +++

 <Open and construct the desired file       hid_t file_;
 with the Core file driver>

 H5Fflush(fid);
 size = H5Fget_file_image(fid, NULL, 0);
 buffer_ptr = malloc(size);
 H5Fget_file_image(fid, buffer_ptr, size);

 <transmit size>                           <receive size>
                                           buffer_ptr = malloc(size)
 <transmit *buffer_ptr>                    <receive image in *buffer_ptr>
 free(buffer_ptr);
 <close core file>                         file_id = H5LTopen_file_image
                                                     (
                                                      buf,
                                                      buf_len,
                                                      H5LT_FILE_IMAGE_DONT_COPY
                                                     );

                                           <read data from file, then close.
                                            note that the Core file driver
                                            will discard the buffer on close>
   #+end_example

* Clinic 2021-07-13
** Your Questions
- Q :: Will the HDF5 1.12.1 file locking changes be brought to 1.10.8?

** Last week's highlights
*** HUG 2021 Europe
- The presentations from the European HUG 2021 event are now available on [[https://www.youtube.com/watch?v=NRS8oV7T9BE&list=PLPyhR4PdEeGbiXGJ4ykBf3JEw6to8rmB3][YouTube]]
*** Announcements
**** [[https://forum.hdfgroup.org/t/2021-hdf5-user-group-hug21-call-for-papers/8301][2021 HDF5 User Group Call for Papers]]
- Format: "Paper and Presentation" or "Presentation"
- Deadline for presentation abstracts: [2021-08-01 Sun]
- Event: 12-15 October 2021
*** Forum
**** [[https://forum.hdfgroup.org/t/hdf5-specs-unclear-b-tree-v2-and-fractal-heap/8723][HDF5 specs unclear: B-tree v2 and fractal heap ]]
- There was a lot of interest in accessing HDF5 files directly, i.e., w/o the
  HDF5 library
- Good clarity test for the [[https://docs.hdfgroup.org/hdf5/develop/_f_m_t3.html][file format spec]].
- Someone is extending the [[https://github.com/jjhelmus/pyfive][=pyfive=]] pure Python HDF5 reader and asked for heap
  ID clarification

**** [[https://forum.hdfgroup.org/t/building-rest-vol-on-windows-10/8654][Building REST VOL on Windows 10]]
- REST VOL = access HSDS via the HDF5 library, converts HDF5 library calls into
  RESTful requests (and back)
- Requires =libcurl= and massaging the linker flags

**** [[https://forum.hdfgroup.org/t/file-storage-on-aws-s3/8715][File storage on AWS S3]]
- Where did the data go?
- The documentation can be found [[https://github.com/HDFGroup/hsds/blob/master/docs/design/obj_store_schema/obj_store_schema_v2.md][here]]

**** [[https://forum.hdfgroup.org/t/migrating-pandas-and-local-hf5-to-hsds/8721][Migrating pandas and local HF5 to HSDS ]]
- Using [[https://www.digitalocean.com/products/spaces/][DigitalOcean and spaces]] instead of AWS S3
- Using [[https://pandas.pydata.org/][=pandas=]]
  - Will that work?

**** [[https://forum.hdfgroup.org/t/local-hsds-performance-vs-local-hdf5-files/8652][Local HSDS performance vs local HDF5 files]]
- User observed a 10x slowdown for reads
- What to expect?
  - Several sources for slowdown (e.g., compression, IPC)
- John Ready is working on a comprehensive performance test suite

**** [[https://forum.hdfgroup.org/t/start-list-of-vol-plugins/8714][Start list of VOL plugins?]]
- [[https://portal.hdfgroup.org/display/support/Registered+VOL+Connectors][List of VOL Connectors Registered with The HDF Group]]

**** [[https://forum.hdfgroup.org/t/h5diff-and-ignoring-attributes/8553][h5diff and ignoring attributes]]
- Now in HDF5 =develop= as =--exclude-attribute= option for =h5diff=

****  [[https://forum.hdfgroup.org/t/hug-2021-hdf5-wishlist/8545][Make a wish!]]
- What small changes would make a big difference in your HDF5 workflow?
- Chime in!
** Tips, tricks, & insights
*** HDF5 documentation updates
- [[http://docs.hdfgroup.org.s3-website.us-east-2.amazonaws.com/hdf5/develop/index.html][docs.hdfgroup.org/hdf5/develop/]]

* Clinic 2021-07-06
** Your Questions
- Q :: Will the HDF5 1.12.1 file locking changes be brought to 1.10.8?

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/european-hdf-users-group-hug-summer-2021-july-7-8-2021/8632][European HDF Users Group (HUG) Summer 2021 July 7-8, 2021]]
- [[https://zoom.us/meeting/register/tJUpde6srTwqGtPry8kfJthku8Eg2JZDrv28][Register for tomorrow's event!]]
**** [[https://forum.hdfgroup.org/t/2021-hdf5-user-group-hug21-call-for-papers/8301][2021 HDF5 User Group Call for Papers]]
- Format: "Paper and Presentation" or "Presentation"
- Deadline for presentation abstracts: [2021-08-01 Sun]
- Event: 12-15 October 2021
**** [[https://forum.hdfgroup.org/t/reference-manual-in-doxygen/8230][Reference Manual in Doxygen]]
- New permanent home for HDF5 documentation
- [[https://docs.hdfgroup.org/hdf5/develop/][https://docs.hdfgroup.org/hdf5/develop/]]
- [[https://docs.hdfgroup.org/hdf5/v1_12/][https://docs.hdfgroup.org/hdf5/v1_12/]]
*** Forum
****  [[https://forum.hdfgroup.org/t/hug-2021-hdf5-wishlist/8545][Make a wish!]]
- What small changes would make a big difference in your HDF5 workflow?
- Chime in!
**** [[https://forum.hdfgroup.org/t/problems-with-hdf5-and-swmr-on-nfs-mounted-network-disk/8672][Problems with HDF5 and SWMR on NFS mounted network disk]]
- Current SWMR implementation depends on POSIX write semantics (esp. order
  preservation)
- NFS & co. don't do that
- VFD SWMR might change that
**** [[https://forum.hdfgroup.org/t/save-related-data/8680][Save related data]]

** Tips, tricks, & insights
*** HDF5 ecosystem: HDFql
- HDFql = Hierarchical Data Format query language
- High-level and /declarative/
- SQL is the gold standard for simplicity and power
  - Adapted to HDF5
- A single /guest/ language (HDFql) for multiple /host/ languages (C, C++, Java,
  Python, C#, Fortran, R)
- Seamless parallelism (multiple cores, MPI)
**** Example
- Host language: Fortran
- Find all datasets existing in an HDF5 file named =data.h5= that start with
  =temperature= and are of data type =float=
- For each dataset found, print its name and read its data
- Write the data into a file named =output.txt= in an ascending order
- Each value (belonging to the data) is written in a new line using a UNIX-based
  end of line (EOL) terminator

#+begin_src fortran

      PROGRAM Example
      USE HDFql
      INTEGER :: state
      state = hdfql_execute("USE FILE data.h5")
      state = hdfql_execute(
      "SHOW DATASET LIKE **/^temperature WHERE DATA TYPE == FLOAT")
D     O WHILE(hdfql_cursor_next() .EQ. HDFQL_SUCCESS)
      WRITE(*, *) "Dataset found: ", hdfql_cursor_get_char()
      state = hdfql_execute(
      "SELECT FROM " // hdfql_cursor_get_char() //
      " ORDER ASC INTO UNIX FILE output.txt SPLIT 1")
      END DO
      state = hdfql_execute("CLOSE FILE")
      END PROGRAM

#+end_src

#+begin_src sql

CREATE FILE my_file.h5

CREATE FILE experiment.h5 IN PARALLEL

CREATE GROUP countries

CREATE DATASET values AS FLOAT(20, 40) ENABLE ZLIB

INSERT INTO measurements VALUES FROM EXCEL FILE values.xlsx

INSERT INTO dset(0:::1) VALUES FROM MEMORY 0

SHOW ATTRIBUTE group2 LIKE **/1|3

#+end_src

- Links
  - [[https://www.hdfql.com/][HDFql home]]
    - Binaries for Linux, Windows, and macOS
  - [[https://www.hdfql.com/examples/][HDFql examples]]
  - [[https://www.hdfql.com/resources/LICENSE.txt][HDFql license]]

** Coming soon
*** What happens to open HDF5 handles/IDs when your program ends?
- Suggested by Quincey Koziol (LBNL)
- We'll take it in pieces
  - Current behavior
  - How async I/O changes  that picture
*** Other topics of interest?
* Clinic 2021-06-29
** Your Questions
- Q :: Will the HDF5 1.12.1 file locking changes be brought to 1.10.8?

** Last week's highlights
*** Announcements
- [[https://forum.hdfgroup.org/t/european-hdf-users-group-hug-summer-2021-july-7-8-2021/8632][European HDF Users Group (HUG) Summer 2021 July 7-8, 2021]]
  - [[https://www.hdfgroup.org/hug/europeanhug21/propose-a-presentation/][Propose a presentation]]–let us know you’re interested as soon as possible.
  - [[https://www.hdfgroup.org/hug/europeanhug21/submit-your-abstract/][Finalize your presentation]] by sending in your abstract by June 30
  - [[https://www.hdfgroup.org/hug/europeanhug21/submit-your-slide-deck-and-other-materials/][Submit your PPT]] and other materials by July 6
  - [[https://zoom.us/meeting/register/tJUpde6srTwqGtPry8kfJthku8Eg2JZDrv28][Attendee and Speaker Registration]]

- [[https://forum.hdfgroup.org/t/2021-hdf5-user-group-hug21-call-for-papers/8301][2021 HDF5 User Group Call for Papers]]
  - Format: "Paper and Presentation" or "Presentation"
  - Deadline for presentation abstracts: [2021-08-01 Sun]
  - Event: 12-15 October 2021
*** Forum
****  [[https://forum.hdfgroup.org/t/hug-2021-hdf5-wishlist/8545][Make a wish!]]
- What small changes would make a big difference in your HDF5 workflow?
- Chime in!
**** [[https://forum.hdfgroup.org/t/hdf5-performance/8622][HDF5 Performance]]
- User is seeing decent performance w/ packet tables =H5PT=
- Issue w/ deleting links (?)
**** [[https://forum.hdfgroup.org/t/local-hsds-performance-vs-local-hdf5-files/8652][Local HSDS performance vs local HDF5 files]]
**** [[https://forum.hdfgroup.org/t/hdfview-should-default-to-read-only-open/4584][HDFView should default to read-only open]]
- Yes!
- Too many options? Sloppy testing?
**** [[https://forum.hdfgroup.org/t/hdf-port-to-rust/8639][HDF - port to Rust]]
- Not a bad idea: a BIG job
- Perhaps not a replacement for the C implementation (How many systems have a
  Rust compiler?)
- I understand that that's not the point, but there are reasonably mature [[https://github.com/aldanor/hdf5-rust][Rust
  language bindings for HDF5]]

** Tips, tricks, & insights
*** How do I delete an HDF5 item?
- HDF5 item = something a user created and that gets stored in an HDF5 file
****  High-level view
- Attributes - [[https://portal.hdfgroup.org/display/HDF5/H5A_DELETE][=H5Adelete*=]]
- Objects (groups, datasets, named datatypes) - [[https://portal.hdfgroup.org/display/HDF5/H5L_DELETE][=H5Ldelete*=]]
**** Low-level view
- Objects are /reference-counted/ (in the object OHDR in the file!)
- A positive reference count means the object is considered /in-use/ or
  referenced
- A zero reference count signals to the HDF5 library free space availability
- If that free space can be used or reclaimed depends on several factors
  - Position of the gap (middle of the file, end of the file)
  - Intervening file closure
  - Library version free-space management and tracking support
  - Virtual File Driver support
- A detailed description of file space management (including free space) can be
  found in [[https://support.hdfgroup.org/HDF5/docNewFeatures/FileSpace/RFC-Paged_Aggregation.pdf][this RFC]]
- Highlights:
  - Pre-HDF5 1.10.x
    - Free space info is *not* persisted across file open/close epochs
      - Typical symptom: deleting an object in another epoch will not reduce
        file size
    - Use =h5stat= to discover the amount of free-/unused space
    - =h5repack= is the cheapest way to recover unused space
      - May not be practical for large files
  - HDF5 1.10.x+
    - Free space info can be persisted across file open/close epochs
      - Needs to be enabled in file creation property list
      - Set threshold on smallest quanta to be tracked
      - Combine with paged allocation!
- The story too involved for most users
- Summary
  - Don't create (in the file) what you don't need
  - Use =h5stat= to assess and =h5repack= to reclaim free space: don't obsess
    over a few KB!
  - If you really want to get into file space management, use HDF5 1.10.x+ and
    come back next time with a _question_!
** Coming soon
*** What happens to open HDF5 handles/IDs when your program ends?
- Suggested by Quincey Koziol (LBNL)
- We'll take it in pieces
  - Current behavior
  - How async I/O changes  that picture
*** Other topics of interest?
* Clinic 2021-06-22
** Your Questions
- Q :: What is the CacheVOL and what can I do with it? How can I use node-local
  storage on an HPC system?
  - Complexity is hidden from users
  - Use in conjunction w/ Async VOL
  - Data migration to and from the remote storage is performed in the background
  - Developed by NERSC w/ Huihuo Zheng as the lead developer
  - No official release yet
  - See this [[https://www.exascaleproject.org/wp-content/uploads/2021/01/ECP-HDF5-Comm-BOF-All-Slides.pdf][ECP BoF presentation]] (around slide 29)
  - [[https://github.com/hpc-io/vol-cache][GitHub]]
  - [[https://github.com/HDFGroup/hdf-spack][Spack integration]]
- Q :: Will the HDF5 1.12.1 file locking changes be brought to 1.10.8?
** Last week's highlights
*** Announcements
- [[https://forum.hdfgroup.org/t/european-hdf-users-group-hug-summer-2021-july-7-8-2021/8632][European HDF Users Group (HUG) Summer 2021 July 7-8, 2021]]
  - [[https://www.hdfgroup.org/hug/europeanhug21/propose-a-presentation/][Propose a presentation]]–let us know you’re interested as soon as possible.
  - [[https://www.hdfgroup.org/hug/europeanhug21/submit-your-abstract/][Finalize your presentation]] by sending in your abstract by June 30
  - [[https://www.hdfgroup.org/hug/europeanhug21/submit-your-slide-deck-and-other-materials/][Submit your PPT]] and other materials by July 6
  - [[https://zoom.us/meeting/register/tJUpde6srTwqGtPry8kfJthku8Eg2JZDrv28][Attendee and Speaker Registration]]

- [[https://forum.hdfgroup.org/t/2021-hdf5-user-group-hug21-call-for-papers/8301][2021 HDF5 User Group Call for Papers]]
  - Format: "Paper and Presentation" or "Presentation"
  - Deadline for presentation abstracts: [2021-08-01 Sun]
  - Event: 12-15 October 2021
- [[https://forum.hdfgroup.org/t/hdf5-udf-2-1-released-with-support-for-windows-and-macos/8631][HDF5-UDF 2.1 released – with support for Windows and macOS!]]
*** Forum
****  [[https://forum.hdfgroup.org/t/hug-2021-hdf5-wishlist/8545][Make a wish!]]
- What small changes would make a big difference in your HDF5 workflow?
- Chime in!
**** [[https://forum.hdfgroup.org/t/hdf5-performance/8622][HDF5 Performance]]
- Slowdown w/ a lot of attributes (10K, 100K, ...)
- Slight improvement w/ a low-level fix (see below)
- The customer is always right, but maybe this is not such a good idea
** Tips, tricks, & insights
*** How do I use a newer HDF5 file format?
- Versions
  - HDF5 library
  - File format specification
- HDF5 library /forward- and backward-compatibility/
  - Backward :: The latest version of the library can read HDF5 files created
    with all earlier library versions
  - Forward :: A given version of the library can read all (objects in) HDF5
    files created by later versions as long as they are compatible with this
    version.
- By default, newer HDF5 library versions use settings compatible with the
  earliest library version

#+begin_src C

#include "hdf5.h"

#include <stdio.h>
#include <stdlib.h>

int main()
{
  __label__ fail_fapl, fail_file;
  int ret_val = EXIT_SUCCESS;
  hid_t fapl, file;

  {
    unsigned maj, min, rel;
    if (H5get_libversion(&maj, &min, &rel) < 0) {
      ret_val = EXIT_FAILURE;
      goto fail_fapl;
    }
    printf("Welcome to HDF5 %d.%d.%d!\n", maj, min, rel);
  }

  if ((fapl = H5Pcreate(H5P_FILE_ACCESS)) < 0) {
    ret_val = EXIT_FAILURE;
    goto fail_fapl;
  }

  // bracket the range of LIBRARY VERSIONS for object creation and access,
  // e.g., min. vers. 1.8, max. version current
  if (H5Pset_libver_bounds(fapl, H5F_LIBVER_V18, H5F_LIBVER_LATEST) < 0) {
    ret_val = EXIT_FAILURE;
    goto fail_file;
  }

  if ((file = H5Fcreate("my.h5", H5F_ACC_TRUNC, H5P_DEFAULT, fapl)) < 0) {
    ret_val = EXIT_FAILURE;
    goto fail_file;
  }

  // do something useful w/ FILE

  H5Fclose(file);

 fail_file:
  H5Pclose(fapl);
 fail_fapl:;

  return ret_val;
}

#+end_src

** Coming soon
*** What happens to open HDF5 handles/IDs when your program ends?
- Suggested by Quincey Koziol (LBNL)
- We'll take it in pieces
  - Current behavior
  - How async I/O changes  that picture
*** Other topics of interest?
* Clinic 2021-06-15
** Your Questions
- CacheVOL
  - How to use local storage?
  - [[https://www.youtube.com/watch?v=KJdXMqfRmS4][Hermes webinar]]
** Last week's highlights
*** Announcements
- [[https://forum.hdfgroup.org/t/2021-hdf5-user-group-hug21-call-for-papers/8301][2021 HDF5 User Group Call for Papers]]
  - Format: "Paper and Presentation" or "Presentation"
  - Deadline for presentation abstracts: [2021-08-01 Sun]
  - Event: 12-15 October 2021
- [[https://forum.hdfgroup.org/t/hdf5-1-12-1-6-rc2-source-available-for-testing/8583][HDF5 1.12.1-6-rc2 source available for testing]]
  - You can help!
*** Forum
****  [[https://forum.hdfgroup.org/t/hug-2021-hdf5-wishlist/8545][Make a wish!]]
- What small changes would make a big difference in your HDF5 workflow?
- Chime in!
**** [[https://forum.hdfgroup.org/t/issue-unlocking-hdf5-file/8552][Issue unlocking HDF5 file?]]
**** [[https://forum.hdfgroup.org/t/access-to-miscellaneous-dataset-information-get-size-of-compressed-dataset/8582][Access to ‘miscellaneous dataset information’/get size of compressed dataset]]
- Aleksandar's =h5py= example:
  #+begin_src python

  import h5py

  def comp_ratio(name, obj):
      if isinstance(obj, h5py.Dataset) and obj.chunks is not None:
          dcpl = obj.id.get_create_plist()
          if dcpl.get_nfilters():
              stor_size = obj.id.get_storage_size()
              if stor_size != 0:
                  ratio = float(obj.nbytes) / float(stor_size)
                  print(f'Compression ratio for "{obj.name}": {ratio}')


  fname = 'example.h5'
  with h5py.File(fname, mode='r') as h5f:
      h5f.visititems(comp_ratio)

  #+end_src

** Tips, tricks, & insights
*** File Locking (Dana Robinson)
**** Outline

The basic file locking algorithm is simple:
- On opening the file, we place the lock as described below. This is true for
  /all/ file opens, not just SWMR (Single Write Multiple Readers).
- For SWMR writers, this lock is removed after we flush the file's superblock.
- All other processes will hold the lock until the file is closed or
  =H5Fstart_swmr_write()= is called.

**** Architecture

File locking is handled in the native HDF5 virtual object layer (VOL) connector,
so other VOL connectors (REST, etc.) don't do any locking.

File locking is handled at the library level, not the virtual file level
(VFL). Virtual file drivers (VFDs) do have to provide an implementation of the
lock and unlock VFD operations for file locking to work, though. If a VFD
doesn't provide a lock operation, file locking will be ignored when using that
VFD. Most of the VFDs provided with the library are based on the POSIX SEC2 VFD
(the default on all platforms, including Windows) and provide the locking I've
described.

The stdio VFD only uses =flock(2)= when it's available, it ignores file locking
when it's not (e.g., on Windows). This is because the stdio VFD is a demo VFD
that uses very little of the library's helper functions and macros and that's
where the flock/fcntl/fail code lies.

The MPI-IO VFD, as you might expect, ignores file locking.

**** SWMR

The =H5Fstart_swmr_write()= API call will unlock the file after it flushes
everything in memory.

Related to the OS-level locking algorithm, if the file was opened by a SWMR
writer (either by using the =H5F_ACC_SWMR_WRITE= flag at create/open or via
=H5Fstart_swmr_write()=) it will have its superblock marked as such. This mark
will prevent readers from opening the file unless they open it with the
=H5F_ACC_SWMR_READ= flag.

HDF5 1.8.x and earlier do not understand this version of the superblock and will
return an error code when trying to open the file. This mark is cleared when the
file is closed. If the writer crashes, you can remove the mark using the
=h5clear= tool provided with the library.

**** UNIX/Linux, Non-Windows

Compile time option:

#+begin_example
  --enable-file-locking=(yes|no|best-effort)
                          Sets the default for whether or not to use file
                          locking when opening files. Can be overridden with
                          the HDF5_USE_FILE_LOCKING environment variable and
                          the H5Pset_file_locking() API call. best-effort
                          attempts to use file locking but does not fail when
                          file locks have been disabled on the file system
                          (useful with Lustre). [default=best-effort]
#+end_example

You can disable all file locking at runtime by setting an environment variable
named =HDF5_USE_FILE_LOCKING= to the string ="FALSE"=.

We preferentially use =flock(2)= in POSIX-like environments where it's
available. If that is not available, we fall back on =fcntl(2)=. If that is not
found and not best effort, the lock operation uses an internal function that
simply *fails*.

With =flock(2)=, we use =LOCK_EX= with read/write permissions and =LOCK_SH= with
read-only. Both are combined with =LOCK_NB= to create non-blocking locks.

With =fcntl(2)=, we lock the entire file. We use =F_WRLCK= with read/write
permissions and =F_RDLCK= with read-only.

**** Windows

There is no locking on Windows systems since the Windows POSIX layer doesn't
support that. File locking on Windows is just a no-op (as opposed to failing, as
we do when neither =flock(2)= nor =fcntl(2)= are found). We'd need a a virtual
file driver based on Win32 API calls to handle file locking on Windows.

Windows uses the POSIX VFD as the default driver. We do not (yet) have a VFD
that uses Win32 API calls like =CreateFile()=. The POSIX layer in Windows is
incomplete, however, and does not include =flock(2)= or =fcntl(2)= so we simply
skip file locking there for the time being.

See below for an update!

**** Summary

File locking is only implemented to help prevent users from accessing files when
SWMR write ordering is not turned on (or when we're doing the superblock
marking). It's not inherent to the SWMR algorithm, which is lock-free and
instead based on write ordering.

**** Hot off the press

In the 1.12.1-6-rc2 release notes, we find this entry:

#+begin_example

• File locking updates:

File locks now work on Windows
Adds BEST_EFFORT value to HDF5_USE_FILE_LOCKING environment variable
Adds H5Pset/get_file_locking() API calls
Adds --enable-file-locking=(yes|no|best-effort) option to Autotools
Adds HDF5_USE_FILE_LOCKING and HDF5_IGNORE_DISABLED_FILE_LOCKS to CMake

#+end_example

** Coming soon
*** What happens to open HDF5 handles/IDs when your program ends?
- Suggested by Quincey Koziol (LBNL)
- We'll take it in pieces
  - Current behavior
  - How async I/O changes  that picture
*** Other topics of interest?
* Clinic 2021-06-08
** Your Questions
???
** Last week's highlights
*** Announcements
- [[https://forum.hdfgroup.org/t/2021-hdf5-user-group-hug21-call-for-papers/8301][2021 HDF5 User Group Call for Papers]]
  - Format: "Paper and Presentation" or "Presentation"
  - Deadline for presentation abstracts: [2021-08-01 Sun]
  - Event: 12-15 October 2021
*** Forum
****  [[https://forum.hdfgroup.org/t/hug-2021-hdf5-wishlist/8545][Make a wish!]]
- What small changes would make a big difference in your HDF5 workflow?
- Great comments already
  - Revised filter interface
  - Updates to =HDF5_PLUGIN_PATH=
  - Amalgamated source
  - Modern language bindings for Fortran
- Chime in!
**** [[https://forum.hdfgroup.org/t/issue-unlocking-hdf5-file/8552][Issue unlocking HDF5 file?]]
- Case of poor documentation & flip-flopping on our part?
**** [[https://forum.hdfgroup.org/t/h5i-dec-ref-hangs/8104][=H5I_dec_ref= hangs]]
** Tips, tricks, & insights
*** Jam-packed HDF5 Files - The HDF5 User Block
- "Keeping things together." - mantra
  - Metadata and data
  - Stuff - a zip file of ancillary (non-HDF5) data, documentation, etc.
  - "HDF5 can be on the inside or the outside"
- User block :: Reserved space at the beginning of an HDF5 file
  - Fixed size 2^N  bytes, min. size 512 KiB
  - Ignored by the HDF5 library
- Tooling [[https://portal.hdfgroup.org/display/HDF5/h5jam+-+h5unjam][=h5jam=, =h5unjam=]]

  #+begin_example

  usage: h5jam -i <in_file.h5> -u <in_user_file> [-o <out_file.h5>] [--clobber]

Adds user block to front of an HDF5 file and creates a new concatenated file.

OPTIONS
  -i in_file.h5    Specifies the input HDF5 file.
  -u in_user_file  Specifies the file to be inserted into the user block.
                   Can be any file format except an HDF5 format.
  -o out_file.h5   Specifies the output HDF5 file.
                   If not specified, the user block will be concatenated in
                   place to the input HDF5 file.
  --clobber        Wipes out any existing user block before concatenating
                   the given user block.
                   The size of the new user block will be the larger of;
                    - the size of existing user block in the input HDF5 file
                    - the size of user block required by new input user file
                   (size = 512 x 2N,  N is positive integer.)

  -h               Prints a usage message and exits.
  -V               Prints the HDF5 library version and exits.

Exit Status:
   0   Succeeded.
   >0  An error occurred.

  #+end_example

  #+begin_example

usage: h5unjam -i <in_file.h5>  [-o <out_file.h5> ] [-u <out_user_file> | --delete]

Splits user file and HDF5 file into two files: user block data and HDF5 data.

OPTIONS
  -i in_file.h5   Specifies the HDF5 as input.  If the input HDF5 file
                  contains no user block, exit with an error message.
  -o out_file.h5  Specifies output HDF5 file without a user block.
                  If not specified, the user block will be removed from the
                  input HDF5 file.
  -u out_user_file
                  Specifies the output file containing the data from the
                  user block.
                  Cannot be used with --delete option.
  --delete        Remove the user block from the input HDF5 file. The content
                  of the user block is discarded.
                  Cannot be used with the -u option.

  -h              Prints a usage message and exits.
  -V              Prints the HDF5 library version and exits.

  If neither --delete nor -u is specified, the user block from the input file
  will be displayed to stdout.

Exit Status:
  0      Succeeded.
  >0    An error occurred.

    #+end_example

- Let's try this!

** Coming soon
*** What happens to open HDF5 handles/IDs when your program ends?
- Suggested by Quincey Koziol (LBNL)
- We'll take it in pieces
  - Current behavior
  - How async I/O changes  that picture
*** Other topics of interest?
* Clinic 2021-06-01
** Your Questions

- Does =h5repack= have any impact on reading?
  - What can =h5repack= do for you?
    - Reclaim unused file space
    - (Down-)Upgrade file format features
    - Change dataset layout
    - (Un-)Compress  datasets
    - ...  (incomplete list! - Run =h5dump --help=!)
  - Yes, the read performance of a re-packed HDF5 file could be better or worse
    (or about the same).

- Is there any difference in reading a variable/field if it is compressed or
  un-compressed? (This question came in at the end of our May 18 session.)
  - Assuming loss-less compression, no, in terms of value
  - Yes, most likely, because (de-)compression requires CPU-cycles
    - Potential reduction in I/O bandwidth
    - Pathology: the data size increases as a result of compression
  - [[https://portal.hdfgroup.org/display/HDF5/HDF5+Data+Flow+Pipeline+for+H5Dread][HDF5 Data Flow Pipeline for =H5Dread= ]]

- Do you have recommendations for setting Figure of Merit (FOM) to
  measure/capture I/O improvements? Any consideration based on current
  supercomputers/hybrid systems, # of files used, kind of I/O (e.g. different
  for read than for write), HDF5 versions, HDF5 features, if using SSDs/Burst
  buffers, etc. What would be a good sample of FOM to follow?
  - Baseline, metric (file size, throughput, IOPs)
  - Large number of combinations? Perhaps polar diagrams? See [[https://www.youtube.com/watch?v=JEnYLWpBjso][this webinar]]
    around 15:18.

** Last week's highlights
*** Announcements
- [[https://forum.hdfgroup.org/t/2021-hdf5-user-group-hug21-call-for-papers/8301][2021 HDF5 User Group Call for Papers]]
  - Format: "Paper and Presentation" or "Presentation"
  - Deadline for abstracts: 1 June 2021
  - Event: 12-15 October 2021
*** Forum
**** [[https://forum.hdfgroup.org/t/hdf5-udf-runs-on-macos/8527][HDF5-UDF runs on macOS!]]
- *Caveat:* [[https://www.gnu.org/proprietary/malware-apple.en.html][Apple's Operating Systems Are Malware]] says [[https://www.gnu.org/][FSF]]
****  [[https://forum.hdfgroup.org/t/hug-2021-hdf5-wishlist/8545][Make a wish!]]
- What small changes would make a big difference in your HDF5 workflow?
** Tips, tricks, & insights
*** Jam-packed HDF5 Files - The HDF5 User Block
- "Keeping things together." - mantra
  - Metadata and data
  - Stuff - a zip file of ancillary (non-HDF5) data, documentation, etc.
  - "HDF5 can be on the inside or the outside"
- User block :: Reserved space at the beginning of an HDF5 file
  - Fixed size 2^N  bytes, min. size 512 KiB
  - Ignored by the HDF5 library
- Tooling [[https://portal.hdfgroup.org/display/HDF5/h5jam+-+h5unjam][=h5jam=, =h5unjam=]]

  #+begin_example

  usage: h5jam -i <in_file.h5> -u <in_user_file> [-o <out_file.h5>] [--clobber]

Adds user block to front of an HDF5 file and creates a new concatenated file.

OPTIONS
  -i in_file.h5    Specifies the input HDF5 file.
  -u in_user_file  Specifies the file to be inserted into the user block.
                   Can be any file format except an HDF5 format.
  -o out_file.h5   Specifies the output HDF5 file.
                   If not specified, the user block will be concatenated in
                   place to the input HDF5 file.
  --clobber        Wipes out any existing user block before concatenating
                   the given user block.
                   The size of the new user block will be the larger of;
                    - the size of existing user block in the input HDF5 file
                    - the size of user block required by new input user file
                   (size = 512 x 2N,  N is positive integer.)

  -h               Prints a usage message and exits.
  -V               Prints the HDF5 library version and exits.

Exit Status:
   0   Succeeded.
   >0  An error occurred.

  #+end_example

  #+begin_example

usage: h5unjam -i <in_file.h5>  [-o <out_file.h5> ] [-u <out_user_file> | --delete]

Splits user file and HDF5 file into two files: user block data and HDF5 data.

OPTIONS
  -i in_file.h5   Specifies the HDF5 as input.  If the input HDF5 file
                  contains no user block, exit with an error message.
  -o out_file.h5  Specifies output HDF5 file without a user block.
                  If not specified, the user block will be removed from the
                  input HDF5 file.
  -u out_user_file
                  Specifies the output file containing the data from the
                  user block.
                  Cannot be used with --delete option.
  --delete        Remove the user block from the input HDF5 file. The content
                  of the user block is discarded.
                  Cannot be used with the -u option.

  -h              Prints a usage message and exits.
  -V              Prints the HDF5 library version and exits.

  If neither --delete nor -u is specified, the user block from the input file
  will be displayed to stdout.

Exit Status:
  0      Succeeded.
  >0    An error occurred.

    #+end_example

- Let's try this!

** Coming soon
*** What happens to open HDF5 handles/IDs when your program ends?
- Suggested by Quincey Koziol (LBNL)
- We'll take it in pieces
  - Current behavior
  - How async I/O changes  that picture
*** Other topics of interest?
* Clinic 2021-05-25
** Your Questions

- Does =h5repack= have any impact on reading?
  - Yes, the read performance of a re-packed HDF5 file could be better or worse
    (or about the same).
- Is there any difference in reading a variable/field if it is compressed or
  un-compressed? (This question came in at the end of our May 18 session.)
  - Yes
  - [[https://portal.hdfgroup.org/display/HDF5/HDF5+Data+Flow+Pipeline+for+H5Dread][HDF5 Data Flow Pipeline for =H5Dread= ]]
- Do you have recommendations for setting Figure of Merit (FOM) to
  measure/capture I/O improvements? Any consideration based on current
  supercomputers/hybrid systems, # of files used, kind of I/O (e.g. different
  for read than for write), HDF5 versions, HDF5 features, if using SSDs/Burst
  buffers, etc. What would be a good sample of FOM to follow?
  - Baseline, metric
  - Large number of combinations? Perhaps polar diagrams? See [[https://www.youtube.com/watch?v=JEnYLWpBjso][this webinar]]
    around 15:18.

** Last week's highlights
*** Announcements
- [[https://forum.hdfgroup.org/t/webinar-announcement-the-hermes-buffering-system-take-two/8493][The Hermes Buffering System - Take Two]] was *POSTPONED*
  - Stay tuned for a re-announcement
- [[https://forum.hdfgroup.org/t/2021-hdf5-user-group-hug21-call-for-papers/8301][2021 HDF5 User Group Call for Papers]]
  - Format: "Paper and Presentation" or "Presentation"
  - Deadline for abstracts: 1 June 2021
  - Event: 12-15 October 2021
*** Forum
**** [[https://forum.hdfgroup.org/t/zstd-filter-plugin-dictionary-training/8401][Zstd filter plugin & dictionary training]]
- [[http://develop.hdf5.info/group___h5_z.html][H5Z life cycle]]
** Tips, tricks, & insights
*** =h5repack= - Getting stuff done w/o writing a lot of code
Sanity check:
#+begin_src sh :results output
h5repack --help
#+end_src
The output should look like this:
#+begin_example
usage: h5repack [OPTIONS] file1 file2
  file1                    Input HDF5 File
  file2                    Output HDF5 File
  OPTIONS
   -h, --help              Print a usage message and exit
   -v, --verbose           Verbose mode, print object information
   -V, --version           Print version number and exit
   -n, --native            Use a native HDF5 type when repacking
   --enable-error-stack    Prints messages from the HDF5 error stack as they
                           occur
   -L, --latest            Use latest version of file format
                           This option will take precedence over the options
                           --low and --high
   --low=BOUND             The low bound for library release versions to use
                           when creating objects in the file
                           (default is H5F_LIBVER_EARLIEST)
   --high=BOUND            The high bound for library release versions to use
                           when creating objects in the file
                           (default is H5F_LIBVER_LATEST)
   --merge                 Follow external soft link recursively and merge data
   --prune                 Do not follow external soft links and remove link
   --merge --prune         Follow external link, merge data and remove dangling link
   -c L1, --compact=L1     Maximum number of links in header messages
   -d L2, --indexed=L2     Minimum number of links in the indexed format
   -s S[:F], --ssize=S[:F] Shared object header message minimum size
   -m M, --minimum=M       Do not apply the filter to datasets smaller than M
   -e E, --file=E          Name of file E with the -f and -l options
   -u U, --ublock=U        Name of file U with user block data to be added
   -b B, --block=B         Size of user block to be added
   -M A, --metadata_block_size=A  Metadata block size for H5Pset_meta_block_size
   -t T, --threshold=T     Threshold value for H5Pset_alignment
   -a A, --alignment=A     Alignment value for H5Pset_alignment
   -q Q, --sort_by=Q       Sort groups and attributes by index Q
   -z Z, --sort_order=Z    Sort groups and attributes by order Z
   -f FILT, --filter=FILT  Filter type
   -l LAYT, --layout=LAYT  Layout type
   -S FS_STRATEGY, --fs_strategy=FS_STRATEGY  File space management strategy for
                           H5Pset_file_space_strategy
   -P FS_PERSIST, --fs_persist=FS_PERSIST  Persisting or not persisting free-
                           space for H5Pset_file_space_strategy
   -T FS_THRESHOLD, --fs_threshold=FS_THRESHOLD   Free-space section threshold
                           for H5Pset_file_space_strategy
   -G FS_PAGESIZE, --fs_pagesize=FS_PAGESIZE   File space page size for
                           H5Pset_file_space_page_size
...
#+end_example
There's a lot of stuff to chew over, but let's focus on the examples:
#+begin_example
...

Examples of use:

1) h5repack -v -f GZIP=1 file1 file2

   GZIP compression with level 1 to all objects

2) h5repack -v -f dset1:SZIP=8,NN file1 file2

   SZIP compression with 8 pixels per block and NN coding method to object dset1

3) h5repack -v -l dset1,dset2:CHUNK=20x10 -f dset3,dset4,dset5:NONE file1 file2

   Chunked layout, with a layout size of 20x10, to objects dset1 and dset2
   and remove filters to objects dset3, dset4, dset5

4) h5repack -L -c 10 -s 20:dtype file1 file2

   Using latest file format with maximum compact group size of 10 and
   minimum shared datatype size of 20

5) h5repack -f SHUF -f GZIP=1 file1 file2

   Add both filters SHUF and GZIP in this order to all datasets

6) h5repack -f UD=307,0,1,9 file1 file2

   Add bzip2 filter to all datasets

7) h5repack --low=0 --high=1 file1 file2

   Set low=H5F_LIBVER_EARLIEST and high=H5F_LIBVER_V18 via
   H5Pset_libver_bounds() when creating the repacked file, file2
#+end_example

Let's create some test data and play!

#+begin_src C

#include "hdf5.h"

#include <assert.h>
#include <stdlib.h>

#define SIZE 1024*1024

int main()
{
  int ret_val = EXIT_SUCCESS;

  hid_t file, fspace, dset;

  double* data = (double*) malloc(SIZE*sizeof(double));

  if ((file = H5Fcreate("foo.h5", H5F_ACC_TRUNC, H5P_DEFAULT, H5P_DEFAULT)) ==
      H5I_INVALID_HID) {
    ret_val = EXIT_FAILURE;
    goto fail_file;
  }

  if ((fspace = H5Screate_simple(1, (hsize_t[]){ SIZE }, NULL)) ==
      H5I_INVALID_HID) {
    ret_val = EXIT_FAILURE;
    goto fail_fspace;
  }

  if ((dset = H5Dcreate(file, "sequential", H5T_IEEE_F64LE, fspace,
                        H5P_DEFAULT, H5P_DEFAULT, H5P_DEFAULT)) ==
      H5I_INVALID_HID) {
    ret_val = EXIT_FAILURE;
    goto fail_dset;
  }

  for (size_t i = 0; i < SIZE; ++i)
    data[i] = (double)i;

  if (H5Dwrite(dset, H5T_NATIVE_DOUBLE, H5S_ALL, H5S_ALL, H5P_DEFAULT, data)
      < 0)
    ret_val = EXIT_FAILURE;

  H5Dclose(dset);

  if ((dset = H5Dcreate(file, "random", H5T_IEEE_F64LE, fspace, H5P_DEFAULT,
                        H5P_DEFAULT, H5P_DEFAULT)) == H5I_INVALID_HID) {
    ret_val = EXIT_FAILURE;
    goto fail_dset;
  }
  for (size_t i = 0; i < SIZE; ++i)
    data[i] = (double)rand()/(double)RAND_MAX;

  if (H5Dwrite(dset, H5T_NATIVE_DOUBLE, H5S_ALL, H5S_ALL, H5P_DEFAULT, data)
      < 0)
    ret_val = EXIT_FAILURE;

  H5Dclose(dset);

 fail_dset:
  H5Sclose(fspace);
 fail_fspace:
  H5Fclose(file);
 fail_file:
  free(data);

  assert(ret_val == EXIT_SUCCESS);

  return ret_val;
}

#+end_src

** Coming soon
*** What happens to open HDF5 handles/IDs when your program ends?
- Suggested by Quincey Koziol (LBNL)
- We'll take it in pieces
  - Current behavior
  - How async I/O changes  that picture
*** Other topics of interest?
* Clinic 2021-05-18
** Your Questions

???

** Last week's highlights
*** Announcements
- Recording of [[https://www.youtube.com/watch?v=RuBKDW4TNO4][H5Coro: The HDF5 Cloud-Optimized Read-Only Library]] is available now
- [[https://forum.hdfgroup.org/t/webinar-announcement-the-hermes-buffering-system-take-two/8493][The Hermes Buffering System - Take Two]]
  - May 28, 2021 11:00 a.m. CDT
  - [[https://zoom.us/meeting/register/tJEtcuivqT4iH9CLyprQ23WhuZWjwIjslfoy][Registration]]
  - [[https://www.youtube.com/watch?v=KJdXMqfRmS4][Previous Webinar Recording]]
  - [[https://github.com/HDFGroup/hermes][Hermes on GitHub]]
- [[https://forum.hdfgroup.org/t/2021-hdf5-user-group-hug21-call-for-papers/8301][2021 HDF5 User Group Call for Papers]]
  - Format: "Paper and Presentation" or "Presentation"
  - Deadline for abstracts: 1 June 2021
  - Event: 12-15 October 2021
*** Forum
**** [[https://forum.hdfgroup.org/t/hdf5-udf-2-0-released-udf-signing-trust-profiles-python-bindings-and-more/8486][HDF5-UDF 2.0 released: UDF signing, trust profiles, Python bindings, and more! ]]
- UDF signing
- Library API
  - Python bindings (i.e., manageable from Jupyter notebook)
- Source code storage
- [[https://github.com/lucasvr/hdf5-udf][GitHub]]
**** [[https://forum.hdfgroup.org/t/zlib-ng-works-with-hdf5/8477][Zlib-ng works with HDF5]]
- More anecdotal evidence of performance improvements
- Begs a maintenance question: Should we/ can we support multiple
  implementations of the same filter?
**** [[https://forum.hdfgroup.org/t/reference-manual-in-doxygen/8230][Reference Manual in Doxygen]]
- [[http://doxygen.hdf5.s3-website.us-east-2.amazonaws.com/_r_m.html][Current version]]
- Life cycle entries - are they helpful?
- To be included in HDF5 1.12.1
** Tips, tricks, & insights
*** When should you consider using chunked layout for a dataset?
"Consider" means that you should also consider /alternatives/. None of the items
listed below mandates chunked layout.
**** Considerations
- I would like to use a compression or other filter w/ my data
- I cannot know/estimate the data size in advance
- I need the ability to append data indefinitely
- My read/write pattern is such that contiguous layout would reduce performance
**** Caveats
- What's a good chunk size?
- Is my chunk cache the right size?
- Compound types?
- Variable-length datatypes?
- Are there edge chunks?
****  Experimentation
- *Don't waste your time writing a lot of code!*
  - Use a tool such as =h5repack=
  - Use intuitive and boilerplate-free language bindings for Python, Julia, or
    C++ that exist thanks to the HDF community
** Coming soon
*** What happens to open HDF5 handles/IDs when your program ends?
- Suggested by Quincey Koziol (LBNL)
- We'll take it in pieces
  - Current behavior
  - How async I/O changes  that picture
*** Other topics of interest?
* Clinic 2021-05-11
** Your Questions
- Where is the page that I'm showing?
- How did we prepare the webinar radial diagrams?
  - Using Python's =plotly= module
  - [[https://medium.com/@abhishekdas.nitc/nightingale-plots-in-python-using-plotly-da42bc18d15d][Here's a nice article]] to get you started.
  - We'll include a few scripts w/ [[https://github.com/HDFGroup/hdf5-iotest][HDF5 I/O test]] in the future

** Last week's highlights
*** Announcements
- [[https://forum.hdfgroup.org/t/webinar-announcement-h5coro-the-hdf5-cloud-optimized-read-only-library/8429][H5Coro: The HDF5 Cloud-Optimized Read-Only Library]]
  - May 14, 11:00 AM Central
  -  Looking at ways to efficiently access HDF5 files residing in AWS S3
- [[https://forum.hdfgroup.org/t/2021-hdf5-user-group-hug21-call-for-papers/8301][2021 HDF5 User Group Call for Papers]]
  - Format: "Paper and Presentation" or "Presentation"
  - Deadline for abstracts: 1 June 2021
  - Event: 12-15 October 2021

*** Forum
**** [[https://forum.hdfgroup.org/t/zlib-ng-works-with-hdf5/8477][Zlib-ng works with HDF5]]
- New =zlib= implementation appears to work w/ HDF5
- Much better performance according to the post
- Maybe support as a dynamic plugin?
**** [[https://forum.hdfgroup.org/t/reference-manual-in-doxygen/8230][Reference Manual in Doxygen]]
- [[http://doxygen.hdf5.s3-website.us-east-2.amazonaws.com/index.html][Current version]]
- Interesting discussion around docs-like-code and maintenance
- There are [[https://documentation.divio.com/][different kinds of documentation]]
  - Tasks, concepts, reference (DITAA)
  - Tutorials, how-to guides, explanation, reference (Divio)
**** [[https://forum.hdfgroup.org/t/h5i-dec-ref-hangs/8104][~H5Idec_ref~ hangs]]
- Showing an example of MPI ranks doing independent writes to different datasets
  w/ MPI-IO VFD
**** [[https://forum.hdfgroup.org/t/hdf5-infinite-loop-closing-library-v1-10-6/8468][HDF5: infinite loop closing library (v1.10.6)]]
- We covered file close degrees in clinic no. 10 on [2021-04-20 Tue]
**** [[https://forum.hdfgroup.org/t/hdfql-2-3-0-release-with-excel-import-export-support/8132][HDFql 2.3.0 Release (with EXCEL import/export support!)]]
- Bugfix for Java =ArrayIndexOutOfBoundsException= when registering a zero
  element byte array
- Fixed in HDFql 2.4.0
** Tips, tricks, & insights
*** Fixed- vs. variable-length string performance cage match
- Trigger: [[https://forum.hdfgroup.org/t/writing-and-reading-variable-length-std-string-in-compound-data-type/8455][Writing and reading variable length std::string in compound data type]]
- Contributed by Steven (Canada Dry) Varga
  - [[http://string-performance.h5cpp.org/][Presentation]]
  - [[https://github.com/steven-varga/HDFGroup-mailinglist/tree/master/non-pod-struct-2021-apr-29][GitHub link]]
** Coming soon
*** What happens to open HDF5 handles/IDs when your program ends?
- Suggested by Quincey Koziol (LBNL)
- We'll take it in pieces
  - Current behavior
  - How async I/O changes  that picture
*** Other topics of interest?
Let us know!
* Clinic 2021-05-04
** Your Questions
???

** Last week's highlights
*** Announcements
- [[https://www.youtube.com/watch?v=JEnYLWpBjso][Recording of last week's webinar]]
- [[https://forum.hdfgroup.org/t/webinar-announcement-h5coro-the-hdf5-cloud-optimized-read-only-library/8429][H5Coro: The HDF5 Cloud-Optimized Read-Only Library]]
  - May 14, 11:00 AM Central
  -  Looking at ways to efficiently access HDF5 files residing in AWS S3
- [[https://forum.hdfgroup.org/t/2021-hdf5-user-group-hug21-call-for-papers/8301][2021 HDF5 User Group Call for Papers]]
  - Format: "Paper and Presentation" or "Presentation"
  - Deadline for abstracts: 1 June 2021
  - Event: 12-15 October 2021

*** Forum
**** [[https://forum.hdfgroup.org/t/how-to-use-h5ocopy-to-copy-a-group-with-hard-links/8443][How to use H5ocopy to copy a group with hard links]]
- [[https://portal.hdfgroup.org/display/HDF5/H5O_COPY][~H5Ocopy~]] vs. [[https://portal.hdfgroup.org/display/HDF5/H5L_COPY][~H5Lcopy~]]
- [[https://portal.hdfgroup.org/display/HDF5/H5P_SET_COPY_OBJECT][~H5Pset_copy_object~]]

** Tips, tricks, & insights
*** What is =H5S_ALL= all about?

#+begin_src C

{
  __label__ fail_update, fail_fspace, fail_dset, fail_file;
  hid_t file, dset, fspace;

  unsigned mode           = H5F_ACC_RDWR;
  char     file_name[]    = "d1.h5";
  char     dset_name[]    = "σύνολο/δεδομένων";
  int      new_elts[6][2] = {{-1, 1}, {-2, 2}, {-3, 3}, {-4, 4},
                             {-5, 5}, {-6, 6}};

  if ((file = H5Fopen(file_name, mode, H5P_DEFAULT))
      == H5I_INVALID_HID) {
    ret_val = EXIT_FAILURE;
    goto fail_file;
  }
  if ((dset = H5Dopen2(file, dset_name, H5P_DEFAULT))
      == H5I_INVALID_HID) {
    ret_val = EXIT_FAILURE;
    goto fail_dset;
  }
  // get the dataset's dataspace
  if ((fspace = H5Dget_space(dset)) == H5I_INVALID_HID) {
    ret_val = EXIT_FAILURE;
    goto fail_fspace;
  }
  // select the first 5 elements in odd positions
  if (H5Sselect_hyperslab(fspace, H5S_SELECT_SET,
                          (hsize_t[]){1},
                          (hsize_t[]){2},
                          (hsize_t[]){5},
                          NULL) < 0) {
    ret_val = EXIT_FAILURE;
    goto fail_update;
  }

  // (implicitly) select and write the first 5 elements of the second
  // column of NEW_ELTS
  if (H5Dwrite(dset, H5T_NATIVE_INT, H5S_ALL, fspace, H5P_DEFAULT,
               new_elts) < 0)
    ret_val = EXIT_FAILURE;

 fail_update:
  H5Sclose(fspace);
 fail_fspace:
  H5Dclose(dset);
 fail_dset:
  H5Fclose(file);
 fail_file:;
}

#+end_src

** Coming soon
*** Fixed- vs. variable-length string performance cage match
- Contributed by Steven (Canada Dry) Varga
- You don't want to miss that one!
*** What happens to open HDF5 handles/IDs when your program ends?
- Suggested by Quincey Koziol (LBNL)
- We'll take it in pieces
  - Current behavior
  - How async I/O changes  that picture
*** Other topics of interest?
Let us know!
* Clinic 2021-04-27
** Your questions
*** Question 1

#+begin_quote
Last week you mentioned that one might use the Fortran version of the HDF5
library from C/C++ when working with column-major data.  Could you say more
about this? Is the difference simply how the arguments to the library functions
are interpreted (e.g ~H5Screate~, ~H5Sselect_hyperslab~) are interpreted, or is it
possible to discern from the file itself whether the data is column-major or
row-major?
#+end_quote

** Last week's highlights
*** Announcements
- ECP BOF Day slides are [[https://www.hdfgroup.org/wp-content/uploads/2021/04/ECP-HDF5-Comm-BOF-All-Slides.pdf][available]]
- Part 2 of  [[https://forum.hdfgroup.org/t/webinar-announcement-hdf5-application-tuning-there-is-more-than-one-way-to-skin-a-cat-fish-part-2/8387][HDF5 Application Tuning]]
  - April 30, 11:00 AM Central
  - This time it's about HDF5 library performance variability
- [[https://forum.hdfgroup.org/t/webinar-announcement-h5coro-the-hdf5-cloud-optimized-read-only-library/8429][H5Coro: The HDF5 Cloud-Optimized Read-Only Library]]
  - May 14, 11:00 AM Central
  -  Looking at ways to efficiently access HDF5 files residing in AWS S3
- [[https://forum.hdfgroup.org/t/2021-hdf5-user-group-hug21-call-for-papers/8301][2021 HDF5 User Group Call for Papers]]
  - Format: "Paper and Presentation" or "Presentation"
  - Deadline for abstracts: 1 June 2021
  - Event: 12-15 October 2021
*** Forum
**** [[https://forum.hdfgroup.org/t/reference-manual-in-doxygen/8230][Doxygen-based RM merged to =develop=]]
- Pull requests welcome
- Feedback on life cycle intros wanted, e.g., [[http://doxygen.hdf5.s3-website.us-east-2.amazonaws.com/group___h5_a.html][H5A]], [[http://doxygen.hdf5.s3-website.us-east-2.amazonaws.com/group___h5_d.html][H5D]], [[http://doxygen.hdf5.s3-website.us-east-2.amazonaws.com/group___h5_f.html][H5F]]
**** [[https://forum.hdfgroup.org/t/parallel-hdf5-write-with-irregular-size-in-one-dimension/8284][Parallel HDF5 write with irregular size in one dimension]]
- Rob Latham confirmed an [[https://forum.hdfgroup.org/t/parallel-hdf5-write-with-irregular-size-in-one-dimension/8284/10][issue]] in Darshan's HDF5 module
**** [[https://forum.hdfgroup.org/t/how-to-use-h5ocopy-to-copy-a-group-with-hard-links/8443][How to use H5ocopy to copy a group with hard links]]
- I don't understand it: are we copying groups or links (or both)?
** Tips, tricks, & insights
**** The =h5stat= tool

#+begin_example
Usage: h5stat [OPTIONS] file

      OPTIONS
     -h, --help            Print a usage message and exit
     -V, --version         Print version number and exit
     -f, --file            Print file information
     -F, --filemetadata    Print file space information for file's metadata
     -g, --group           Print group information
     -l N, --links=N       Set the threshold for the # of links when printing
                           information for small groups.  N is an integer greater
                           than 0.  The default threshold is 10.
     -G, --groupmetadata   Print file space information for groups' metadata
     -d, --dset            Print dataset information
     -m N, --dims=N        Set the threshold for the dimension sizes when printing
                           information for small datasets.  N is an integer greater
                           than 0.  The default threshold is 10.
     -D, --dsetmetadata    Print file space information for datasets' metadata
     -T, --dtypemetadata   Print datasets' datatype information
     -A, --attribute       Print attribute information
     -a N, --numattrs=N    Set the threshold for the # of attributes when printing
                           information for small # of attributes.  N is an integer greater
                           than 0.  The default threshold is 10.
     -s, --freespace       Print free space information
     -S, --summary         Print summary of file space information
     --enable-error-stack  Prints messages from the HDF5 error stack as they occur
     --s3-cred=<cred>      Access file on S3, using provided credential
                           <cred> :: (region,id,key)
                           If <cred> == "(,,)", no authentication is used.
     --hdfs-attrs=<attrs>  Access a file on HDFS with given configuration
                           attributes.
                           <attrs> :: (<namenode name>,<namenode port>,
                                       <kerberos cache path>,<username>,
                                       <buffer size>)
                           If an attribute is empty, a default value will be
                           used.
#+end_example

Let's see this in action:

#+begin_example
File information
        # of unique groups: 718
        # of unique datasets: 351
        # of unique named datatypes: 4
        # of unique links: 353
        # of unique other: 0
        Max. # of links to object: 701
        Max. # of objects in group: 350
File space information for file metadata (in bytes):
        Superblock: 48
        Superblock extension: 0
        User block: 0
        Object headers: (total/unused)
                Groups: 156725/16817
                Datasets(exclude compact data): 129918/538
                Datatypes: 1474/133
        Groups:
                B-tree/List: 21656
                Heap: 33772
        Attributes:
                B-tree/List: 0
                Heap: 0
        Chunked datasets:
                Index: 138
        Datasets:
                Heap: 0
        Shared Messages:
                Header: 0
                B-tree/List: 0
                Heap: 0
        Free-space managers:
                Header: 0
                Amount of free space: 0
Small groups (with 0 to 9 links):
        # of groups with 0 link(s): 1
        # of groups with 1 link(s): 710
        # of groups with 2 link(s): 1
        # of groups with 3 link(s): 2
        # of groups with 4 link(s): 1
        # of groups with 5 link(s): 1
        Total # of small groups: 716
Group bins:
        # of groups with 0 link: 1
        # of groups with 1 - 9 links: 715
        # of groups with 100 - 999 links: 2
        Total # of groups: 718
Dataset dimension information:
        Max. rank of datasets: 1
        Dataset ranks:
                # of dataset with rank 1: 351
1-D Dataset information:
        Max. dimension size of 1-D datasets: 736548
        Small 1-D datasets (with dimension sizes 0 to 9):
                # of datasets with dimension sizes 1: 1
                Total # of small datasets: 1
        1-D Dataset dimension bins:
                # of datasets with dimension size 1 - 9: 1
                # of datasets with dimension size 100000 - 999999: 350
                Total # of datasets: 351
Dataset storage information:
        Total raw data size: 9330522
        Total external raw data size: 0
Dataset layout information:
        Dataset layout counts[COMPACT]: 0
        Dataset layout counts[CONTIG]: 0
        Dataset layout counts[CHUNKED]: 351
        Dataset layout counts[VIRTUAL]: 0
        Number of external files : 0
Dataset filters information:
        Number of datasets with:
                NO filter: 1
                GZIP filter: 0
                SHUFFLE filter: 350
                FLETCHER32 filter: 0
                SZIP filter: 0
                NBIT filter: 0
                SCALEOFFSET filter: 0
                USER-DEFINED filter: 350
Dataset datatype information:
        # of unique datatypes used by datasets: 4
        Dataset datatype #0:
                Count (total/named) = (1/1)
                Size (desc./elmt) = (60/64)
        Dataset datatype #1:
                Count (total/named) = (347/0)
                Size (desc./elmt) = (14/1)
        Dataset datatype #2:
                Count (total/named) = (2/0)
                Size (desc./elmt) = (14/2)
        Dataset datatype #3:
                Count (total/named) = (1/1)
                Size (desc./elmt) = (79/12)
        Total dataset datatype count: 351
Small # of attributes (objects with 1 to 10 attributes):
        # of objects with 1 attributes: 1
        # of objects with 2 attributes: 551
        # of objects with 3 attributes: 147
        # of objects with 4 attributes: 2
        # of objects with 5 attributes: 4
        # of objects with 6 attributes: 1
        Total # of objects with small # of attributes: 706
Attribute bins:
        # of objects with 1 - 9 attributes: 706
        Total # of objects with attributes: 706
        Max. # of attributes to objects: 6
Free-space persist: FALSE
Free-space section threshold: 1 bytes
Small size free-space sections (< 10 bytes):
        Total # of small size sections: 0
Free-space section bins:
        Total # of sections: 0
File space management strategy: H5F_FSPACE_STRATEGY_FSM_AGGR
File space page size: 4096 bytes
Summary of file space information:
  File metadata: 343731 bytes
  Raw data: 9330522 bytes
  Amount/Percent of tracked free space: 0 bytes/0.0%
  Unaccounted space: 5582 bytes
Total space: 9679835 bytes
#+end_example

** Coming soon
*** What happens to open HDF5 handles/IDs when your program ends?
- Suggested by Quincey Koziol (LBNL)
- We'll take it in pieces
  - Current behavior
  - How async I/O changes  that picture
*** Other topics of interest?
Let us know!
* Clinic 2021-04-20
** Your questions
** Last week's highlights
*** Announcements
- [[https://forum.hdfgroup.org/t/meetingc-online-tool-fair/8417][MeetingC++ online Tool Fair]] *TODAY*
  - A [[http://meetingcpp-toolfair.h5cpp.org/#/][must-see]] for all [[http://h5cpp.org/][H5CPP]] fans!
- Part 2 of  [[https://forum.hdfgroup.org/t/webinar-announcement-hdf5-application-tuning-there-is-more-than-one-way-to-skin-a-cat-fish-part-2/8387][HDF5 Application Tuning]]
  - This time it's about HDF5 library performance variability
- [[https://forum.hdfgroup.org/t/webinar-announcement-h5coro-the-hdf5-cloud-optimized-read-only-library/8429][H5Coro: The HDF5 Cloud-Optimized Read-Only Library]]
  -  Looking at ways to efficiently access HDF5 files residing in AWS S3
- [[https://forum.hdfgroup.org/t/2021-hdf5-user-group-hug21-call-for-papers/8301][2021 HDF5 User Group Call for Papers]]
  - Format: "Paper and Presentation" or "Presentation"
  - Deadline for abstracts: 1 June 2021
  - Event: 12-15 October 2021
*** Forum
**** [[https://forum.hdfgroup.org/t/parallel-hdf5-write-with-irregular-size-in-one-dimension/8284][Parallel HDF5 write with irregular size in one dimension]]
- Potential issue in Darshan's HDF5 module
**** [[https://forum.hdfgroup.org/t/independent-datasets-for-mpi-processes-progress/8202][Independent datasets for MPI processes. Progress?]]
- Discussing data life cycle and design options
  - Competing requirements
  - For better or worse, there are often many ways to do one thing in HDF5
  - Robustness
**** [[https://forum.hdfgroup.org/t/increases-the-use-of-the-system-ram-until-it-reaches-ram-saturation/8392][Increases the use of the system RAM until it reaches RAM saturation]]
- Long running application w/ no apparent handle leakage
- [[https://valgrind.org/][Valgrind]]
**** [[https://forum.hdfgroup.org/t/calling-fortran-hdf5-function-h5dwrite-f-from-c/8386][Calling fortran HDF5 function h5dwrite_f from C++]]
- I'm out of my depth when it comes to Fortran :-(
** Tips, tricks, & insights
*** Do I need a degree to use [[https://portal.hdfgroup.org/display/HDF5/H5P_SET_FCLOSE_DEGREE][~H5Pset_fclose_degree~]]?
- Identifiers are transient runtime handles to manage HDF5 things
- Everything begins with a file handle, but how does it end?
  - Files can be re-opened
  - Other files can be mounted in HDF5 groups
  - Traversal of external links may trigger the opening of other files and
    objects, but see [[https://portal.hdfgroup.org/display/HDF5/H5P_SET_ELINK_FILE_CACHE_SIZE][~H5Pset_elink_file_cache_size~]]
- What happens if a file is closed before other (non-file) handles?
  * =H5F_CLOSE_WEAK= ::
    - File is closed if last open handle
    - Invalidate file handle and delay file close until remaining objects are
      closed
  * =H5F_CLOSE_SEMI= ::
    - File is closed if last open handle
    - ~H5Fclose~ generates error if open handles remain
  * =H5F_CLOSE_STRONG= ::
    - File is closed, closing any remaining handles if necessary.
  * =H5F_CLOSE_DEFAULT= :: VFD decides, =H5F_CLOSE_WEAK= for most VFDs. Notable exception: MPI-IO - =H5F_CLOSE_SEMI=

** Coming soon
*** What happens to open HDF5 handles/IDs when your program ends?
- Suggested by Quincey Koziol (LBNL)
- We'll take it in pieces
  - Current behavior
  - How async I/O changes  that picture
*** Other topics of interest?
Let us know!
* Clinic 2021-04-06
** Your questions
*** Question 1
We have observed that reading a dataset with variable-length ASCII strings and
setting the read mem. type to =H5T_C_S1 (size=H5T_VARIABLE /
cset=H5T_CSET_UTF8)=, produces an error with =“H5T.c line 4893 in
H5T__path_find_real(): no appropriate function for conversion path”=. However,
if we read first another dataset of the same file that contains UTF8 strings and
then the same dataset with ASCII strings, no errors are returned whatsoever and
the content seems to be retrieved. Is this an expected behaviour, or are we
missing something?
- As a side note, the same situation can be replicated by setting the cset to
  =H5T_CSET_ASCII= and opening first the ASCII-based dataset before the
  UTF8-dataset, or any other combination, as long as the first call succeeded
  (e.g., opening the ASCII dataset with =cset=H5T_CSET_ASCII=, then opening the
  same ASCII dataset with =cset=H5T_CSET_UTF8= also seems to work).
- Tested using HDF5 v1.10.7, v1.12.0, and manually compiling the most recent
  commit on the official GitHub repository. The code was compiled with GCC
  9.3.0 + HPE-MPI v2.22, but no MPI file access property was given (i.e., using
  =H5P_DEFAULT= to avoid MPI-IO).
- Further information: https://github.com/HDFGroup/hdf5/issues/544

** Last week's highlights
*** Announcements
- [[https://www.nuget.org/packages/HDF5.NET][Alpha 4 release]] of [[https://github.com/Apollo3zehn/HDF5.NET][HDF5.NET]]
  - Based on the HDF5 file format spec. & no HDF5 library dependence!
- [[https://forum.hdfgroup.org/t/2021-hdf5-user-group-hug21-call-for-papers/8301][2021 HDF5 User Group Call for Papers]]
  - Format: "Paper and Presentation" or "Presentation"
  - Deadline for abstracts: 1 June 2021
  - Event: 12-15 October 2021

*** Forum
**** [[https://forum.hdfgroup.org/t/how-can-attributes-of-an-existing-object-be-modified/8319][How can attributes of an existing object be modified?]]
- There are several different "namespaces" in HDF5
- Examples:
  - Global (=file-level) path names
  - Per object attribute names
  - Per compound type field names
  - Etc.
- Some have constraints such as reserved characters, character encoding, length,
  etc.
- Most importantly, they are disjoint and /don't mix/
  - Disambiguation would be too costly, if not impossible
**** [[https://forum.hdfgroup.org/t/hdf5dotnet-library/8314][HDF5DotNet library]]
- There's perhaps a place for wrappers of the HDF5 C-API and and independent .NET native (=full-managed) solution (e.g., [[https://github.com/Apollo3zehn/HDF5.NET][HDF5.NET]])
- [[http://swig.org/][SWIG]] (Simplified Wrapper and Interface Generator) has come a long way
  - Should that be the path forward for [[https://github.com/HDFGroup/HDF.PInvoke][HDF.PInvoke]]
  - We need greater automation and (.NET) platform independence
  - Focus on testing
  - Any thoughts/comments?

**** [[https://forum.hdfgroup.org/t/parallel-hdf5-write-with-irregular-size-in-one-dimension/8284][Parallel HDF5 write with irregular size in one dimension]]
- Posted an example that shows how different ranks can write varying amounts of
  data to a chunked dataset in parallel. Some ranks don't write any data. The
  chunk size is chosen arbitrarily.
** Tips & tricks
*** The "mystery" of the HDF5 file format
- The specification published [[https://portal.hdfgroup.org/display/HDF5/File+Format+Specification][here]] can seem overwhelming. Part of the problem is
  that you are seeing at least three versions layered on top of each other.
- The [[https://hdf5.io/develop/_f_m_t1.html][first (?) release]] was a lot simpler, and has all the core ideas
- Once you've digested that, you are ready for the [[https://hdf5.io/develop/_s_p_e_c.html][other releases]] and consider
  writing your own (de-)serializer
- Don't get carried away: only a tiny fraction of the HDF5 library's code deals
  w/ serialization
** Coming soon
*** What happens to open HDF5 handles/IDs when your program ends?
- Suggested by Quincey Koziol (LBNL)
- We'll take it in pieces
  - Current behavior
  - How async I/O changes  that picture
*** Other topics of interest?
Let us know!

* Clinic 2021-03-30
Canceled because of ECP event.
* Clinic 2021-03-23
** Your questions
???

** Last week's highlights
*** Announcements
- [[https://forum.hdfgroup.org/t/2021-hdf5-user-group-hug21-call-for-papers/8301][2021 HDF5 User Group Call for Papers]]
  - Format: "Paper and Presentation" or "Presentation"
  - Deadline for abstracts: 1 June 2021
  - Event: 12-15 October 2021
- [[https://github.com/hdfgroup/hdf4][HDF4 is on GitHub]]
- Don't forget to [[https://forum.hdfgroup.org/t/webinar-announcement-hermes-a-distributed-buffering-system-for-heterogeneous-storage-hierarchies/8269][register for the Hermes webinar]] on Friday (03/26)
*** Forum
**** [[https://forum.hdfgroup.org/t/how-to-convert-xml-to-hdf5/8279][How to convert XML to HDF5]]
- There is no /canonical/ conversion path, even if you have an XML schema
  - XML is simpler because elements are strictly nested
  - XML can be trickier because of element repetition and the non-obligatory
    nature of certain elements or attributes
- Start w/ a scripting language that has XML (parsing) and HDF5 modules
  - [[https://github.com/akheron/jansson][Jannson]] works well if you prefer C
- Consider XSLT to simplify first
**** [[https://forum.hdfgroup.org/t/hdf5dotnet-library/8314][HDF5DotNet library]]
- It's been out of maintenance for many years
- _Alternatives_: [[https://www.nuget.org/packages/HDF.PInvoke/][HDF.PInvoke]] (Windows only) and [[https://www.nuget.org/packages/HDF.PInvoke.1.10/][HDF.PInvoke.1.10]] (.NET
  Standard)
  - Both are based on HDF5 1.10.x
- *Note:* We (The HDF Group) are neither C# nor .NET experts. [[https://docs.microsoft.com/en-us/dotnet/standard/native-interop/pinvoke][=PInvoke=]] is about
  the level of abstraction we can handle. We count on and rely on knowledgeable
  community members for advice and contributions.
- There are many interesting community projects, for example, [[https://github.com/Apollo3zehn/HDF5.NET][HDF5.NET]]:
  - Based on the HDF5 file format spec. & no HDF5 library dependence!
**** [[https://forum.hdfgroup.org/t/parallel-hdf5-write-with-irregular-size-in-one-dimension/8284][Parallel HDF5 write with irregular size in one dimension]]
- Many of our examples s..k, and we have to do a lot better
  - Maybe we created them this way to generate more questions? :-/
- HDF5 dataspaces are logical, chunks are physical
  - Write a (logically) correct program first and then optimize performance!

** Tips & tricks
*** Large (> 64 KiB) HDF5 attributes

#+begin_src python

import h5py, numpy as np

with h5py.File('my.h5', 'w', libver='latest') as file:
    file.attrs['random[1024]'] = np.random.random(1024)
    file.attrs['random[1048576]'] = np.random.random(1024*1024)

#+end_src

The =h5dump= output looks like this:

#+begin_example

gerd@guix ~/scratch/run$ h5dump -pBH my.h5
HDF5 "my.h5" {
SUPER_BLOCK {
   SUPERBLOCK_VERSION 3
   FREELIST_VERSION 0
   SYMBOLTABLE_VERSION 0
   OBJECTHEADER_VERSION 0
   OFFSET_SIZE 8
   LENGTH_SIZE 8
   BTREE_RANK 16
   BTREE_LEAF 4
   ISTORE_K 32
   FILE_SPACE_STRATEGY H5F_FSPACE_STRATEGY_FSM_AGGR
   FREE_SPACE_PERSIST FALSE
   FREE_SPACE_SECTION_THRESHOLD 1
   FILE_SPACE_PAGE_SIZE 4096
   USER_BLOCK {
      USERBLOCK_SIZE 0
   }
}
GROUP "/" {
   ATTRIBUTE "random[1024]" {
      DATATYPE  H5T_IEEE_F64LE
      DATASPACE  SIMPLE { ( 1024 ) / ( 1024 ) }
   }
   ATTRIBUTE "random[1048576]" {
      DATATYPE  H5T_IEEE_F64LE
      DATASPACE  SIMPLE { ( 1048576 ) / ( 1048576 ) }
   }
}
}

#+end_example

The ~libver='latest'~ keyword is critical. Running without produces this error:

#+begin_example

gerd@guix ~/scratch/run$ python3 large_attribute.py
Traceback (most recent call last):
  File "large_attribute.py", line 6, in <module>
    file.attrs['random[1048576]'] = np.random.random(1024*1024)
  File "h5py/_objects.pyx", line 54, in h5py._objects.with_phil.wrapper
  File "h5py/_objects.pyx", line 55, in h5py._objects.with_phil.wrapper
  File "/home/gerd/.guix-profile/lib/python3.8/site-packages/h5py/_hl/attrs.py", line 100, in __setitem__
    self.create(name, data=value)
  File "/home/gerd/.guix-profile/lib/python3.8/site-packages/h5py/_hl/attrs.py", line 201, in create
    attr = h5a.create(self._id, self._e(tempname), htype, space)
  File "h5py/_objects.pyx", line 54, in h5py._objects.with_phil.wrapper
  File "h5py/_objects.pyx", line 55, in h5py._objects.with_phil.wrapper
  File "h5py/h5a.pyx", line 47, in h5py.h5a.create
RuntimeError: Unable to create attribute (object header message is too large)

#+end_example

~libver=('v108', 'v108')~ also works. (=v108= corresponds to HDF5 1.8.x).

* Clinic 2021-03-16
** Your questions

???

** Last week's highlights
*** Announcements
- [[https://forum.hdfgroup.org/t/webinar-announcement-hermes-a-distributed-buffering-system-for-heterogeneous-storage-hierarchies/8269][Webinar Announcement: Hermes – A Distributed Buffering System for
  Heterogeneous Storage Hierarchies]]
- [[https://forum.hdfgroup.org/t/hsds-version-0-6-3-released/8270][HSDS version 0.6.3 released]]
  - Grab the latest image on Docker Hub =hdfgroup/hsds:v0.6.3=!
*** Forum
**** [[https://forum.hdfgroup.org/t/multithreaded-writing-to-a-single-file-in-c/8264][Multithreaded writing to a single file in C++ ]]
- Beware of non-thread-safe wrappers or language bindings!
- Compiling the C library with =--enable-threadsafe= is only the first step
**** [[https://forum.hdfgroup.org/t/reference-manual-in-doxygen/8230][Reference Manual in Doxygen]]
- Making good progress; see [[https://github.com/HDFGroup/hdf5/tree/doxygen2][GitHub]] and [[https://hdf5.io/develop/index.html][preview]]
- What do you think?
- In which order should existing content be migrated? [[https://forum.hdfgroup.org/t/reference-manual-in-doxygen/8230][Chime in!]]
  - [[https://portal.hdfgroup.org/display/knowledge][HDF Knowledge Base]]?
- Examples:
  - [[https://hdf5.io/develop/api-compat-macros.html][API Compatibility Macros]]
  - [[https://hdf5.io/develop/_t_n_m_d_c.html][Metadata Caching in HDF5]]
  - [[https://hdf5.io/develop/_f_m_t.html][File Format Specification]]
**** [[https://forum.hdfgroup.org/t/h5i-get-name-call-is-very-slow-for-hdf5-file-5-gb/8246][~H5Iget_name~ call is very slow for HDF5 file > 5 GB]]
- [[https://portal.hdfgroup.org/display/HDF5/H5I_GET_NAME][~H5Iget_name~]] constructs /an/ HDF5 path name given an object identifier
  - _Use Case_: You are in a corner of an application where all you've got is a
    handle (identifier) and you would like to render something meaningful to
    humans.
- It's not so much the file size but the number and arrangement of objects that
  makes ~H5Iget_name~ slow
  - See the [[https://portal.hdfgroup.org/display/HDF5/h5stat][=h5stat=]] output the user provided!
- What contributes to ~H5Iget_name~ being slow?
  - The path names are not stored in an HDF5 file (except in symbolic links...)
    and are created on-demand
  - In general, HDF5 /arrangements/ are not trees, not even directed graphs, but
    directed multi-graphs
    - A node can be the target of multiple edges (including from the same source
      node)
    - Certain nodes (groups) can be source and target of an edge
- *Take-Home-Message:*Unless you are certain that your HDF5 arrangement is a
  tree, you are skating on thin ice with path names!
  - Trying to uniquely identify objects via path name is asking for trouble
    - Use addresses + file IDs (pre-HDF 1.12) or tokens (HDF 1.12+) for that!
- Quincey points out that
  - The library caches metadata that can accelerate ~H5Iget_name~
  - But there are other complications
    - For example, you can have "anonymous" objects (objects that haven't
    been linked to groups in the file. i.e., no path yet)
    - Another source of trouble are objects that have been unlinked

** Tips & tricks
*** How to open an HDF5 in append mode?

To be clear, there is no =H5F*= call that behaves like an append call. But we
can mimic one as follows:

*Credits:* Werner Benger

#+begin_src C -n

hid = H5Fcreate(filename, H5F_ACC_EXCL|H5F_ACC_SWMR_WRITE, fcpl_id, fapl_id);
if (hid < 0)
  {
    hid = H5Fopen(filename, H5F_ACC_RDWR|H5F_ACC_SWMR_WRITE, fapl_id);
  }

if (hid < 0)
  // something's going on...

#+end_src

- If the file exists ~H5Fcreate~ will fail and ~H5Fopen~ with ~H5F_ACC_RDWR~
  will kick in.
  - If the file is not an HDF5 file, both will fail.
- If the file does not exist, ~H5Fcreate~ will do its job.

* Clinic 2021-03-09
** Your questions (as of 9:00 a.m. Central Time)
*** Question 1
#+begin_quote
Is there a limit on array size if I save an array as an attribute of a dataset?

In terms of the performance, is there any consequence if I save a large amount
of data into an attribute?
#+end_quote

- Size limit :: No, not in newer versions (1.8.x+) of HDF5. See [[https://portal.hdfgroup.org/pages/viewpage.action?pageId=48808714][What limits are there in HDF5?]]
  - Make sure that downstream applications can handle such attributes (i.e., use
    HDF5 1.8.x or later)
  - Remember to tell the library that you want to use the 1.8 or later file
    format via [[https://portal.hdfgroup.org/display/HDF5/H5F_SET_LIBVER_BOUNDS][~H5Fset_libverbounds~]] (e.g., set ~low~ to ~H5F_LIBVER_V18~)
  - Also keep an eye on [[https://portal.hdfgroup.org/display/HDF5/H5P_SET_ATTR_PHASE_CHANGE][~H5Pset_attr_phase_change~]] (Consider setting ~max_compact~ to 0.)
- Performance :: It depends. (...on what you mean by /performance/)
  - Attributes have a different function (from datasets) in HDF5
    - They "decorate" other objects - application metadata
  - Their values are treated as atomic units, i.e., you will always write and
    read the entire "large" value.
    - In other words, you lose partial I/O
    - Several layouts available for datasets are not supported with attributes
      - No compression

*** Question 2
#+begin_quote
Question regarding hdf5 I/O performance, compare saving data into a large array
in one dataset Vs saving data into several smaller arrays and in several
dataset. Any consequence in terms of the performance? Will there be any sweet
spot for best performance? Or any tricks to make it reading/writing faster? I
know parallel I/O but parallel I/O would need hardware support which is not
always available. So the question is about the tricks to speed up I/O without
parallel I/O.
#+end_quote

- One large dataset vs. many small datasets, which is faster? :: It depends.
  - How do you access the data?
    - Do you always write/read the entire array in the order it was written?
    - Is it WORM (write once read many)?
      - How and how frequently does it change?
  - How compressible is the data?
    - Do you need to store data at all? E.g., [[https://www.hdfgroup.org/2021/02/webinar-learn-about-data-virtualization-with-hdf5-udf-and-how-it-can-streamline-your-work-materials/][HDF5-UDF]]
  - What is performance for you and how do you measure it?
  - What percentage of total runtime does your application spend doing I/O?
  - What scalability behavior do you expect?
  - Assuming throughput is the measure, create a baseline for your target
    system, for example, via [[https://fio.readthedocs.io/en/latest/fio_doc.html][FIO]] or [[https://github.com/hpc/ior][IOR]]
    - Your goal is to saturate the I/O subsystem
    - Is this a dedicated system?
  - Which other systems do you need to support? Are you the only user? What's
    the future?
  - **What's the budget?**

** Last week's highlights
*** Announcements
**** [[https://forum.hdfgroup.org/t/ann-h5py-3-2-released/8232][h5py 3.2 release]]
- Supports the HDF5 S3 (read-only) VFD thanks to Satrajit Ghosh
  - Need to [[https://docs.h5py.org/en/stable/build.html#source-install][build h5py from source]]
- Minimum Python version 3.7
- Interesting bugfix: [[https://github.com/h5py/h5py/issues/1817][Fix reading data with a datatype of variable-length arrays of fixed length strings]]
**** HDF5 Community BOF at ECP Community BOF Days
- March 30, 3:00 p.m. (Eastern)
- [[https://exascaleproject.zoomgov.com/meeting/register/vJItf-Chrj4jH9xNnStZkPE-P84YcZ52-7s][Registration]]
*** Forum
**** [[https://forum.hdfgroup.org/t/get-object-header-size/8233][Get Object Header size]]
- The user created a compound type with 100s of fields and eventually saw this
  error:
  #+begin_example
H5Oalloc.c line 1312 in H5O__alloc(): object header message is too large
  #+end_example
- This issue was first raised (Jira-ticket HDFFV-1089 date) on  Jun 08, 2009
- **Root cause:** the size of header message data is represented in a 2 byte
  unsigned integer (see section IV.A.1.a and IV.A.1.b of the [[https://portal.hdfgroup.org/display/HDF5/File+Format+Specification][HDF5 file format spec.]])
  - Ergo, header messages, currently, cannot be larger than 64 KB.
  - Datatype information is stored in a header message (see section IV.A.2.d)
  - This can be fixed with a file format update, but it's /fallen through the
    cracks/ for over 10 years
- The customer is always right, but who needs 100s of fields in a compound type?
  - _Use Case_: You have a large record type and you always (or most of the
    time) read and write all fields together.
  - Outside this narrow use case you are bound to lose a lot of performance and
    flexibility
- You are Leaving the +American Sector+ Mainstream: not too many tools will be
  able to handle your data
- Better approach: divide-and-conquer, i.e., go w/ a group of compounds or
  individual columns
**** [[https://forum.hdfgroup.org/t/using-hdf5-in-qt-creator/8194][Using HDF5 in Qt Creator]]
- Linker can't find ~H5::FileAccPropList()~ and ~H5::FileCreatPropList()~
- Works fine in release mode, but not in debug mode
- AFAIK, we don't distribute debug libraries in binary form. Still doesn't
  explain why the user couldn't use the release binaries in a debug build,
  unless QT Creator is extra pedantic?
**** [[https://forum.hdfgroup.org/t/reference-manual-in-doxygen/8230][Reference Manual in Doxygen]]
- Making good progress; see [[https://github.com/HDFGroup/hdf5/tree/doxygen2][GitHub]] and [[https://hdf5.io/develop/index.html][preview]]
- What do you think?
- In which order should existing content be migrated? [[https://forum.hdfgroup.org/t/reference-manual-in-doxygen/8230][Chime in!]]
  - [[https://portal.hdfgroup.org/display/knowledge][HDF Knowledge Base]]?
- Examples:
  - [[https://hdf5.io/develop/api-compat-macros.html][API Compatibility Macros]]
  - [[https://hdf5.io/develop/_t_n_m_d_c.html][Metadata Caching in HDF5]]
  - [[https://hdf5.io/develop/_f_m_t.html][File Format Specification]]
**** [[https://forum.hdfgroup.org/t/h5i-get-name-call-is-very-slow-for-hdf5-file-5-gb/8246][~H5Iget_name~ call is very slow for HDF5 file > 5 GB]]
- [[https://portal.hdfgroup.org/display/HDF5/H5I_GET_NAME][~H5Iget_nname~]] constructs /an/ HDF5 path name given an object identifier
  - _Use Case_: You are in a corner of an application where all you've got is a
    handle (identifier) and you would like to render something meaningful to
    humans.
- It's not so much the file size but the number and arrangement of objects that
  makes ~H5Iget_name~ slow
  - See the [[https://portal.hdfgroup.org/display/HDF5/h5stat][=h5stat=]] output the user provided!
- What contributes to ~H5Iget_name~ being slow?
  - The path names are not stored in an HDF5 file (except in symbolic links...)
    and are created on-demand
  - In general, HDF5 /arrangements/ are not trees, not even directed graphs, but
    directed multi-graphs
    - A node can be the target of multiple edges (including from the same source
      node)
    - Certain nodes (groups) can be source and target of an edge
- *Take-Home-Message:*Unless you are certain that your HDF5 arrangement is a
  tree, you are skating on thin ice with path names!
  - Trying to uniquely identify objects via path name is asking for trouble
    - Use addresses + file IDs (pre-HDF 1.12) or tokens (HDF 1.12+) for that!

* Clinic 2021-03-02
** Your questions
*** [[https://github.com/steven-varga/h5rnd][h5rnd]]
- **Question:** How are generated HDF5 objects named?  An integer name, or can a
  randomized string be used?
  - =h5rnd= Generates a pool of random strings as link names
  - Uniform length distribution between 5 and 30 over =[a-z][A-Z]=

- **Question:** Does it create multi-dimensional datasets with a rich set of
  HDF5 datatypes?  Compound datatypes, perhaps?
  - Currently, it creates 1,000 element 1D FP64 datasets (w/ attribute)
  - RE: types - anything is possible. Budget?

- **Question:** Are named datatypes generated? If not, are these reasonable
  types of extensions for =h5rnd=?
  - Not currently, but anything is possible

*** Other questions?
- **Question:** How do these extensions fit with the general intent and
  extensibility of =h5rnd=?
  - It was written as an illustration
  - Uses an older version of H5CPP
  - Labeling could be improved
  - Dataset generation under development
  - Some enhancements in a future version

** Last week's highlights
*** Forum
**** [[https://forum.hdfgroup.org/t/external-link-access-in-parallel-hdf5-1-12-0/8219][External link access in parallel HDF5 1.12.0]]
- Can't access externally linked datasets in parallel; fine in 1.10.x and in serial
- It appears that someone encountered a known bug in the field
- Dev. claim it's fixed in =develop=, waiting for confirmation from the user

**** [[https://forum.hdfgroup.org/t/h5i-dec-ref-hangs/8104][=H5I_dec_ref= hangs]]
- [[https://portal.hdfgroup.org/display/HDF5/H5I_DEC_REF][=H5Idec_ref=]] is one of those functions that needs to be used w/ extra care
- Using =mpi4py= and =h5py=
- User provided an MWE (in Python) and, honestly, there is limited help we can
  offer (as we are neither =mpi4py= nor =h5py= experts)
- A C or C++ MWE might be the better starting point

**** [[https://forum.hdfgroup.org/t/h5diff-exits-with-1-but-doesnt-print-differences/6872][=h5diff= exits with 1 but doesn’t print differences]]
- Case of out-of-date/poor documentation
- [[https://portal.hdfgroup.org/display/HDF5/h5diff][=h5diff=]] is perhaps the most complex tool (multi-graph comparison + what does
  ~'='~ mean?)
- Writing code is the easy part
- We need to do better

**** [[https://forum.hdfgroup.org/t/independent-datasets-for-mpi-processes-progress/8202][Independent datasets for MPI processes. Progress?]]
- Need some clarification on the problem formulation
- Current status (w/ MPI) MD-modifying ops. must be collective
- On the horizon: asynchronous operations (ASYNC VOL)

**** [[https://forum.hdfgroup.org/t/writing-to-virtual-datasets/8188][Writing to virtual datasets]]
- Apparently broken when a datatype conversion (truncation!) is involved

* Clinic 2021-02-23
** Your questions
*** How to use ~H5Ocopy~ in C++ code?
- [[https://forum.hdfgroup.org/t/how-to-use-h5copy-in-c-code/8175][Forum post]]
  #+begin_quote
  sandhya.v250 (Feb 19)

  Hello Team, I want to copy few groups from one hdf5 file to hdf5 another file
  which is not yet created and this should be done inside the C++ code..can you
  please tell me how can I use this inside this tool
  #+end_quote

- The [[https://portal.hdfgroup.org/display/HDF5/H5O_COPY][function in question]]  (there is also a tool called =h5copy=):
  #+begin_src C

  herr_t H5Ocopy
  (
   hid_t       src_loc_id,
   const char* src_name,
   hid_t       dst_loc_id,
   const char* dst_name,
   hid_t       ocpypl_id,
   hid_t       lcpl_id
   );

  #+end_src

- The emphasis  appears to be on C++
  - You can do this in C. It's just more boilerplate.
  - Whenever I need something C++, I turn to my colleague Steven Varga (=
    Mr. [[http://h5cpp.org/][H5CPP]])
  - He also created a nice [[https://github.com/steven-varga/h5rnd][random HDF5 file generator/tester]] (= 'Prüfer' in
    German)

*** Steven's solution (excerpt)

The full example can be downloaded from [[https://github.com/steven-varga/HDFGroup-mailinglist/tree/master/object-copy-2021-feb-18][here]].

**Basic idea:** Visit all objects in the source via ~H5Ovisit~ and invoke
~H5Ocopy~ in the callback.

#+begin_src C++ -N

#include "argparse.h"
#include <h5cpp/all>
#include <string>

herr_t ocpy_callback(hid_t src, const char *name, const H5O_info_t *info,
                     void *dst_) {
  hid_t* dst = static_cast<hid_t*>(dst_);
  int err = 0;
  switch( info->type ){
  case H5O_TYPE_GROUP:
    if(H5Lexists( *dst, name, H5P_DEFAULT) >= 0)
      err = H5Ocopy(src, name, *dst, name, H5P_DEFAULT, H5P_DEFAULT);
    break;
  case H5O_TYPE_DATASET:
    err = H5Ocopy(src, name, *dst, name, H5P_DEFAULT, H5P_DEFAULT);
    break;
  default: /*H5O_TYPE_NAMED_DATATYPE, H5O_TYPE_NTYPES, H5O_TYPE_UNKNOWN */
    ; // nop to keep compiler happy
  }
  return 0;
}

int main(int argc, char **argv)
{
  argparse::ArgumentParser arg("ocpy", "0.0.1");
  arg.add_argument("-i", "--input")
    .required().help("path to input hdf5 file");
  arg.add_argument("-s", "--source")
    .default_value(std::string("/"))
    .help("path to group within hdf5 container");
  arg.add_argument("-o", "--output").required()
    .help("the new hdf5 will be created/or opened rw");
  arg.add_argument("-d", "--destination")
    .default_value(std::string("/"))
    .help("target group");

  std::string input, output, source, destination;
  try {
    arg.parse_args(argc, argv);
    input = arg.get<std::string>("--input");
    output = arg.get<std::string>("--output");
    source = arg.get<std::string>("--source");
    destination = arg.get<std::string>("--destination");

    h5::fd_t fd_i = h5::open(input, H5F_ACC_RDONLY);
    h5::fd_t fd_o = h5::create(output, H5F_ACC_TRUNC);
    h5::gr_t dgr{H5I_UNINIT}, sgr = h5::gr_t{H5Gopen(fd_i, source.data(),
                                                     H5P_DEFAULT)};
    h5::mute();
    if( destination != "/" ){
      char * gname = destination.data();
      dgr = H5Lexists(fd_o, gname, H5P_DEFAULT) >= 0 ?
        h5::gr_t{H5Gcreate(fd_o, gname, H5P_DEFAULT, H5P_DEFAULT,
                           H5P_DEFAULT)}
        : h5::gr_t{H5Gopen(fd_i, gname, H5P_DEFAULT)};
      H5Ovisit(sgr, H5_INDEX_CRT_ORDER, H5_ITER_NATIVE, ocpy_callback, &dgr );
    } else
      H5Ovisit(sgr, H5_INDEX_CRT_ORDER, H5_ITER_NATIVE, ocpy_callback, &fd_o);
    h5::unmute();
  } catch ( const h5::error::any& e ) {
    std::cerr << e.what() << std::endl;
    std::cout << arg;
  }
  return 0;
}

#+end_src

*** Parting thoughts
- This is can be tricky business depending on how selective you want to be
- ~H5Ovisit~ visits /objects/ and does not account for dangling links, etc.
- ~H5Ocopy~'s behavior is highly customizable. Check the options & play w/
  =h5copy= to see the effect!

*** More Questions
**** Question 1
#+begin_quote
I have an unrelated question. I have 7,000 HDF5 files, each 500 MB long. When I
use them, should I open them selectively, when I need them, or is it
advantageous to make one big file, or to open virtual files? I am interested in
the speed of the different approaches.
#+end_quote

- 40 GbE connectivity
- 10 contiguously laid out Datasets per file => ~50 MB per dataset
- Always reading full datasets
- **Considerations:**
  - If you have the RAM and use all data in an "epoch" just read whole files and
    use [[https://support.hdfgroup.org/HDF5/doc/Advanced/FileImageOperations/HDF5FileImageOperations.pdf][HDF5 file images]] for "in-memory I/O."
  - You could maintain an index file /I/ which contains external links (one for
    each of the 7,000 files), and a dataset which for each external file and
    dataset contains the offset of the dataset in the file. You would keep /I/
    (small!) in memory and, for each dataset request, read the ~50MB directly
    w/o the HDF5 library. This assumes that no datatype conversion is necessary
    and you have no trouble interpreting the bytes.
  - A variation of the previous approach would be for the stub-file to contain
    HDF5 [[https://www.star.nesdis.noaa.gov/jpss/documents/HDF5_Tutorial_201509/2-3-Working%20with%20collections%20of%20HDF5%20files.pptx.pdf][/virtual datasets/]], datasets stitched together from other
    datasets. This would we a good option, if you wanted to simplify your
    application code and make everything appear as a single large HDF5
    file. It'd be important though to have that (small) stub-file on the clients
    in memory to not incur a high latency penalty.
  - Both approaches can be easily parallelized, assuming read-only access. If
    there are writers involved, it's still doable, but additional considerations
    apply.

#+begin_quote
Another question: what is the recommended way to combine Python with C++ with
C++ reading in and working on large hdf5 files that require a lot of speed.
#+end_quote

- To be honest, we ran out of time and I (GH) didn't fully grasp the question.
- Steven said something about Julia
- Henric uses Boost Python.  What about Cython?
- What's the access pattern?

  **Let's continue the discussion on the forum or come back next week!**

** Last week's highlights
*** Forum
- [[https://forum.hdfgroup.org/t/possible-bug-with-hyperslab-selection-in-1-10-7/8164][Hyperslab selection bug confirmed]]
- [[https://forum.hdfgroup.org/t/write-data-to-variable-length-string-attribute/8101][Write data to variable length string attribute]] bug is a feature =;-)=
- [[https://forum.hdfgroup.org/t/creating-a-dataset-through-external-link-does-not-allow-hdf5view-to-see-resulting-dataset-from-root-file/8148][Possible bug in HDFView]]
  - The [[https://en.wikipedia.org/wiki/Minimal_working_example][MWE]] checks out and it looks more and more like a bug in HDFView

** Appendix
*** The =h5copy= command line tool

#+begin_example
gerd@guix ~$ h5copy

usage: h5copy [OPTIONS] [OBJECTS...]
   OBJECTS
      -i, --input        input file name
      -o, --output       output file name
      -s, --source       source object name
      -d, --destination  destination object name
   OPTIONS
      -h, --help         Print a usage message and exit
      -p, --parents      No error if existing, make parent groups as needed
      -v, --verbose      Print information about OBJECTS and OPTIONS
      -V, --version      Print version number and exit
      --enable-error-stack
                  Prints messages from the HDF5 error stack as they occur.
      -f, --flag         Flag type

      Flag type is one of the following strings:

      shallow     Copy only immediate members for groups

      soft        Expand soft links into new objects

      ext         Expand external links into new objects

      ref         Copy references and any referenced objects, i.e., objects
                  that the references point to.
                    Referenced objects are copied in addition to the objects
                  specified on the command line and reference datasets are
                  populated with correct reference values. Copies of referenced
                  datasets outside the copy range specified on the command line
                  will normally have a different name from the original.
                    (Default:Without this option, reference value(s) in any
                  reference datasets are set to NULL and referenced objects are
                  not copied unless they are otherwise within the copy range
                  specified on the command line.)

      noattr      Copy object without copying attributes

      allflags    Switches all flags from the default to the non-default setting

      These flag types correspond to the following API symbols

      H5O_COPY_SHALLOW_HIERARCHY_FLAG
      H5O_COPY_EXPAND_SOFT_LINK_FLAG
      H5O_COPY_EXPAND_EXT_LINK_FLAG
      H5O_COPY_EXPAND_REFERENCE_FLAG
      H5O_COPY_WITHOUT_ATTR_FLAG
      H5O_COPY_ALL
  #+end_example

* Clinic 2021-02-09
**THIS MEETING IS BEING RECORDED** and the recording will be available on The
HDF Group's [[https://www.youtube.com/channel/UCRhtsIZquL3r-zH-R-r9-tQ][YouTube channel]]. Remember to subscribe!

** Goal(s)
** This is a meeting dedicated to /your/ questions.
** In the unlikely event there aren't any
We have a few prepared topics (forum posts, announcements, etc.)
** Sometimes life deals you an HDF5 file
No question is too small. We are here to learn. All of us.

** Meeting Etiquette
** Be social, turn on your camera (if you've got one)
Talking to black boxes isn't fun.

** Raise your hand to signal a contribution (question, comment)
Mute yourself while others are speaking, be ready to participate.

** Be mindful of your "airtime"
We want to cover as many of your topics as possible. Be fair to others.

** Introduce yourself
1. Your Name
2. Your affiliation/organization/group
3. One reason why you are here today

** Use the shared Google doc for questions and code snippets
The [[https://docs.google.com/document/d/17j7MsAdNdCLxxWA_PtXv3jTgWDTqOm2uTk5jHCj8zXM/edit][link]] can be found in the chat window.

** When the 30 min. timer runs out, this meeting is over.
Continue the discussion on the [[https://forum.hdfgroup.org/][HDF Forum]] or come back next week!

** Notes
** Don't miss our next webinar about data virtualization with HDF5-UDF and how it can streamline your work
- Presented by Lucas Villa Real (IBM Research)
- Feb 12, 2021 11:00 AM in Central Time (US and Canada)
- [[https://zoom.us/meeting/register/tJEsc-iqrj4iGNJirT52ttruJ1DH2uWmFV][Sign-up link]]

** Bug-of-the-Week Award (my candidate)
- [[https://forum.hdfgroup.org/t/write-data-to-variable-length-string-attribute/8101][Write data to variable length string attribute]] by Kerim Khemraev
- [[https://jira.hdfgroup.org/browse/HDFFV-11215][Jira issue HDFFV-11215]]
- Quick demonstration
  #+begin_src C++ :tangle ./foo4k.cpp
  #include "hdf5.h"

  #include <filesystem>
  #include <iostream>
  #include <string>

  #define H5FILE_NAME "Attributes.h5"
  #define ATTR_NAME   "VarLenAttr"

  namespace fs = std::filesystem;

  int main(int argc, char *argv[])
  {
    hid_t file, attr;

    auto attr_type = H5Tcopy(H5T_C_S1);
    H5Tset_size(attr_type, H5T_VARIABLE);
    H5Tset_cset(attr_type, H5T_CSET_UTF8);

    auto make_scalar_attr = [](auto& file, auto& attr_type)
      -> hid_t
    {
      auto attr_space  = H5Screate(H5S_SCALAR);
      auto result = H5Acreate(file, ATTR_NAME,
                              attr_type, attr_space,
                              H5P_DEFAULT, H5P_DEFAULT);
      H5Sclose(attr_space);
      return result;
    };

    if( !fs::exists(H5FILE_NAME) )
      { // If the file doesn't exist we create it &
        // add a root group attribute
        std::cout << "Creating file...\n";
        file = H5Fcreate(H5FILE_NAME, H5F_ACC_TRUNC,
                         H5P_DEFAULT, H5P_DEFAULT);
        attr = make_scalar_attr(file, attr_type);
      }
    else
      { // File exists: we either delete the attribute and
        // re-create it, or we just re-write it.
        std::cout << "Opening file...\n";
        file = H5Fopen(H5FILE_NAME, H5F_ACC_RDWR, H5P_DEFAULT);

  #ifndef REWRITE_ONLY
        H5Adelete(file, ATTR_NAME);
        attr = make_scalar_attr(file, attr_type);
  #else
        attr = H5Aopen(file, ATTR_NAME, H5P_DEFAULT);
  #endif
      }

    // Write or re-write the attribute
    const char* data[1] = { "Let it be λ!" };
    H5Awrite(attr, attr_type, data);

    hsize_t size;
    H5Fget_filesize(file, &size);
    std::cout << "File size: " << size << " bytes\n";

    H5Tclose(attr_type);
    H5Aclose(attr);
    H5Fclose(file);
  }
  #+end_src

** Documentation update
- Doxygen-based RM
- Remaining: a few =H5P=  calls and =H5E=
- Current version: [[https://hdf5.io/develop/modules.html]]

* Clinic 2021-02-16
<<sec:clinic20210216>>
** Your questions
** Last week's highlights
*** Events
- [[https://www.youtube.com/watch?v=7ZYZKB7DNUg][Webinar: /Learn about data virtualization with HDF5-UDF and how it can
  streamline your work/]]
- [[https://www.youtube.com/watch?v=g5h_YlvI9Aw][Recording of last week's clinic]]
*** Forum
- [[https://forum.hdfgroup.org/t/hdfql-2-3-0-release-with-excel-import-export-support/8132][Release of HDFql 2.3.0]]
  - Excel import and export (no Excel or OLE dependency!)
- [[https://forum.hdfgroup.org/t/creating-a-dataset-through-external-link-does-not-allow-hdf5view-to-see-resulting-dataset-from-root-file/8148][Possible bug in HDFView]]
  - Based on the description, it appears that external links are not properly
    traversed
  - Waiting for [[https://en.wikipedia.org/wiki/Minimal_working_example][MWE]]
- [[https://forum.hdfgroup.org/t/possible-bug-with-hyperslab-selection-in-1-10-7/8164][Possible hyperslab selection bug in 1.10.7]]
  - It appears that =H5S_SELECT_OR= is no longer "commutative", i.e., ~H5Dread~
    with =SelA OR SelB= works, but not =SelB OR SelA=
  - Wasn't there in 1.10.6
** Notes
*** What (if any) are the ACID properties of HDF5 operations?
**** Split-state
The state of an open (for RW) HDF5 file is /split/ between RAM and persistent
storage. Often the partial states will be out of sync. In the event of a
"catastrophic" failure (power outage, application crash, system crash), it is
impossible to predict what the partial state on disk will be.

#+begin_src plantuml :file ../img/hdf5-file-state.png :exports both
skinparam componentStyle rectangle

package "HDF5 File State" {
    database "Disk" {
        [Partial State 1]
    }
    cloud "RAM" {
        [Partial State 2]
    }
}
#+end_src

**** Non-transactional
The main reason why it is impossible to predict the outcome is that HDF5
operations are non-transactional. By 'transaction' I mean a collection of
operations (and the effects of their execution) on the physical and abstract
application state. In particular, there are no concepts of beginning a
transaction, a commit, or a roll-back. Since they are not transactional, it is
not straightforward to speak about the ACID properties of HDF5 operations.

**** File system facilities
People sometimes speak about ACID properties with respect to file system
operations. Although the HDF5 library relies on file system operations for the
implementation of HDF5 operations, the correspondence is not as direct as
might wish. For example, what appears as a single HDF5 operation to the user
often includes multiple file system operations. Several file system operations
have a certain property only at the level of a single operation, but not
multiple operations combined.

**** ACID
- Atomicity :: All changes to an HDF5 file's state must complete or fail as a
  whole unit.
  - Supported in HDF5? **No.**
  - Some file systems only support single op. atomicity, if at all.
  - A lot of HDF5 operations are /in-place/; mixed success -> impossible to
    recover
- Consistency :: An operation is a correct transformation of the HDF5 file's
  state.
  - Supported in HDF5? **Yes and No**
  - Depends on one's definition of HDF5 file/object integrity constraints
  - Assuming we are dealing with a correct program
  - Special case w/ multiple processes: Single Writer Multiple Reader
- Isolation (serialization) :: Even though operations execute concurrently, it
  appears to each operation, OP, that others executed either before OP or after
  OP, but not both.
  - Supported in HDF5? **No.**
  - Depends on concurrency scenario and requires special configuration (e.g.,
    MT, MPI).
  - Time-of-check-time-of-use vulnerability
- Durability :: Once an operation completes successfully, it's changes to the
  file's state survive failure.
  - Supported in HDF5? **No.**
  - "Split brain"
  - No transaction log

* COMMENT Anatomy
A few /skeletons/ to get started.

** C

#+begin_src C -r -n :tangle ctd.c :noweb no-export :results output

#include "hdf5.h"

int main(int argc, char** argv)
{
  <<main-variables>>

                  <<print-library-version>>

                  <<create-or-open-a-file>>

                  <<release-handles>>
    }

#+end_src

*** =h5dump=

#+begin_src sh :results output

h5dump -pB hello.hdf5

#+end_src

*** =<<main-variables>>=

#+begin_src C -r -n :noweb-ref main-variables

hid_t file, lcpl;

lcpl = H5Pcreate(H5P_LINK_CREATE);
H5Pset_create_intermediate_group(lcpl, 1);

#+end_src

*** =<<release-handles>>=

#+begin_src C -r -n :noweb-ref release handles

H5Fclose(file);
H5Pclose(lcpl);

#+end_src

*** =<<print-library-version>>=

#+begin_src C -r -n :noweb-ref print-library-version

{
  unsigned majnum, minnum, relnum;
  H5get_libversion(&majnum, &minnum, &relnum);
  printf("HDF5 version %u.%u.%u\n", majnum, minnum, relnum);
}

#+end_src

*** =<<create-or-open-file>>=

#+begin_src C -r -n :noweb-ref create-or-open-a-file

{
  /*
    hid_t fcpl = H5Pcreate(H5P_FILE_CREATE);
    hid_t fapl = H5Pcreate(H5P_FILE_ACCESS);
  ,*/
  file = H5Fcreate("hello.hdf5", H5F_ACC_TRUNC, H5P_DEFAULT, H5P_DEFAULT);
  /*
    H5Pclose(fapl);
    H5Pclose(fcpl);
  ,*/
}

#+end_src

** Julia
** Python
** R

* COMMENT Helpers

#+begin_src emacs-lisp

(defun 25min-countdown ()
  (interactive)
  (setq org-timer-default-timer 25
        current-prefix-arg '(4 4)) ; C-u C-u
  (call-interactively 'org-timer-set-timer))

#+end_src

* COMMENT Local Variables

# Local Variables:
# org-babel-C-compiler: h5cc
# org-coderef-label-format: "// (ref:%s)"
# after-save-hook: org-preview-latex-fragment
# End:
